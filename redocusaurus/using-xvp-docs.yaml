openapi: 3.0.1
info:
  title: XVP Disco API
  description: Experience API for searching.
  contact:
    name: General - XVP
    url: >-
      https://teams.microsoft.com/l/channel/19%3a4e4a799bbdbe44cda9367092dc06b56b%40thread.tacv2/General?groupId=275c7322-14e6-4a33-9974-001ec81a2cd7&tenantId=906aefe9-76a7-4f65-b82d-5ec20775d5aa
    email: 7c17b282.comcastcorp.onmicrosoft.com@amer.teams.ms
servers:
  - url: https://disco-dev.exp.xvp.na-1.xcal.tv
    description: Generated server url
security:
  - sat: []
tags:
  - name: Metadata
    description: API to provide Entity Meta Data information based on EntityId
paths:
  /v1/partners/{partnerId}/programs/sortAll:
    post:
      tags:
        - Personalization
      summary: Personalized sorting of lists programs by ID
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Accepts a list of named lists of Merlin program IDs to be sorted based
        on XVP Personalization algorithm.

        Supports sorting of Movies, SeriesMaster and Epidoses - however episodes
        will be ranked based on its SeriesMaster position

        only - not ranked related to each other.

        Response schema will return lists of Browse program objects containing
        only the `programId` field.


        IgnoreAvailability filter determines whether or not to perform
        availability check on input program ids. Default value is false.

        ignoreAvailability=true - Will skip calling session for Availability and
        Will return all requested sorted programs.

        ignoreAvailability=false - Will call session for Availability and will
        return only available programs and drop unavailable programs the
        response.
      operationId: programsSortAll
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
        - name: ignoreAvailability
          in: query
          description: >-
            Allows to determine whether or not to perform availability check for
            input program ids.
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SortAllRequestBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SortAllResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
  /v1/partners/{partnerId}/ids/externalIds:
    post:
      tags:
        - Metadata
      summary: Converts OTT Entity IDs into Merlin IDs.
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Accepts a list of `externalEntityIds` (OTT entity IDs) as well as the
        associated `durableAppId`.

        Returns a list of the corresponding/mapped Merlin IDs.

        Partner ID is required by XVP for SAT token validation, but it is not
        used by the API when computing results.

        Since Merlin IDs may vary by territory, there may be more than one
        Merlin ID for any given OTT ID.

        To narrow down results to a single Merlin ID, territory must be
        provided.

        Territory is a 2 letter code defined in ISO-3166-2 standards.

        IDs in the response must be deduplicated.

        If the same OTT ID is requested more than once within a request, the
        response will only contain a single copy of it.

        If for a given OTT ID, Merlin IDs should not appear more than once.

        All requested IDs should appear in the response once - even if not
        mapped to any Merlin IDs.

        If the API fails to convert the OTT ID to a Merlin ID, it should still
        return the requested OTT ID mapped to an empty array of Merlin IDs.

        The API will not retain the order of entity IDs in the request and no
        particular order is enforced for results.

        Only Netflix and Vudu Program IDs are supported at this time.
      operationId: resolveExternalIds
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: durableAppId
          in: query
          description: >
            Conveys the external (OTT) ID space - the namespace for the
            externalEntityId.

            It is the standardized name of the OTT app within the platform.
          required: true
          schema:
            type: string
          examples:
            Netflix:
              description: Netflix
              value: Netflix
        - name: territory
          in: query
          description: |
            Indicates the territory of the partner associated with this request.
            Territory is a 2 letter code defined in ISO-3166-2 standards.
          required: false
          schema:
            type: string
          examples:
            GB:
              description: GB
              value: GB
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalIdsRequestBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalIdsResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RFC7807Response'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RFC7807Response'
  /v1/partners/{partnerId}/entities/byId:
    post:
      tags:
        - Search
      summary: >-
        Performs basic availability check on the Merlin entity IDs accepted in
        the body of the request.
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Searches through a number of Merlin entity types across selected content
        catalogs matching on entityId field.

        Serves entity level results. May also serve a single episode with a
        linear showing firstAiring=true - the first airing listing only.

        Filters based on entity type and/or content catalogs - vod, linear,
        livod, locker and offers.

        Supports computing exclusivity. Be aware that exclusivity is computed
        within the context of the request - if any filters applied, may yield
        false positives.

        Does not support entitlement checks.

        Results are sorted by relevance in descending order.
      operationId: searchByIds
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: contentCatalogTypes
          in: query
          description: >-
            Defines what showing types the API should match on to compute
            results.
          required: true
          schema:
            type: array
            items:
              type: string
          examples:
            offer:
              description: offer
              value: offer
            linear:
              description: linear
              value: linear
            vod:
              description: vod
              value: vod
            livod:
              description: livod
              value: livod
            locker:
              description: locker
              value: locker
          example:
            - vod
            - linear
            - locker
        - name: entityType
          in: query
          description: >
            Merlin entity types to filter on.

            Supported values are: movie, seriesMaster, sportingEvent, person,
            team, channel, station and company.

            Note that we expanded the entityType program into its own types:
            movie, seriesMaster and sporting events.

            Episodes are not supported.

            If more than one entity types are provided, they will be ORed.

            If this param is omitted, all supported entity types will be
            considered and "unfiltered" result will be served.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            Station:
              description: Station
              value: station
            Movie:
              description: Movie
              value: movie
            Company:
              description: Company
              value: company
            SeriesMaster:
              description: SeriesMaster
              value: seriesMaster
            Team:
              description: Team
              value: team
            Menu:
              description: Menu
              value: menu
            Person:
              description: Person
              value: person
            SportingEvent:
              description: SportingEvent
              value: sportingEvent
            Other:
              description: Other
              value: other
          example:
            - movie
            - seriesMaster
        - name: computeExclusivity
          in: query
          description: >
            Computes whether a given entity in the response is exclusive to a
            certain third party app (OTT). Content exclusivity is defined by
            availability of a program on a single third party app platform.
            Content is considered exclusive to a third party app when:

            - Content is found to be only available through a single third party
            app

            - Content is found to not be available on the native platform

            Note that the computation of exclusivity is done in the context of
            the request. If there are filters applied to the request that
            reduces the search space, this parameter may yield false positives.

            When computeExclusivity=true the following fields will appear in the
            search response:

            - durableAppIds: array of durableAppId values indicating all of the
            third party platforms in which the content is available/playable -
            does not account for the native platform.

            - exclusiveTo: single durableAppId indicating the third party
            platform the content is exclusive to, if any.

            Note that content might still not be exclusive to any platforms even
            if only a single value appears in durableAppIds fields - if it is
            also available in the native platform.
          required: false
          schema:
            type: boolean
        - name: excludeVodOnlyCompany
          in: query
          description: >
            When searching for company entities, the API searches for Company
            objects associated with Station objects

            - linear companies - and Media objects - vod companies.

            In most cases VOD and Linear companies overlap, but not always.
            There are cases where a Company only has Station association or only
            has Media associations.

            The API allows for optionally droping the search for Companies with
            Media associations and only search accross the linear space. This is
            not standard behavior, but it is implemented for backwards
            compatibility of legacy use cases.
          required: false
          schema:
            type: boolean
        - name: firstAiring
          in: query
          description: |2
                Used to request the earliest linear listing for each top level program.  Default is false.
          required: false
          schema:
            type: boolean
            default: false
        - name: f2mVod
          in: query
          description: >-
            Used to specify whether to return vod content that is free or
            not-free to

            specified account. This is applied to vod catalog only, if specified
            in the request.
          required: false
          deprecated: true
          schema:
            type: boolean
        - name: videoQuality
          in: query
          description: >-
            Specified to filter the showings based on video quality.  When
            multiple values are specified, they will be ORed.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            HD:
              description: HD
              value: HD
          example:
            - HD
            - UHD
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: adult
          in: query
          description: >
            Filters all catalog content by whether they have been tagged as
            adult oriented.

            Applies to both linear and vod content catalog types.

            Also filters stations if those are tagged as adult stations but does
            not affect channel availability until and unless explicitly passed.

            Supported values are: include, exclude and only.


            * `include`: includes content and stations matching search query
            that have been tagged as adult oriented.

            * `exclude` [DEFAULT]: excludes content and stations that have been
            tagged as adult oriented. When explicitly passed, this excludes
            channels as well.

            * `only`: includes only the content and stations that have been
            tagged as adult oriented.


            When this param is omitted, it will be defaulted to exclude but the
            API will still return channels that are tagged as adult oriented.

            Explicitly passing adult=exclude only excludes the channels along
            with catalog content and stations.

            Adult parameter conflicts with Kids parameter and kids takes
            precedence.

            Ex: `kids=only&adult=include` would serve only kids friendly catalog
            content.
          required: false
          schema:
            type: string
            example: exclude
            default: exclude
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: entityField
          in: query
          description: >
            Allows to specify a list of program level metadata fields to be

            included in the API response.  When this param is not used, the
            program

            metadata would contain only programId and programType fields.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: channelField
          in: query
          description: >
            Allows to specify a list of channel metadata fields to be included
            in the

            showing object.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: showingField
          in: query
          description: >
            Allows to specify a list of showing level fields to be included in
            the

            API response.  When this param is not used, the showings object
            would

            contain only mediaId and mediaGuid fields.
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          example:
            - programId
            - rating
            - cc
            - providerCompanies
            - distributorCompanies
            - linearCompanies
            - networkGroupCompanies
        - name: limit
          in: query
          description: >
            Defines the maximum number of text search results to return in the
            page.

            There may be less items to return than specified by the param.
          required: false
          schema:
            maximum: 300
            minimum: 1
            type: integer
            default: 20
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              maxItems: 300
              minItems: 1
              type: array
              description: The JSON object containing list of Merlin entity IDs to check.
              items:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: >-
            Returned for invalid or unsupported parameter in the input request.
            For example if an invalid field is requested from the API through
            entityField parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: Server understood the request but refuses to authorize it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RFC7807Response'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RFC7807Response'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RFC7807Response'
  /v1/partners/{partnerId}/search/byText:
    get:
      tags:
        - Search
      summary: >-
        Performs basic text based (alpha) search and returns entities of one or
        more types
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Searches the input query string through a number of entity types across
        selected content catalog types matching on names and titles.

        Content Availability is resolved based on the ARS blob in context.

        At this time this API only supports alpha searches. T9 support will be
        added at a later date.

        This API serves entity results only - showing information is not
        suported even though filtering on content catalogs are to be applied at
        the showing level.

        Content catalogs currently supported by this API are vod, linear, livod,
        locker and offers.

        This API provides optional query params to filter the result by catalog
        types, offers, entity types, program types, kids friendly, airing type
        (for linear) and video formats.

        Offers of type ppv are currently out of scope and this API would not
        return any pay-per-view content.

        Search results may be of multiple languages since we don't yet support
        language filters.
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: searchByText
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: query
          in: query
          description: The actual text search query.
          required: true
          schema:
            type: string
          example: game of thrones
        - name: contentCatalogTypes
          in: query
          description: >-
            Defines what showing types the API should match on to compute
            results.
          required: true
          schema:
            type: array
            items:
              type: string
          examples:
            offer:
              description: offer
              value: offer
            linear:
              description: linear
              value: linear
            vod:
              description: vod
              value: vod
            livod:
              description: livod
              value: livod
            locker:
              description: locker
              value: locker
          example:
            - vod
            - linear
            - locker
        - name: entityType
          in: query
          description: >
            Merlin entity types to filter on.

            Supported values are: movie, seriesMaster, sportingEvent, person,
            team, channel, station and company.

            Note that we expanded the entityType program into its own types:
            movie, seriesMaster and sporting events.

            Episodes are not supported.

            If more than one entity types are provided, they will be ORed.

            If this param is omitted, all supported entity types will be
            considered and "unfiltered" result will be served.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            Station:
              description: Station
              value: station
            Movie:
              description: Movie
              value: movie
            Company:
              description: Company
              value: company
            SeriesMaster:
              description: SeriesMaster
              value: seriesMaster
            Channel:
              description: Channel
              value: channel
            Team:
              description: Team
              value: team
            Menu:
              description: Menu
              value: menu
            Person:
              description: Person
              value: person
            SportingEvent:
              description: SportingEvent
              value: sportingEvent
            Other:
              description: Other
              value: other
          example:
            - movie
            - seriesMaster
        - name: airingType
          in: query
          description: >
            Specified to filter the linear content by airing type.

            "If one or more values are included in the request, they will be
            OR'ed.

            "Unlike Browse API, this API does NOT support conditional
            expressions using AND/OR/NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            new:
              description: new
              value: new
            taped:
              description: taped
              value: taped
            repeat:
              description: repeat
              value: repeat
            live:
              description: live
              value: live
          example:
            - taped
            - live
            - repeat
            - new
        - name: videoQuality
          in: query
          description: >-
            Specified to filter the showings based on video quality.  When
            multiple values are specified, they will be ORed.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            HD:
              description: HD
              value: HD
          example:
            - HD
            - UHD
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: kids
          in: query
          description: >
            Used to control serving of content tagged as kids friendly.

            Supported values are:


            * `include` - Include the content which have the kids property set
            to true.

            * `exclude` - Exclude the content which have the kids property set
            to true.

            * `only` - Include ONLY the content which have the kids property set
            to true.
          required: false
          schema:
            type: string
            default: include
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: adult
          in: query
          description: >
            Filters all catalog content by whether they have been tagged as
            adult oriented.

            Applies to both linear and vod content catalog types.

            Also filters stations if those are tagged as adult stations but does
            not affect channel availability until and unless explicitly passed.

            Supported values are: include, exclude and only.


            * `include`: includes content and stations matching search query
            that have been tagged as adult oriented.

            * `exclude` [DEFAULT]: excludes content and stations that have been
            tagged as adult oriented. When explicitly passed, this excludes
            channels as well.

            * `only`: includes only the content and stations that have been
            tagged as adult oriented.


            When this param is omitted, it will be defaulted to exclude but the
            API will still return channels that are tagged as adult oriented.

            Explicitly passing adult=exclude only excludes the channels along
            with catalog content and stations.

            Adult parameter conflicts with Kids parameter and kids takes
            precedence.

            Ex: `kids=only&adult=include` would serve only kids friendly catalog
            content.
          required: false
          schema:
            type: string
            example: exclude
            default: exclude
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: vodType
          in: query
          description: >
            When specified, filters the vod content based on associated
            offer.purchaseCategory.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy, ppv, rent}. Note that BuyMA will
            be converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            ppv:
              description: ppv
              value: ppv
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: livodType
          in: query
          description: >
            When specified, filters the livod content based on specified offer
            types.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy,ppv,rent}. Note that BuyMA will be
            converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            ppv:
              description: ppv
              value: ppv
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: offerType
          in: query
          description: |
            Filters the content based on specified offer types.
            When multiple offer types are passed, they will be ORed.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            ppv:
              description: ppv
              value: ppv
            preorder:
              description: preorder
              value: preorder
        - name: preferredLanguage
          in: query
          description: >
            Allows to specify language preference.

            If a program has non-english variant then that program will be
            returned in place of original program.

            Expects a language culture code, which is comprised of two lowercase
            characters (representing language) with an optional hyphen plus two
            uppercase characters (representing country/region).

            The language component is an ISO 639-1 value and the country
            component is an ISO 3166-1 alpha-2 value.

            Example language culture codes include `en-us` (English), `es-us`
            (Spanish), `fr-ca` (Canadian French).
          required: false
          schema:
            type: string
            default: en-us
          examples:
            Canadian French:
              description: Canadian French
              value: fr-ca
            Spanish:
              description: Spanish
              value: es-us
            American English:
              description: American English
              value: en-us
        - name: f2m
          in: query
          description: >
            Used to specify whether to return content that is free or not-free
            to specified account.

            To return free content `f2m` should be set it up 'only'. Otherwise
            returns non-free content.

            This is applied to all catalog types specified in the request.


            Supported values are
                    * only: Only free content is returned.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
        - name: f2mLinear
          in: query
          description: >-
            Used to specify whether to return linear content that is free or
            not-free to

            specified account. This is applied to linear catalog only, if
            specified in the request.
          required: false
          deprecated: true
          schema:
            type: boolean
        - name: f2mVod
          in: query
          description: >-
            Used to specify whether to return vod content that is free or
            not-free to

            specified account. This is applied to vod catalog only, if specified
            in the request.
          required: false
          deprecated: true
          schema:
            type: boolean
        - name: f2mLivod
          in: query
          description: >-
            Used to specify whether to return livod content that is free or
            not-free to

            specified account. This is applied to livod catalog only, if
            specified in the request.
          required: false
          deprecated: true
          schema:
            type: boolean
        - name: limit
          in: query
          description: >
            Defines the maximum number of text search results to return in the
            page.

            There may be less items to return than specified by the param.
          required: false
          schema:
            maximum: 300
            minimum: 1
            type: integer
            default: 20
        - name: aliasName
          in: query
          description: Filter menus by specified root context.
          required: false
          schema:
            type: string
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
        - name: includeVodOnlyCompany
          in: query
          description: |
            Includes VOD only companies in the response when true.
          required: false
          schema:
            type: boolean
        - name: firstAiring
          in: query
          description: |2
                Used to request the earliest linear listing for each top level program.  Default is false.
          required: false
          schema:
            type: boolean
            default: false
        - name: enableFuzzyMatch
          in: query
          description: >
            If the original search query did not return results, the API will
            execute a second search correcting spelling of query input.

            Only applicable to alpha search queries, and not T9Q.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: >-
            Returns the matched results. The result's language is derived from
            the caller's resolved availability.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchModel'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
      deprecated: true
  /v1/partners/{partnerId}/programs/personalizedLists/playNow:
    get:
      tags:
        - Personalization
      summary: Browse through contents of personalized lists that can be played now.
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Recommends movies and episodes derived from user's saved content or
        watch history that are available to play now.

        Saved entities stored in List Management API will be resolved into its
        "next best" program and considered as recommendation candidates, sorted
        by `listItem.created` date in descending order.

        Clients can optionally request that partially watched programs from
        user's watch history are considered as seeds.

        Partially watched programs originated from user's Resume Point list will
        resolve into "continue watching" recommendations, sorted by
        `resumePoint.updated` in descending order.

        Recommendations from all sources will be merged into a single list and
        ordered as described above.

        Alternatively, recommendations may be sorted by recency: newest content
        comes first, ordered by start date/time of availability/listing window -
        post MVP.


        Content catalogs supported are: Linear, VOD (includes LiVOD and OTT),
        DVR, Locker (rentals not included).


        Fully watched programs will be filtered out from results.


        PlayNow results are free to me only.


        Use Cases:


        * Just added to my list

        * New episode available - previously added

        * New season available - previously added

        * continue watching - part watched or next episode
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: playNowGet
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: listType
          in: query
          description: >
            Allows clients to choose which sources to be considered when
            computing results.

            Includes items of a given listType from List Management API.

            Case sensitive.
          required: true
          schema:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
          examples:
            MyList:
              description: MyList
              value: myList
          example:
            - myList
        - name: ownerReferenceFilter
          in: query
          description: >
            Uniformly identifiable resources that represents the owner of
            settings, preferences, lists and recordings.

            Owners are account references like devices, profiles, users,
            households or the account itself.

            Only the format will be validated to make sure it is supported, but
            not the value itself.

            It is the client responsibility to validate the account reference
            being stored.


            Supported values are:


            * List Management: accounts

            * Favorites: devices

            * Resume Points: devices


            Owners are optional and when not specified, account will be assumed.
            List items are uniquely identified by account ID,

            entity ID, list name and owner.
          required: true
          schema:
            pattern: ^xrn:subscriber:(account|device|profile):[0-9]+$
            type: string
          examples:
            CIMCDVR3 Account:
              description: CIMCDVR3 Account
              value: xrn:subscriber:account:5397369
            Sky Test Account:
              description: Sky Test Account
              value: xrn:subscriber:account:2731295879013289501
            Sample Profile Owner:
              description: Sample Profile Owner
              value: xrn:subscriber:profile:{xpgProfileId}
            Streaming1304 Account:
              description: Streaming1304 Account
              value: xrn:subscriber:account:6213445014373683020
            Streaming1403 Account:
              description: Streaming1403 Account
              value: xrn:subscriber:account:8250908395983947002
            Sample Device Owner:
              description: Sample Device Owner
              value: xrn:subscriber:device:{deviceId}
            Sky Alfa Account:
              description: Sky Alfa Account
              value: xrn:subscriber:account:6192938064288172907
        - name: videoQuality
          in: query
          description: >-
            Specified to filter the showings based on video quality.  When
            multiple values are specified, they will be ORed.
          required: false
          schema:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            HD:
              description: HD
              value: HD
          example:
            - HD
            - UHD
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: preferredVideoQuality
          in: query
          description: >-
            Returns linear showings based on provided video quality preference.
            Applicable to linear catalog type only.
          required: false
          schema:
            type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            HD:
              description: HD
              value: HD
        - name: include
          in: query
          description: >
            Optional expansion of fields in responses.

            No default value. Fields supported by this parameter are not
            returned by default and need to be explicitly requested here.

            When present, the API will return the associated metadata field as
            defined by the values below:


            * `company`: Controls whether to resolve company metadata of company
            objects.
              By default, company objects only carry `companyId` field.
              When expanded, company objects would also carry `displayName` - depending on the size of the response, expanding on metadata may cause increased latency.
              In Browse, this option affects the following response fields: `Showing.brandingGroupCompanies`, `Showing.distributorCompanies`,
              `Showing.providerCompanies`, `Showing.linearCompanies`, `Program.NativeProvider`, `Program.firstRunCompany`
            * `programVariant`: Controls whether to resolve program variant
            metadata of a showing - linear or vod.
              By default, program variant objects only carry `programVariantId` field.
              When expanded, program variant objects would carry the whole program variant object Entity DS provides in the response.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            programVariant:
              description: programVariant
              value: programVariant
            company:
              description: company
              value: company
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: durableAppId
          in: query
          description: >
            Filters objects based on the value of durableAppId field.

            For programs applies to the VOD catalog only, listings if requested
            will not be affected.

            In WatchOptions API only, it also filters the offers associated with
            VOD.

            Supports negative filter.

            Note: This filter will override any partner exclusion configured in
            the background.
          required: false
          schema:
            type: string
          examples:
            SingleId:
              description: SingleId
              value: Comcast_StreamApp
            SingleIdNot:
              description: SingleIdNot
              value: NOT "Comcast_StreamApp"
            ORed:
              description: ORed
              value: '"Comcast_StreamApp" OR "Netflix"'
            OR_NOT:
              description: OR_NOT
              value: NOT ("Comcast_StreamApp" OR "Netflix")
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalizedListsPlayNowListsResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /v1/partners/{partnerId}/programs/personalizedLists:
    get:
      tags:
        - Personalization
      summary: Browse through contents of personalized lists
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Browse through contents of personalized lists.

        This API returns series or movies only (including music videos, sporting
        events,

        and previews) but no episodes.
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: personalizedListsGet
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: listType
          in: query
          description: >
            Allows clients to choose which sources to be considered when
            computing results.

            Includes items of a given listType from List Management API.

            Case sensitive.
          required: true
          schema:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
          examples:
            MyList:
              description: MyList
              value: myList
          example:
            - myList
        - name: ownerReferenceFilter
          in: query
          description: >
            Uniformly identifiable resources that represents the owner of
            settings, preferences, lists and recordings.

            Owners are account references like devices, profiles, users,
            households or the account itself.

            Only the format will be validated to make sure it is supported, but
            not the value itself.

            It is the client responsibility to validate the account reference
            being stored.


            Supported values are:


            * List Management: accounts

            * Favorites: devices

            * Resume Points: devices


            Owners are optional and when not specified, account will be assumed.
            List items are uniquely identified by account ID,

            entity ID, list name and owner.
          required: true
          schema:
            pattern: ^xrn:subscriber:(account|device|profile):[0-9]+$
            type: string
          examples:
            CIMCDVR3 Account:
              description: CIMCDVR3 Account
              value: xrn:subscriber:account:5397369
            Sky Test Account:
              description: Sky Test Account
              value: xrn:subscriber:account:2731295879013289501
            Sample Profile Owner:
              description: Sample Profile Owner
              value: xrn:subscriber:profile:{xpgProfileId}
            Streaming1304 Account:
              description: Streaming1304 Account
              value: xrn:subscriber:account:6213445014373683020
            Streaming1403 Account:
              description: Streaming1403 Account
              value: xrn:subscriber:account:8250908395983947002
            Sample Device Owner:
              description: Sample Device Owner
              value: xrn:subscriber:device:{deviceId}
            Sky Alfa Account:
              description: Sky Alfa Account
              value: xrn:subscriber:account:6192938064288172907
        - name: entityTag
          in: query
          description: >
            Filters based on entity tag Id specified.  This param takes

            value in conditional expression format with tag Ids separated by OR,
            AND

            and NOT.  For nested conditions, the caller should appropriately
            enclose

            the conditions within ().


            Examples are:

            * entityTag=(8665239266925354118 OR 8870645924716631118 OR
            7140881620312185118 OR 7850811880973641118 OR 4765208851651203118 OR
            5876264884571790127)

            * entityTag=(6975528850416233118 AND 5595772021387518118)

            * entityTag=(8665239266925354118 OR (8870645924716631118 AND
            7140881620312185118))

            * entityTag=(8665239266925354118 OR (5876264884571790127 AND NOT
            5628801549346379127 AND NOT 5571253227301165118))
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR (5876264884571790127 AND NOT
                5628801549346379127 AND NOT 5571253227301165118 AND NOT
                8116412341147107118 AND NOT 6774224877631532118))
            ORed:
              description: ORed
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR 5876264884571790127)
            OR AND:
              description: OR AND
              value: >-
                (8665239266925354118 OR (8870645924716631118 AND
                7140881620312185118))
            ANDed:
              description: ANDed
              value: (6975528850416233118 AND 5595772021387518118)
        - name: programType
          in: query
          description: |
            Returns programs of specified program types.  Value of this param
            can also be in conditional expression format specifying multiple
            program types OR/AND/NOT.  Supported program types are
            * `movie`
            * `seriesMaster`
            * `sportingEvent`
            * `musicVideo`
            * `concert`
            * `preview`
            * `episode`
            * `advertisement`
            * `minisode`
            * `extra`
            * `other`
            * `clip`
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Movie:
              description: Movie
              value: movie
            Movie OR Episode:
              description: Movie OR Episode
              value: (movie OR episode)
            MusicVideo:
              description: MusicVideo
              value: musicVideo
            Preview:
              description: Preview
              value: preview
            NOT Movie:
              description: NOT Movie
              value: (NOT movie)
            NOT Movie AND NOT Episode:
              description: NOT Movie AND NOT Episode
              value: (NOT movie AND NOT episode)
            Concert:
              description: Concert
              value: concert
            SportingEvent:
              description: SportingEvent
              value: sportingEvent
            Minisode:
              description: Minisode
              value: minisode
            Clip:
              description: Clip
              value: clip
            Episode:
              description: Episode
              value: episode
            Extra:
              description: Extra
              value: extra
            SeriesMaster:
              description: SeriesMaster
              value: seriesMaster
            Advertisement:
              description: Advertisement
              value: advertisement
            Other:
              description: Other
              value: other
          example: (movie OR seriesMaster)
        - name: entitySort
          in: query
          description: |2
                Supports the following sorting criteria:

                * added: Sorts List items by `listItem.updated` timestamp in descending order by default
                * alpha: Sorts programs alphabetically based on a normalized version of the title in ascending or descending order.

                Even though `entitySort` field is an array, today it only supports a primary sorting criteria.
                If a secondary sort is passed, it will be ignored.
          required: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
              enum:
                - added
                - desc:added
                - asc:alpha
                - desc:alpha
          example:
            - desc:alpha
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalizedListsResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
  /v1/partners/{partnerId}/programs/peopleAlsoWatched:
    get:
      tags:
        - Recommenders
      summary: >-
        Browse programs over linear and vod catalogs applying filters, sorts and
        personalization.
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        For a given program ID (pawId parameter), this API serves content
        watched by other users who also watched the program associated with the
        programId in the request.

        The content served is referred to as "People Also Watched (PAW)"
        (formerly "More Like This (MOLT)).


        This API aligns with Browse interface - filters have been limited for
        simplicity, but other Browse filters can be exposed upon request.

        For linear catalog only the programs that are getting aired within next
        14 days are indexed and returned.
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: getPeopleAlsoWatchedForProgram
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: contentCatalogTypes
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              description: >-
                Defines what showing types the API should match on to compute
                results.
          examples:
            offer:
              description: offer
              value: offer
            linear:
              description: linear
              value: linear
            vod:
              description: vod
              value: vod
            livod:
              description: livod
              value: livod
            locker:
              description: locker
              value: locker
          example:
            - vod
            - linear
            - locker
            - offer
        - name: programType
          in: query
          description: |
            Returns programs of specified program types.  Value of this param
            can also be in conditional expression format specifying multiple
            program types OR/AND/NOT.  Supported program types are
            * `movie`
            * `seriesMaster`
            * `sportingEvent`
            * `musicVideo`
            * `concert`
            * `preview`
            * `episode`
            * `advertisement`
            * `minisode`
            * `extra`
            * `other`
            * `clip`
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Movie:
              description: Movie
              value: movie
            Movie OR Episode:
              description: Movie OR Episode
              value: (movie OR episode)
            MusicVideo:
              description: MusicVideo
              value: musicVideo
            Preview:
              description: Preview
              value: preview
            NOT Movie:
              description: NOT Movie
              value: (NOT movie)
            NOT Movie AND NOT Episode:
              description: NOT Movie AND NOT Episode
              value: (NOT movie AND NOT episode)
            Concert:
              description: Concert
              value: concert
            SportingEvent:
              description: SportingEvent
              value: sportingEvent
            Minisode:
              description: Minisode
              value: minisode
            Clip:
              description: Clip
              value: clip
            Episode:
              description: Episode
              value: episode
            Extra:
              description: Extra
              value: extra
            SeriesMaster:
              description: SeriesMaster
              value: seriesMaster
            Advertisement:
              description: Advertisement
              value: advertisement
            Other:
              description: Other
              value: other
          example: (movie OR seriesMaster)
        - name: pawProgramId
          in: query
          description: >
            Returns the programs watched by other people who also watched
            program
                    associated with this ID.
          required: true
          schema:
            type: string
        - name: usePawSeed
          in: query
          description: >
            Used to return the `pawProgramId` as the top level result.  Used in
            conjunction with `pawProgramId`.
          required: false
          schema:
            type: boolean
            example: false
        - name: include
          in: query
          description: >
            Optional expansion of fields in responses.

            No default value. Fields supported by this parameter are not
            returned by default and need to be explicitly requested here.

            When present, the API will return the associated metadata field as
            defined by the values below:


            * `company`: Controls whether to resolve company metadata of company
            objects.
              By default, company objects only carry `companyId` field.
              When expanded, company objects would also carry `displayName` - depending on the size of the response, expanding on metadata may cause increased latency.
              In Browse, this option affects the following response fields: `Showing.brandingGroupCompanies`, `Showing.distributorCompanies`,
              `Showing.providerCompanies`, `Showing.linearCompanies`, `Program.NativeProvider`, `Program.firstRunCompany`
            * `programVariant`: Controls whether to resolve program variant
            metadata of a showing - linear or vod.
              By default, program variant objects only carry `programVariantId` field.
              When expanded, program variant objects would carry the whole program variant object Entity DS provides in the response.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            programVariant:
              description: programVariant
              value: programVariant
            company:
              description: company
              value: company
        - name: numShowings
          in: query
          description: >
            Allows to specify how many showings per catalog under each program
            the

            API should return.  Each episode under a seriesMaster will have

            specified number of showings.


            This param takes special value `all` which would return all showings

            under each program.
          required: false
          schema:
            pattern: ^[0-9]+$|all
            type: string
          examples:
            '--':
              description: '--'
            all:
              description: Returns all showings per catalog under each program
              value: all
            five:
              description: Returns max 5 showings per catalog under each program
              value: 5
        - name: numLinearShowings
          in: query
          description: >-
            Specifies number of showings to return for linear catalog under each
            program.  Defaults to zero and won&#39;t return any linear showings
            until and unless other params (like &#x60;numShowings&#x60;) that
            enables returning showings level data are used. This param takes
            special value &#x60;all&#x60; which would return all showings for
            linear catalog under each program.
          required: false
          schema:
            pattern: ^[0-9]+$|all
            type: string
          examples:
            '--':
              description: '--'
            all:
              description: Returns all showings for linear catalog under each program
              value: all
            five:
              description: Returns max 5 showings for linear catalog under each program
              value: 5
        - name: numVodShowings
          in: query
          description: |
            Specifies number of showings to return for vod catalog under each
            program.  Defaults to zero and won't return any vod showings until
            and unless other params (like `numShowings`) that enables returning
            showings level data are used.

            This param takes special value `all` which would return all showings
            for vod catalog under each program.
          required: false
          schema:
            pattern: ^[0-9]+$|all
            type: string
          examples:
            '--':
              description: '--'
            all:
              description: Returns all showings for vod catalog under each program
              value: all
            five:
              description: Returns max 5 showings for vod catalog under each program
              value: 5
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: episodeLimit
          in: query
          description: |
            Specifies maximum number of episodes to return under a series.
            Must be used in conjunction with `episodeOffset` which
            specifies start position of episode range. By default all
            episodes in a seriesmaster are returned.
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: integer
            example: 10
            default: 10
        - name: episodeOffset
          in: query
          description: >
            On Browse requests, it defines starting index (zero) of episodes
            range

            under a seriesMaster. Must be used in conjunction with
            `episodeLimit`

            which specifies maximum number of programs in a page.

            By default all episodes in a seriesMaster are returned.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 1
            default: 0
        - name: entityField
          in: query
          description: >
            Allows to specify a list of program level metadata fields to be

            included in the API response.  When this param is not used, the
            program

            metadata would contain only programId and programType fields.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: episodeField
          in: query
          description: >
            Allows to specify a list of program specific fields to be included
            in the

            API response for episodes under a series.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: showingField
          in: query
          description: >
            Allows to specify a list of showing level fields to be included in
            the

            API response.  When this param is not used, the showings object
            would

            contain only mediaId and mediaGuid fields.
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          example:
            - programId
            - rating
            - cc
            - providerCompanies
            - distributorCompanies
            - linearCompanies
            - networkGroupCompanies
        - name: facetField
          in: query
          description: >
            This param enables to display count of showings that have given
            value

            for a specified field.  These are calculated and returned per
            program.

            For series, the showing facet will include showings from children

            episodes as well. Fields that convey dates should be formatted as
            ISO8601 strings
          required: false
          schema:
            type: array
            items:
              type: string
          example:
            - productContextId
            - productContextType
            - providerCompanies
            - linearCompanies
            - vod
            - linear
            - preorder
            - est
            - ppv
            - downloadable
            - expirationDate
            - availableDate
            - newUntil
            - lastChanceFrom
            - videoQuality
        - name: vodShowingsSort
          in: query
          description: >
            Sorts the VOD showings by specified fields. Optional the fields can
            be

            prefixed with asc: or desc: to specify the sort direction. Default

            sort order when not specified is descending order. Supported sort
            fields

            are listed below indicating how they are sorted when sort direction

            is specified.


            | Sort name | Description | Ascending order | Descending order | Tie
            Breaker |

            | ---- | ---- | ---- | ---- | ---- |

            | `videoQuality` | Sorts showings based on video quality | SD, HD,
            UHD | UHD, HD, SD | `asc:mediaId` |

            | `windowStart` | Sorts showings based on window start time |
            Showings airing earlier | Showings airing later |
            `desc:videoQuality, asc:mediaId` |

            | `windowEnd` | Sorts showings based on window end time | Showings
            ending earlier | Showings ending later | `desc:videoQuality,
            asc:mediaId` |

            | `isSubjectToBlackout` | Sorts linear showings based on the
            subjectToBlackout field | false, true | true, false | |

            | `isWatchable` | Sorts showings based on the
            subscriberAccess.isWatchable field | false, true | true, false | |
          required: false
          schema:
            type: array
            items:
              type: string
        - name: livodShowingsSort
          in: query
          description: >
            Sorts the livod showings by specified fields.  Optional the fields
            can be

            prefixed with asc: or desc: to specify the sort direction. The
            default

            sort order when not specified is descending order. Supported sort
            fields

            are listed below indicating how they are sorted when sort direction

            is specified.


            | Sort name | Description | Ascending order | Descending order | Tie
            Breaker |

            | ---- | ---- | ---- | ---- | ---- |

            | `videoQuality` | Sorts showings based on video quality | SD, HD,
            UHD | UHD, HD, SD | `asc:mediaId` |

            | `windowStart` | Sorts showings based on window start time |
            Showings airing earlier | Showings airing later |
            `desc:videoQuality, asc:mediaId` |

            | `windowEnd` | Sorts showings based on window end time | Showings
            ending earlier | Showings ending later | `desc:videoQuality,
            asc:mediaId` |

            | `isSubjectToBlackout` | Sorts linear showings based on the
            subjectToBlackout field | false, true | true, false | |

            | `isWatchable` | Sorts showings based on the
            subscriberAccess.isWatchable field | false, true | true, false | |
          required: false
          schema:
            type: array
            items:
              type: string
        - name: linearShowingsSort
          in: query
          description: >
            Sorts the linear showings by specified fields.  Optional the fields
            can be

            prefixed with asc: or desc: to specify the sort direction. The
            default

            sort order when not specified is descending order. Supported sort
            fields

            are listed below indicating how they are sorted when sort direction

            is specified.


            | Sort name | Description | Ascending order | Descending order | Tie
            Breaker |

            | ---- | ---- | ---- | ---- | ---- |

            | `videoQuality` | Sorts showings based on video quality | SD, HD,
            UHD | UHD, HD, SD | `asc:listingId` |

            | `windowStart` | Sorts showings based on window start time |
            Showings airing earlier | Showings airing later | `desc:format,
            asc:listingId` |

            | `windowEnd` | Sorts showings based on window end time | Showings
            ending earlier | Showings ending later | `desc:format,
            asc:listingId` |

            | `isSubjectToBlackout` | Sorts linear showings based on the
            subjectToBlackout field | false, true | true, false | |

            | `isWatchable` | Sorts showings based on the
            subscriberAccess.isWatchable field | false, true | true, false | |
          required: false
          schema:
            type: array
            items:
              type: string
        - name: f2m
          in: query
          description: >
            Used to specify whether to return content that is free or not-free
            to

            specified account. This is applied to all catalog types specified in
            the request. Supported values are


            * `exclude`: Only the content that is not free to watch is returned

            * `only`: Only free content is returned.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: entityTag
          in: query
          description: >
            Filters based on entity tag Id specified.  This param takes

            value in conditional expression format with tag Ids separated by OR,
            AND

            and NOT.  For nested conditions, the caller should appropriately
            enclose

            the conditions within ().


            Examples are:

            * entityTag=(8665239266925354118 OR 8870645924716631118 OR
            7140881620312185118 OR 7850811880973641118 OR 4765208851651203118 OR
            5876264884571790127)

            * entityTag=(6975528850416233118 AND 5595772021387518118)

            * entityTag=(8665239266925354118 OR (8870645924716631118 AND
            7140881620312185118))

            * entityTag=(8665239266925354118 OR (5876264884571790127 AND NOT
            5628801549346379127 AND NOT 5571253227301165118))
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR (5876264884571790127 AND NOT
                5628801549346379127 AND NOT 5571253227301165118 AND NOT
                8116412341147107118 AND NOT 6774224877631532118))
            ORed:
              description: ORed
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR 5876264884571790127)
            OR AND:
              description: OR AND
              value: >-
                (8665239266925354118 OR (8870645924716631118 AND
                7140881620312185118))
            ANDed:
              description: ANDed
              value: (6975528850416233118 AND 5595772021387518118)
        - name: adult
          in: query
          description: >
            Specified to control serving of content which have the adult
            property

            set to true. Supported values are:


            * `include`: Include the content which have adult property set to
            true.

            * `exclude`: Exclude the content which have adult property set to
            true.

            * `only`: Include ONLY the content which have adult property set to
            true.
          required: false
          schema:
            type: string
            default: exclude
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: kids
          in: query
          description: >
            Used to control serving of content tagged as kids friendly.

            Supported values are:


            * `include` - Include the content which have the kids property set
            to true.

            * `exclude` - Exclude the content which have the kids property set
            to true.

            * `only` - Include ONLY the content which have the kids property set
            to true.
          required: false
          schema:
            type: string
            default: include
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: companyId
          in: query
          description: >
            Generic filter on company IDs of all types - SubNetwork, Network and
            NetworkGroups -

            regardless of station association type (linear) or PMA role (vod).

            Returns only the showings provided by the specified company, if
            available.

            In Browse, supports complex logical expressions - AND/OR/NOT.

            In Watch Options, does not support the negative form (NOT)

            and does not filter through vod/offers with contentGrouping=*Bundles
            - Only effective against singles.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: isSubtitled
          in: query
          description: >
            Allows to filter linear showings by whether or not they are
            subtitled.
          required: false
          schema:
            type: boolean
        - name: videoFormat
          in: query
          description: >-
            Specified to filter the showings based on video encoding format. 
            When multiple values are specified, they will be ORed.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            ism:
              description: ism
              value: ism
            (ism OR f4m):
              description: (ism OR f4m)
              value: (ism OR f4m)
            mpeg_qam:
              description: mpeg_qam
              value: mpeg_qam
            mpeg4:
              description: mpeg4
              value: mpeg4
            f4m:
              description: f4m
              value: f4m
            m3u:
              description: m3u
              value: m3u
            (NOT ism):
              description: (NOT ism)
              value: (NOT ism)
        - name: videoQuality
          in: query
          description: >-
            Specified to filter the showings based on video quality.  When
            multiple values are specified, they will be ORed.
          required: false
          schema:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            HD:
              description: HD
              value: HD
          example:
            - HD
            - UHD
        - name: providerCompanyId
          in: query
          description: >
            Merlin Id of the company.  Returns only the showings provided by

            specified company.  This param also takes value in conditional

            expression format in which Ids are logically separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: distributorCompanyId
          in: query
          description: >
            Merlin Id of the company.  Returns only the content distributed by

            specified company.  This param also takes value in conditional

            expression format in which Ids are logically separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 5232923399725817000
            Single NOT:
              description: Single NOT
              value: (NOT 8463172568858291105)
            ORed:
              description: ORed
              value: (5470883989996030105 OR 7697030199876428105)
            AND NOT:
              description: AND NOT
              value: (5470883989996030105 AND NOT 7697030199876428105)
        - name: rating
          in: query
          description: >
            Allows to filter showings based on if they contain specified
            ratings.

            Specified ratings should contain scheme and value separated by '$'
            sign.

            Multiple ratings can be specified using conditional expression
            format

            with each rating separated by AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: mpaa$pg
            Single NOT:
              description: Single NOT
              value: (NOT mpaa$pg)
            ORed:
              description: ORed
              value: (mpaa$pg OR tv$tvtg)
            AND NOT:
              description: AND NOT
              value: (NOT rating:mpaa$pg AND NOT mpaa$pg13 AND NOT mpaa$g)
        - name: vodType
          in: query
          description: >
            When specified, filters the vod content based on associated
            offer.purchaseCategory.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy, ppv, rent}. Note that BuyMA will
            be converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: livodType
          in: query
          description: >
            When specified, filters the livod content based on specified offer
            types.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy,ppv,rent}. Note that BuyMA will be
            converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            ppv:
              description: ppv
              value: ppv
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: offerType
          in: query
          description: |
            Filters the content based on specified offer types.
            When multiple offer types are passed, they will be ORed.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            ppv:
              description: ppv
              value: ppv
            preorder:
              description: preorder
              value: preorder
        - name: preferredVideoQuality
          in: query
          description: >-
            Returns linear showings based on provided video quality preference.
            Applicable to linear catalog type only.
          required: false
          schema:
            type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            HD:
              description: HD
              value: HD
        - name: preferredLanguage
          in: query
          description: >
            Allows to specify language preference.

            If a program has non-english variant then that program will be
            returned in place of original program.

            Expects a language culture code, which is comprised of two lowercase
            characters (representing language) with an optional hyphen plus two
            uppercase characters (representing country/region).

            The language component is an ISO 639-1 value and the country
            component is an ISO 3166-1 alpha-2 value.

            Example language culture codes include `en-us` (English), `es-us`
            (Spanish), `fr-ca` (Canadian French).
          required: false
          schema:
            type: string
            default: en-us
          examples:
            Canadian French:
              description: Canadian French
              value: fr-ca
            Spanish:
              description: Spanish
              value: es-us
            American English:
              description: American English
              value: en-us
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowseResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '429':
          description: >
            Too many requests. The API does not support "Retry-After" header to
            indicate how

            long to wait before making a new request. This error code originates
            from Rex's 530 response

            code when: <p> <li> Rex Browse nodes are saturated and requests
            fallback to MinREX <p>**and**

            <li> MinRex does not support the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
  /v1/partners/{partnerId}/programs/nextEpisode:
    get:
      tags:
        - Personalization
      summary: >-
        Recommends the next episode for the requested series or episode ID, for
        the requested account or device.
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        This api will take user's account and device ids, along with a list of
        program ids (series or episode) and determine for each program what is
        the 'Next Episode' available for the user to watch.

        Next episode can be defined based on different criteria and clients can
        choose the criteria to apply to the request. Supported criterias are:


        * `first`:
          If requested program is a series ID, it returns the pilot episode, if available.
          If requested program is an episode ID, it returns the next available episode in sequence.
        * `latest:` returns most recently aired episode for the series that is
        available. Does not take user history into account.

        * `random:` returns a randomly selected episode for the series based on
        the filters and account context passed in the request.

        * `personalized:` instructs the API to take the user history into
        consideration when calculating next episode.


        User history is determined from the user's 'Resume Points' from VOD and
        DVR, the user's 'Watched Programs', and the availability of the
        determined 'next episode'.

        It returns either a partially watched episode or the next episode after
        the last fully watched episode. For example:

        If a subscriber has fully watched an asset on vod or dvr, the API will
        return the next episode in that series.

        If a subscriber has a resume point for a particular episode, the API
        will return that episode as the next episode to watch in the series (i.e
        the episode was not fully watched).


        If there is no program available that satisfies the condition specified
        in the request, the API will return an empty list -

        clients can control whether to ignore availability when calculating the
        next episode by using the `ignoreAvailability` parameter.

        In this case the logical next episode would return even if there are no
        showings available to watch.

        Similarly, if the programId in the request is of a non-episodic program
        - movie for example - the API will also return en empty list.


        Next episode could be available on vod or linear catalogs.


        Special Cases:


        * If a series doesn't have seasons, the next episode is defined as the
        episode with the next Original Airdate.

        * If next episode is a multi part episodes, the API prioritizes full
        episodes - part 1 and part 2 are combined into single double duration
        episode in data. If input episode is part 1, the api will look for part
        2. If input episode is full, look for next full episode first, if not
        then look for part 1.


        Not all program and showing attributes are returned by default.

        Optional fields must be explicitly requested through `entityField`,
        `episodeField`, `showingField`, `facetField` query parameters
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: programsNextEpisodeGet
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: contentCatalogTypes
          in: query
          description: Rex Catalog Types for 'People also watched'.
          required: true
          schema:
            type: array
            items:
              type: string
          examples:
            linear:
              description: linear
              value: linear
            vod:
              description: vod
              value: vod
          example:
            - vod, linear
        - name: programId
          in: query
          description: |
            Merlin ID of the programs.  Returns exactly the programs associated
            with specified Merlin IDs.
          required: true
          schema:
            type: array
            items:
              type: string
          example:
            - '8311621267728768112'
        - name: criteria
          in: query
          description: >
            Controls whether to return first, last or a random episode in the
            series.

            Works regardless of whether the programId in the request is a series
            or an episode ID.

            Supported values are:


            * `first`: If requested program is a series ID, it returns the pilot
            episode, if available.
               If requested program is an episode ID, it returns the next available episode in sequence.
            * `latest`: returns most recently aired episode for the series that
            is available. Does not take user history into account.

            * `random`: returns a randomly selected episode for the series based
            on the filters and account context passed in the request.

            * `personalized`: instructs the API to take the user history into
            consideration when calculating next episode.
               User history is determined from the user's 'Resume Points' from VOD and DVR, the user's 'Watched Programs', and the availability of the determined 'next episode'.
               It returns either a partially watched episode or the next episode after the last (>=80%) watched episode. For example:
               If a subscriber has watched 80% of an asset on vod or dvr, the API will return the next episode in that series.
               If a subscriber has a resume point for a particular episode, the API will return that episode as the next episode to watch in the series (i.e the episode was not fully watched).
          required: false
          schema:
            type: string
          examples:
            random:
              description: random
              value: random
            first:
              description: first
              value: first
            personalized:
              description: personalized
              value: personalized
            latest:
              description: latest
              value: latest
        - name: ignoreAvailability
          in: query
          description: >
            If `ignoreAvailability=true`, then next episodes will return even if
            not available to the user.
          required: false
          schema:
            type: boolean
        - name: includeTodaysEpisode
          in: query
          description: >
            Only used along with criteria=latest parameter to decide whether to
            consider today's episode as latest or not.

            This is to avoid returning the episode before the airing time, if
            the request comes the same day.
          required: false
          schema:
            type: boolean
        - name: adult
          in: query
          description: >
            Specified to control serving of content which have the adult
            property

            set to true. Supported values are:


            * `include`: Include the content which have adult property set to
            true.

            * `exclude`: Exclude the content which have adult property set to
            true.

            * `only`: Include ONLY the content which have adult property set to
            true.
          required: false
          schema:
            type: string
            default: exclude
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: entityTag
          in: query
          description: >
            Filters based on entity tag Id specified.  This param takes

            value in conditional expression format with tag Ids separated by OR,
            AND

            and NOT.  For nested conditions, the caller should appropriately
            enclose

            the conditions within ().


            Examples are:

            * entityTag=(8665239266925354118 OR 8870645924716631118 OR
            7140881620312185118 OR 7850811880973641118 OR 4765208851651203118 OR
            5876264884571790127)

            * entityTag=(6975528850416233118 AND 5595772021387518118)

            * entityTag=(8665239266925354118 OR (8870645924716631118 AND
            7140881620312185118))

            * entityTag=(8665239266925354118 OR (5876264884571790127 AND NOT
            5628801549346379127 AND NOT 5571253227301165118))
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR (5876264884571790127 AND NOT
                5628801549346379127 AND NOT 5571253227301165118 AND NOT
                8116412341147107118 AND NOT 6774224877631532118))
            ORed:
              description: ORed
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR 5876264884571790127)
            OR AND:
              description: OR AND
              value: >-
                (8665239266925354118 OR (8870645924716631118 AND
                7140881620312185118))
            ANDed:
              description: ANDed
              value: (6975528850416233118 AND 5595772021387518118)
        - name: rating
          in: query
          description: >
            Allows to filter showings based on if they contain specified
            ratings.

            Specified ratings should contain scheme and value separated by '$'
            sign.

            Multiple ratings can be specified using conditional expression
            format

            with each rating separated by AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: mpaa$pg
            Single NOT:
              description: Single NOT
              value: (NOT mpaa$pg)
            ORed:
              description: ORed
              value: (mpaa$pg OR tv$tvtg)
            AND NOT:
              description: AND NOT
              value: (NOT rating:mpaa$pg AND NOT mpaa$pg13 AND NOT mpaa$g)
        - name: language
          in: query
          description: >
            Returns programs that have specified audio language.  The specified

            language code should be in [ISO
            639-3](https://en.wikipedia.org/wiki/ISO_639-3) format.

            Multiple language code can be specified using conditional
            expressions

            by separating them by AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            en AND es:
              description: en AND es
              value: (en AND es)
            NOT en AND NOT es:
              description: NOT en AND NOT es
              value: (NOT en AND NOT es)
            en:
              description: en
              value: en
            en OR es:
              description: en OR es
              value: (en OR es)
            NOT en:
              description: NOT en
              value: (NOT en)
        - name: watched
          in: query
          description: |
            Filter the programs based on whether user has watched them or not.
            Supported values are

            * `include` - include the programs that user has watched
            * `exclude` - exclude the programs that user has watched.  With
              series, if an episode of the series is marked as watched, then entire
              series will be excluded.
            * `only` - include only the programs that user has watched.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: airingType
          in: query
          description: |
            Specified to filter the linear content by airing type.  Multiple
            values can be specified using conditional expressions with values
            separated by AND/OR/NOT.  The supported airing types are

            * `new`
            * `repeat`
            * `live`
            * `taped`
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            New:
              description: New
              value: new
            taped:
              description: taped
              value: taped
            NOT New AND NOT Repeat:
              description: NOT New AND NOT Repeat
              value: NOT new AND NOT repeat
            repeat:
              description: repeat
              value: repeat
            NOT New:
              description: NOT New
              value: NOT new
            live:
              description: live
              value: live
            New OR Repeat:
              description: New OR Repeat
              value: new OR repeat
        - name: isClosedCaption
          in: query
          description: >
            Allows to filter linear content based on whether closed caption is
            included.
          required: false
          schema:
            type: boolean
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: companyTypeTag
          in: query
          description: >
            Merlin Ids of the company type.  Returns only the showings provided
            by

            specified company type.  Conditional statements can be used to
            specify

            multiple company types separating them by AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Not:
              description: Not
              value: (NOT 7135411279946774118)
            Single:
              description: Single
              value: 6096810715357751000
            ORed:
              description: ORed
              value: (7344893066844930118 OR 7135411279946774118)
        - name: companyId
          in: query
          description: >
            Generic filter on company IDs of all types - SubNetwork, Network and
            NetworkGroups -

            regardless of station association type (linear) or PMA role (vod).

            Returns only the showings provided by the specified company, if
            available.

            In Browse, supports complex logical expressions - AND/OR/NOT.

            In Watch Options, does not support the negative form (NOT)

            and does not filter through vod/offers with contentGrouping=*Bundles
            - Only effective against singles.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: isDownloadable
          in: query
          description: |
            Allows to filters showings based on whether or not they are
            downloadable for viewing on portable devices.
          required: false
          schema:
            type: boolean
        - name: hasDvs
          in: query
          description: |
            Allows to filter linear content based on whether they include
            descriptive video service.
          required: false
          schema:
            type: boolean
            example: false
        - name: isIVod
          in: query
          description: |
            Allows to filter VOD showings based on iVOD attribute.  By default,
            ivod and non-ivod are returned.
          required: false
          schema:
            type: boolean
        - name: isNew
          in: query
          description: >-
            Controls returning programs that are new, as dictated by the
            provider.
          required: false
          schema:
            type: boolean
        - name: providerCompanyId
          in: query
          description: >
            Merlin Id of the company.  Returns only the showings provided by

            specified company.  This param also takes value in conditional

            expression format in which Ids are logically separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: isSap
          in: query
          description: >
            Allows to filter linear content based on whether they include a
            second

            audio track.
          required: false
          schema:
            type: boolean
        - name: isSubjectToBlackout
          in: query
          description: |
            Controls returning programs with listings marked if they should be
            subject to blackout.
          required: false
          schema:
            type: boolean
        - name: isSubtitled
          in: query
          description: >
            Allows to filter linear showings by whether or not they are
            subtitled.
          required: false
          schema:
            type: boolean
        - name: videoFormat
          in: query
          description: >-
            Specified to filter the showings based on video encoding format. 
            When multiple values are specified, they will be ORed.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            ism:
              description: ism
              value: ism
            (ism OR f4m):
              description: (ism OR f4m)
              value: (ism OR f4m)
            mpeg_qam:
              description: mpeg_qam
              value: mpeg_qam
            mpeg4:
              description: mpeg4
              value: mpeg4
            f4m:
              description: f4m
              value: f4m
            m3u:
              description: m3u
              value: m3u
            (NOT ism):
              description: (NOT ism)
              value: (NOT ism)
        - name: videoQuality
          in: query
          description: >-
            Allows you to filter results to show only programs which have
            showings in the specified video quality format.
          required: false
          schema:
            maxItems: 3
            minItems: 1
            type: array
            items:
              type: string
              enum:
                - SD
                - HD
                - UHD
        - name: vodType
          in: query
          description: >
            When specified, filters the vod content based on associated
            offer.purchaseCategory.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy, ppv, rent}. Note that BuyMA will
            be converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            buy:
              description: buy
              value: buy
            ppv:
              description: ppv
              value: ppv
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: onNow
          in: query
          description: >
            Applies to linear catalog only, VOD showings if requested will not
            be affected.

            When specified, returns only the showings that are airing now.

            Any linear showing that is not playing now would not be returned.


            **Note:** When determining vod/linear showing availability window,
            the

            current time will be rounded down to nearest 5 minute and nearest

            minute for livod


            **Example:** If the request is executed at 12:17:35, for linear/vod,
            the

            time will be rounded down to 12:15:00 and for livod to 12:17:00. 
            This

            means any at 12:17:35, any linear/vod showing that hasn't expired

            before 12:15:00 and any livod showing that hasn't expired before

            12:17:00 will be treated as "on now" and any showing that hasn't

            started before these times will be treated as "upcoming".
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            program:
              description: program
              value: program
        - name: upcoming
          in: query
          description: >
            Applies to linear catalog only, VOD showings if requested will not
            be affected.

            When specified, returns only the showings that are airing in the
            future.

            Any showing that is airing now or expired would not be returned.


            **Note:** When determining vod/linear showing availability window,
            the

            current time will be rounded down to nearest 5 minute and nearest

            minute for livod.


            **Example:** If the request is executed at 12:17:35, for linear/vod,
            the

            time will be rounded down to 12:15:00 and for livod to 12:17:00. 
            This

            means any at 12:17:35, any linear/vod showing that hasn't expired

            before 12:15:00 and any livod showing that hasn't expired before

            12:17:00 will be treated as "on now" and any showing that hasn't

            started before these times will be treated as "upcoming".
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            program:
              description: program
              value: program
        - name: stationId
          in: query
          description: |
            Merlin Id of the station.  Returns only the content airing on
            specified station.  Filtering can be done by specifying multiple
            stationIds in conditional expression format with Ids separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 8210474099770809000
            Single NOT:
              description: Single NOT
              value: (NOT 5471601266051497117)
            ORed:
              description: ORed
              value: (8210474099770809117 OR 5471601266051497117)
            AND NOT:
              description: AND NOT
              value: (NOT 8210474099770809117 AND NOT 5471601266051497117)
        - name: windowStart
          in: query
          description: >
            Returns programs that have listing or media that start at specified

            window or specified range.  This option applies only to

            linear and livod catalog types.  Specified value must be date-time

            ISO8601 format.


            **Note:** By default all showings that are airing within a 14 day
            window

            are returned.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            Return programs that start at specified time or later:
              description: Return programs that start at specified time or later
              value:
                - '2020-05-17T11:41:00Z'
            Return programs that start at specified range:
              description: Return programs that start at specified range
              value:
                - '2020-05-17T11:41:00Z'
                - '2020-05-21T11:41:00Z'
        - name: windowEnd
          in: query
          description: >
            Returns programs that have listing or media that end at specified

            window or specified range.  This option applies only to

            linear and livod catalog types.  Specified value must be date-time

            ISO8601 format.


            **Note:** By default all showings that are airing within a 14 day
            window

            are returned.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            Return programs that have listing or media that end at specified time or earlier:
              description: >-
                Return programs that have listing or media that end at specified
                time or earlier
              value:
                - '2020-05-17T11:00:00Z'
            Returns programs that have listing or media that end in the specified time window:
              description: >-
                Returns programs that have listing or media that end in the
                specified time window
              value:
                - '2020-05-17T11:00:00Z'
                - '2020-05-21T11:00:00Z'
        - name: licenseStartVod
          in: query
          description: >
            When specified, filters VOD showings based on their available date,
            in units of days.

            Number representing days count should be prefixed with `+`, `-`, `<`
            or `>` to indicate

            the appropriate time window. `+` and `>` return the programs with
            VOD showings that became

            available more than specified number of days ago and `-` and `<`
            return the programs

            with VOD showings that became available within 7days.
          required: false
          schema:
            pattern: ^[><][0-9][d]$
            type: string
          examples:
            <7d:
              description: >-
                Return all programs with VOD showings that became available in
                last 7 days.
              value: <7d
            '>7d':
              description: >-
                Return all programs with VOD showing that became available more
                than 7 days ago.
              value: '>7d'
        - name: licenseEndVod
          in: query
          description: >
            When specified, returns programs that have VOD showings expiring
            within

            or more than specified number of days.  Number representing days
            count

            should be prefixed with `+`, `-`, `<` or `>` to indicate the

            appropriate time window. `+` and `>` return VOD showings that are
            expiring

            in more than specified number of days.  `-` and `<` return VOD
            showings that

            are expiring in less than specified number of days.
          required: false
          schema:
            pattern: ^[><][0-9][d]$
            type: string
          examples:
            <7d:
              summary: Return all programs with VOD showings expiring within 7 days.
              description: <7d
              value: <7d
            '>7d':
              summary: Return all programs with VOD showing expiring after 7 days.
              description: '>7d'
              value: '>7d'
        - name: preferredVideoQuality
          in: query
          description: >-
            Returns linear showings based on provided video quality preference.
            Applicable to linear catalog type only.
          required: false
          schema:
            type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            HD:
              description: HD
              value: HD
        - name: preferredLanguage
          in: query
          description: >
            Allows to specify language preference.

            If a program has non-english variant then that program will be
            returned in place of original program.

            Expects a language culture code, which is comprised of two lowercase
            characters (representing language) with an optional hyphen plus two
            uppercase characters (representing country/region).

            The language component is an ISO 639-1 value and the country
            component is an ISO 3166-1 alpha-2 value.

            Example language culture codes include `en-us` (English), `es-us`
            (Spanish), `fr-ca` (Canadian French).
          required: false
          schema:
            type: string
            default: en-us
          examples:
            Canadian French:
              description: Canadian French
              value: fr-ca
            Spanish:
              description: Spanish
              value: es-us
            American English:
              description: American English
              value: en-us
        - name: durableAppId
          in: query
          description: >
            Filters objects based on the value of durableAppId field.

            For programs applies to the VOD catalog only, listings if requested
            will not be affected.

            In WatchOptions API only, it also filters the offers associated with
            VOD.

            Supports negative filter.

            Note: This filter will override any partner exclusion configured in
            the background.
          required: false
          schema:
            type: string
          examples:
            SingleId:
              description: SingleId
              value: Comcast_StreamApp
            SingleIdNot:
              description: SingleIdNot
              value: NOT "Comcast_StreamApp"
            ORed:
              description: ORed
              value: '"Comcast_StreamApp" OR "Netflix"'
            OR_NOT:
              description: OR_NOT
              value: NOT ("Comcast_StreamApp" OR "Netflix")
        - name: entitySort
          in: query
          description: >-
            Allows to sort browse result by various entity level metadata. A
            secondary sort field can also be specified as tie breaker for
            primary field.  The fields can optionally be prefixed with
            &#x60;asc:&#x60; or &#x60;desc:&#x60; to specify the sort order. 
            Few attributes on which sorting is supported are airtime, alpha
            (title), browse, editorial, expired, releaseYear,
            rottentomatoes.fanscore, rottentomatoes.criticscore, linear, paw,
            personalized, trailerRank and favorite. This param defaults to
            browse when not specified.
          required: false
          schema:
            type: array
            items:
              type: string
              default: browse
          example:
            - desc:browse
            - asc:airTime
        - name: linearShowingsSort
          in: query
          description: >
            Sorts the linear showings by specified fields.  Optional the fields
            can be

            prefixed with `asc:` or `desc:` to specify the sort direction. The
            default

            sort order when not specified is descending order. Supported sort
            fields

            are listed below indicating how they are sorted when sort direction

            is specified.


            | Sort name | Description | Ascending order | Descending order | Tie
            Breaker |

            | ---- | ---- | ---- | ---- | ---- |

            | `videoQuality` | Sorts showings based on video quality | SD, HD,
            UHD | UHD, HD, SD | `asc:listingId` |

            | `windowStart` | Sorts showings based on window start time |
            Showings airing earlier | Showings airing later | `desc:format,
            asc:listingId` |

            | `windowEnd` | Sorts showings based on window end time | Showings
            ending earlier | Showings ending later | `desc:format,
            asc:listingId` |

            | `isSubjectToBlackout` | Sorts linear showings based on the
            isSubjectToBlackout field | false, true | true, false | |

            | `isWatchable` | Sorts showings based on the
            subscriberAccess.isWatchable field | false, true | true, false | |
          required: false
          schema:
            type: array
            items:
              type: string
        - name: entityField
          in: query
          description: >
            Allows to specify a list of program level metadata fields to be

            included in the API response.  When this param is not used, the
            program

            metadata would contain only programId and programType fields.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: episodeField
          in: query
          description: >
            Allows to specify a list of program specific fields to be included
            in the

            API response for episodes under a series.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: showingField
          in: query
          description: >
            Allows to specify a list of showing level fields to be included in
            the

            API response.  When this param is not used, the showings object
            would

            contain only mediaId and mediaGuid fields.
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          example:
            - programId
            - rating
            - cc
            - providerCompanies
            - distributorCompanies
            - linearCompanies
            - networkGroupCompanies
        - name: isThreeD
          in: query
          required: false
          schema:
            type: boolean
        - name: numShowings
          in: query
          description: >
            Allows to specify how many showings per catalog under each program
            the

            API should return.  Each episode under a seriesMaster will have

            specified number of showings.


            This param takes special value `all` which would return all showings

            under each program.
          required: false
          schema:
            pattern: ^[0-9]+$|all
            type: string
          examples:
            '--':
              description: '--'
            all:
              description: Returns all showings per catalog under each program
              value: all
            five:
              description: Returns max 5 showings per catalog under each program
              value: 5
        - name: numLinearShowings
          in: query
          description: >-
            Specifies number of showings to return for linear catalog under each
            program.  Defaults to zero and won&#39;t return any linear showings
            until and unless other params (like &#x60;numShowings&#x60;) that
            enables returning showings level data are used. This param takes
            special value &#x60;all&#x60; which would return all showings for
            linear catalog under each program.
          required: false
          schema:
            pattern: ^[0-9]+$|all
            type: string
          examples:
            '--':
              description: '--'
            all:
              description: Returns all showings for linear catalog under each program
              value: all
            five:
              description: Returns max 5 showings for linear catalog under each program
              value: 5
        - name: numVodShowings
          in: query
          description: |
            Specifies number of showings to return for vod catalog under each
            program.  Defaults to zero and won't return any vod showings until
            and unless other params (like `numShowings`) that enables returning
            showings level data are used.

            This param takes special value `all` which would return all showings
            for vod catalog under each program.
          required: false
          schema:
            pattern: ^[0-9]+$|all
            type: string
          examples:
            '--':
              description: '--'
            all:
              description: Returns all showings for vod catalog under each program
              value: all
            five:
              description: Returns max 5 showings for vod catalog under each program
              value: 5
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: include
          in: query
          description: >
            Optional expansion of fields in responses.

            No default value. Fields supported by this parameter are not
            returned by default and need to be explicitly requested here.

            When present, the API will return the associated metadata field as
            defined by the values below:


            * `company`: Controls whether to resolve company metadata of company
            objects.
              By default, company objects only carry `companyId` field.
              When expanded, company objects would also carry `displayName` - depending on the size of the response, expanding on metadata may cause increased latency.
              In Browse, this option affects the following response fields: `Showing.brandingGroupCompanies`, `Showing.distributorCompanies`,
              `Showing.providerCompanies`, `Showing.linearCompanies`, `Program.NativeProvider`, `Program.firstRunCompany`
            * `programVariant`: Controls whether to resolve program variant
            metadata of a showing - linear or vod.
              By default, program variant objects only carry `programVariantId` field.
              When expanded, program variant objects would carry the whole program variant object Entity DS provides in the response.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            programVariant:
              description: programVariant
              value: programVariant
            company:
              description: company
              value: company
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowseResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
  /v1/partners/{partnerId}/programs/latestTv:
    get:
      tags:
        - Recommenders
      summary: >-
        Recommends the most popular programs that recently aired on live
        TV(linear), available on demand (VOD).
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Popularity is computed on Sky linear viewing over a 24-hour span - "Last
        Night's TV" by popularity.

        Actual start and end times can be configurable. Recommendations are
        driven by current VOD availability

        of the most popular programs; the companyId of the linear program is not
        taken into account,

        so it's possible that a VOD asset recommended here is from a different
        provider than the provider that aired it the night before.

        Supports configurable exclusion of OTT app content from recommendations,
        by partner.

        Returns an array of programs that aired last nigh with some added series
        metadata along with VOD showings. Supports field filtering.

        Recommendations are only computed based on Sky viewing data.


        Currently This feature is only supported for EU.
      operationId: getLatestTv
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: maxResults
          in: query
          description: >
            Puts a cap on total number of results returned by the search engine
            to limit pagination and prevent UI's from paginating forever over a
            very large number of items - it would continuously ask for more,

            generating tens of requests. The value of this parameter will
            overwrite the itemCount root level response field.

            This param applies to root level program only. The actual number of
            programs in the response may be less than specified depending on
            programs meeting input filter criteria and pagination params.

            Example: if maxResults=10&offset=5&limit=15, this would return top
            level programs at indexes 5 through 9.
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: integer
            example: 10
        - name: f2m
          in: query
          description: >
            Used to specify whether to return content that is free or not-free
            to

            specified account. This is applied to all catalog types specified in
            the request. Supported values are


            * `exclude`: Only the content that is not free to watch is returned

            * `only`: Only free content is returned.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: companyId
          in: query
          description: >
            Generic filter on company IDs of all types - SubNetwork, Network and
            NetworkGroups -

            regardless of station association type (linear) or PMA role (vod).

            Returns only the showings provided by the specified company, if
            available.

            In Browse, supports complex logical expressions - AND/OR/NOT.

            In Watch Options, does not support the negative form (NOT)

            and does not filter through vod/offers with contentGrouping=*Bundles
            - Only effective against singles.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: entityTag
          in: query
          description: >
            Filters based on entity tag Id specified.  This param takes

            value in conditional expression format with tag Ids separated by OR,
            AND

            and NOT.  For nested conditions, the caller should appropriately
            enclose

            the conditions within ().


            Examples are:

            * entityTag=(8665239266925354118 OR 8870645924716631118 OR
            7140881620312185118 OR 7850811880973641118 OR 4765208851651203118 OR
            5876264884571790127)

            * entityTag=(6975528850416233118 AND 5595772021387518118)

            * entityTag=(8665239266925354118 OR (8870645924716631118 AND
            7140881620312185118))

            * entityTag=(8665239266925354118 OR (5876264884571790127 AND NOT
            5628801549346379127 AND NOT 5571253227301165118))
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR (5876264884571790127 AND NOT
                5628801549346379127 AND NOT 5571253227301165118 AND NOT
                8116412341147107118 AND NOT 6774224877631532118))
            ORed:
              description: ORed
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR 5876264884571790127)
            OR AND:
              description: OR AND
              value: >-
                (8665239266925354118 OR (8870645924716631118 AND
                7140881620312185118))
            ANDed:
              description: ANDed
              value: (6975528850416233118 AND 5595772021387518118)
        - name: entityField
          in: query
          description: >
            Allows to specify a list of program level metadata fields to be

            included in the API response.  When this param is not used, the
            program

            metadata would contain only programId and programType fields.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: showingField
          in: query
          description: >
            Allows to specify a list of showing level fields to be included in
            the

            API response.  When this param is not used, the showings object
            would

            contain only mediaId and mediaGuid fields.
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          example:
            - programId
            - rating
            - cc
            - providerCompanies
            - distributorCompanies
            - linearCompanies
            - networkGroupCompanies
        - name: numShowings
          in: query
          description: >
            Allows to specify how many showings per catalog under each program
            the

            API should return.  Each episode under a seriesMaster will have

            specified number of showings.


            This param takes special value `all` which would return all showings

            under each program.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            all:
              description: Returns all showings per catalog under each program
              value: all
            five:
              description: Returns max 5 showings per catalog under each program
              value: 5
        - name: include
          in: query
          description: >
            Optional expansion of fields in responses.

            No default value. Fields supported by this parameter are not
            returned by default and need to be explicitly requested here.

            When present, the API will return the associated metadata field as
            defined by the values below:


            * `programVariant`: Controls whether to resolve program variant
            metadata of a showing - linear or vod.
              By default, program variant objects only carry `programVariantId` field.
              When expanded, program variant objects would carry the whole program variant object Entity DS provides in the response.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            programVariant:
              description: programVariant
              value: programVariant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LatestTvResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
  /v1/partners/{partnerId}/programs/becauseYouWatched:
    get:
      tags:
        - Personalization
      summary: Personalized recommendation of programs based on watch history
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Content Discovery's Because You Watched endpoint selects seed programs
        to use for presenting

        "Because You Watched" row experiences on X1 and Stream. It selects seed
        programs from a user's

        recent watch history, filtering based on the provided parameters, and
        prioritizing seed

        programs based on day-parting.


        **Note:** Today the API will recommend programs based on their
        availability.
      operationId: getBecauseYouWatched
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: contentCatalogTypes
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              description: >-
                Defines what showing types the API should match on to compute
                results.
          examples:
            offer:
              description: offer
              value: offer
            linear:
              description: linear
              value: linear
            vod:
              description: vod
              value: vod
            livod:
              description: livod
              value: livod
            locker:
              description: locker
              value: locker
          example:
            - vod
            - linear
            - locker
            - offer
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: recommendedLimit
          in: query
          description: >
            This parameter specifies the number of similar programs in Because
            You Watched response.
          required: false
          schema:
            maximum: 50
            minimum: 1
            type: integer
            default: 8
        - name: companyId
          in: query
          description: >
            Generic filter on company IDs of all types - SubNetwork, Network and
            NetworkGroups -

            regardless of station association type (linear) or PMA role (vod).

            Returns only the showings provided by the specified company, if
            available.

            In Browse, supports complex logical expressions - AND/OR/NOT.

            In Watch Options, does not support the negative form (NOT)

            and does not filter through vod/offers with contentGrouping=*Bundles
            - Only effective against singles.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: programType
          in: query
          description: |
            Returns programs of specified program types.  Value of this param
            can also be in conditional expression format specifying multiple
            program types OR/AND/NOT.  Supported program types are
            * `movie`
            * `seriesMaster`
            * `sportingEvent`
            * `musicVideo`
            * `concert`
            * `preview`
            * `episode`
            * `advertisement`
            * `minisode`
            * `extra`
            * `other`
            * `clip`
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Movie:
              description: Movie
              value: movie
            Movie OR Episode:
              description: Movie OR Episode
              value: (movie OR episode)
            MusicVideo:
              description: MusicVideo
              value: musicVideo
            Preview:
              description: Preview
              value: preview
            NOT Movie:
              description: NOT Movie
              value: (NOT movie)
            NOT Movie AND NOT Episode:
              description: NOT Movie AND NOT Episode
              value: (NOT movie AND NOT episode)
            Concert:
              description: Concert
              value: concert
            SportingEvent:
              description: SportingEvent
              value: sportingEvent
            Minisode:
              description: Minisode
              value: minisode
            Clip:
              description: Clip
              value: clip
            Episode:
              description: Episode
              value: episode
            Extra:
              description: Extra
              value: extra
            SeriesMaster:
              description: SeriesMaster
              value: seriesMaster
            Advertisement:
              description: Advertisement
              value: advertisement
            Other:
              description: Other
              value: other
          example: (movie OR seriesMaster)
        - name: entityTag
          in: query
          description: >
            Filters based on entity tag Id specified.  This param takes

            value in conditional expression format with tag Ids separated by OR,
            AND

            and NOT.  For nested conditions, the caller should appropriately
            enclose

            the conditions within ().


            Examples are:

            * entityTag=(8665239266925354118 OR 8870645924716631118 OR
            7140881620312185118 OR 7850811880973641118 OR 4765208851651203118 OR
            5876264884571790127)

            * entityTag=(6975528850416233118 AND 5595772021387518118)

            * entityTag=(8665239266925354118 OR (8870645924716631118 AND
            7140881620312185118))

            * entityTag=(8665239266925354118 OR (5876264884571790127 AND NOT
            5628801549346379127 AND NOT 5571253227301165118))
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR (5876264884571790127 AND NOT
                5628801549346379127 AND NOT 5571253227301165118 AND NOT
                8116412341147107118 AND NOT 6774224877631532118))
            ORed:
              description: ORed
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR 5876264884571790127)
            OR AND:
              description: OR AND
              value: >-
                (8665239266925354118 OR (8870645924716631118 AND
                7140881620312185118))
            ANDed:
              description: ANDed
              value: (6975528850416233118 AND 5595772021387518118)
        - name: disableEpisodeEntityTag
          in: query
          description: >
            This parameter gives the ability to return series based ONLY on the

            series level entity tags.


            * `false` - series will be returned if the series and at least one
              of its child episodes have the requested tag.
            * `true` - series and all its episodes will be returned as long as
            the
              series has the requested tag.
          required: false
          schema:
            type: boolean
            default: false
        - name: entityField
          in: query
          description: >
            Allows to specify a list of program level metadata fields to be

            included in the API response.  When this param is not used, the
            program

            metadata would contain only programId and programType fields.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BecauseYouWatchedResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
  /v1/partners/{partnerId}/programs:
    get:
      tags:
        - Browse
      summary: >-
        browse programs over linear and vod catalogs applying filters, sorts and
        personalization.
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        XVP Browse Programs API allows clients to discover Program entities that

        satisfy given search criteria over linear and VOD catalog types. Some

        sample use cases are:


        * Return Movies from the VOD catalog order by popularity


        * Return Favorite Movies from the VOD catalog order for a given user.


        * Return TV Shows for Comedy genre based programs


        This API provides options to


        * filter the result based on both entity and showing level fields.


        * filter the attributes in the response just to include selected ones.


        * sort the result by various fields in ascending or descending order. 
        Also

        supports secondary sort fields.


        * limit the number of results returned.


        * paginate the response if the number of Program entities satisfying the

        search criteria is big.


        Currently, serving personalized content is not supported by this API. 
        Personalized

        browse will be supported in future once upstream service supports it.
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: programsGet
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: contentCatalogTypes
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              description: >-
                Defines what showing types the API should match on to compute
                results.
          examples:
            offer:
              description: offer
              value: offer
            linear:
              description: linear
              value: linear
            vod:
              description: vod
              value: vod
            livod:
              description: livod
              value: livod
            locker:
              description: locker
              value: locker
          example:
            - vod
            - linear
            - locker
            - offer
        - name: numShowings
          in: query
          description: >
            Allows to specify how many showings per catalog under each program
            the

            API should return.  Each episode under a seriesMaster will have

            specified number of showings.


            This param takes special value `all` which would return all showings

            under each program.
          required: false
          schema:
            pattern: ^[0-9]+$|all
            type: string
          examples:
            '--':
              description: '--'
            all:
              description: Returns all showings per catalog under each program
              value: all
            five:
              description: Returns max 5 showings per catalog under each program
              value: 5
        - name: numLinearShowings
          in: query
          description: >-
            Specifies number of showings to return for linear catalog under each
            program.  Defaults to zero and won&#39;t return any linear showings
            until and unless other params (like &#x60;numShowings&#x60;) that
            enables returning showings level data are used. This param takes
            special value &#x60;all&#x60; which would return all showings for
            linear catalog under each program.
          required: false
          schema:
            pattern: ^[0-9]+$|all
            type: string
          examples:
            '--':
              description: '--'
            all:
              description: Returns all showings for linear catalog under each program
              value: all
            five:
              description: Returns max 5 showings for linear catalog under each program
              value: 5
        - name: numVodShowings
          in: query
          description: |
            Specifies number of showings to return for vod catalog under each
            program.  Defaults to zero and won't return any vod showings until
            and unless other params (like `numShowings`) that enables returning
            showings level data are used.

            This param takes special value `all` which would return all showings
            for vod catalog under each program.
          required: false
          schema:
            pattern: ^[0-9]+$|all
            type: string
          examples:
            '--':
              description: '--'
            all:
              description: Returns all showings for vod catalog under each program
              value: all
            five:
              description: Returns max 5 showings for vod catalog under each program
              value: 5
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: episodeLimit
          in: query
          description: |
            Specifies maximum number of episodes to return under a series.
            Must be used in conjunction with `episodeOffset` which
            specifies start position of episode range. By default all
            episodes in a seriesmaster are returned.
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: integer
            example: 10
            default: 10
        - name: episodeOffset
          in: query
          description: >
            On Browse requests, it defines starting index (zero) of episodes
            range

            under a seriesMaster. Must be used in conjunction with
            `episodeLimit`

            which specifies maximum number of programs in a page.

            By default all episodes in a seriesMaster are returned.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 1
            default: 0
        - name: entityField
          in: query
          description: >
            Allows to specify a list of program level metadata fields to be

            included in the API response.  When this param is not used, the
            program

            metadata would contain only programId and programType fields.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: episodeField
          in: query
          description: >
            Allows to specify a list of program specific fields to be included
            in the

            API response for episodes under a series.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: showingField
          in: query
          description: >
            Allows to specify a list of showing level fields to be included in
            the

            API response.  When this param is not used, the showings object
            would

            contain only mediaId and mediaGuid fields.
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          example:
            - programId
            - rating
            - cc
            - providerCompanies
            - distributorCompanies
            - linearCompanies
            - networkGroupCompanies
        - name: facetField
          in: query
          description: >
            This param enables to display count of showings that have given
            value

            for a specified field.  These are calculated and returned per
            program.

            For series, the showing facet will include showings from children

            episodes as well. Fields that convey dates should be formatted as
            ISO8601 strings
          required: false
          schema:
            type: array
            items:
              type: string
          example:
            - productContextId
            - productContextType
            - providerCompanies
            - linearCompanies
            - vod
            - linear
            - preorder
            - est
            - ppv
            - downloadable
            - expirationDate
            - availableDate
            - newUntil
            - lastChanceFrom
            - videoQuality
        - name: preferredVideoQuality
          in: query
          description: >-
            Returns linear showings based on provided video quality preference.
            Applicable to linear catalog type only.
          required: false
          schema:
            type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            HD:
              description: HD
              value: HD
        - name: preferredLanguage
          in: query
          description: >
            Allows to specify language preference.

            If a program has non-english variant then that program will be
            returned in place of original program.

            Expects a language culture code, which is comprised of two lowercase
            characters (representing language) with an optional hyphen plus two
            uppercase characters (representing country/region).

            The language component is an ISO 639-1 value and the country
            component is an ISO 3166-1 alpha-2 value.

            Example language culture codes include `en-us` (English), `es-us`
            (Spanish), `fr-ca` (Canadian French).
          required: false
          schema:
            type: string
            default: en-us
          examples:
            Canadian French:
              description: Canadian French
              value: fr-ca
            Spanish:
              description: Spanish
              value: es-us
            American English:
              description: American English
              value: en-us
        - name: entitySort
          in: query
          description: >
            Allows to sort browse result by various entity level metadata.

            A secondary sort field can also be specified as tie breaker for
            primary

            field.  The fields can optionally be prefixed with `asc:` or `desc:`
            to

            specify the sort order.  Below table shows the possible values this
            param

            can take, their default sort order and tie breaker if secondary sort
            criteria

            is not specified.


            | Sort Value | Behavior | Default Order | Supported Sort order | Tie
            Breaker |

            | ---- | ---- | ---- | ---- | ---- |

            | `airTime` | Sorts programs based on their earliest showing start
            time using linear as priority.  For series, the showings of child
            episodes will be considered.  Must be last when used as secondary
            sort field | asc | asc, desc | `UHD, HD, SD, programId` |

            | `alpha` | Sorts programs alphabetically ignoring stop words and
            casing.  Episodes would be sorted based on episode title rather than
            series title | asc | asc, desc | `programId` |

            | `browse` | Sorts programs by browse rank in descending order. 
            Used by default for VOD queries | desc | desc | `originalAirDate,
            releaseYear, titleSort, Id` |

            | `editorial` | Programs are sorted by their editorial rank for the
            specified collection, in ascending order. Non-ranked programs are
            sorted by browse rank by default.<br/>**Note:** Must be used in
            conjunction with collectionId param. | asc | asc | `browseRank,
            originalAirDate, releaseYear, titleSort, programId` |

            | `expired` | Sorts programs based on their earliest showing
            expiration date, using vod as priority.  For series, the showings of
            child episodes will be considered as well.<br/>**Note:** must be the
            last sort when using multiple sorts. | asc | asc, desc | `UHD, HD,
            SD, programId` |

            | `releaseYear` | Sorts on the release year of the program | desc |
            asc, desc | `browseRank, programId` |

            | `rottenTomatoesFanScore` | Sort by Rotten Tomatoes fan score |
            desc | asc, desc | `releaseYear, browseRank, programId` |

            | `rottenTomatoesCriticScore` | Sort by Rotten Tomatoes critic score
            | desc | asc, desc | `releaseYear, browseRank, programId` |

            | `linear` | Sort by linear popularity rank in descending order. 
            Used by default in the case of linear only queries. | desc | desc |
            `originalAirDate, releaseYear, titleSort, programId` |

            | `paw` | Sort on the paw rank in descending. Must be paired with
            the paw.id parameter.| desc | desc | `programId` |

            | `personalized` | Sorts programs in based on their personalized
            score from the Recommender.  Any subsequent sort is the seed used by
            the Recommender.  Browse rank is used as the seed if a secondary
            sort is not specified.  Must be paired with an account id (device id
            is optional). | asc | asc, desc | `programId` |

            | `trailerRank` | Sorts programs based on their trailer rank.<br/>
            <li> Previews will be returned first, <li> then Extras with the
            field isTrailer marked as true, <li> then all other extras will be
            sorted by their trailerRank score (from index) <li> then all other
            entities | asc | asc, desc | `programId` |

            | `favorite` | Sorts programs based on how much a user prefers that
            program. (the program's "favorite score") <p> Favorite programs
            return at the top of the results, followed by non-favorites. By
            default non-favorites will be sorted by programId in ascending
            order. <p> Non-favorite programs will be sorted by the secondary
            sort, if specified. (Example: `entity.sort=favorite,alpha`) | na |
            na | `programId` |

            | `channelNumber`| Sorts programs and their respective showings.
            Linear showings are sorted by the channel number of the stations the
            they are playing on with Listing.startTime as the tiebreaker. VOD
            showings with no channel number will sort at the end.| asc | asc,
            desc | `Listing.startTime` |
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            airtime:
              value: airtime
            asc:airtime:
              value: asc:airtime
            desc:airtime:
              value: desc:airtime
            alpha:
              value: alpha
            asc:alpha:
              value: asc:alpha
            desc:alpha:
              value: desc:alpha
            browse:
              value: browse
            desc:browse:
              value: desc:browse
            editorial:
              value: editorial
            expired:
              value: expired
            asc:expired:
              value: asc:expired
            desc:expired:
              value: desc:expired
            releaseyear:
              value: releaseyear
            asc:releaseyear:
              value: asc:releaseyear
            desc:releaseyear:
              value: desc:releaseyear
            rottentomatoes.fanscore:
              value: rottentomatoes.fanscore
            asc:rottentomatoes.fanscore:
              value: asc:rottentomatoes.fanscore
            desc:rottentomatoes.fanscore:
              value: desc:rottentomatoes.fanscore
            rottentomatoes.criticscore:
              value: rottentomatoes.criticscore
            asc:rottentomatoes.criticscore:
              value: asc:rottentomatoes.criticscore
            desc:rottentomatoes.criticscore:
              value: desc:rottentomatoes.criticscore
            linear:
              value: linear
            paw:
              value: paw
            personalized:
              value: personalized
            trailerrank:
              value: trailerrank
            asc:trailerrank:
              value: asc:trailerrank
            desc:trailerrank:
              value: desc:trailerrank
            favorite:
              value: favorite
            channelNumber:
              value: channelNumber
            asc:channelNumber:
              value: asc:channelNumber
            desc:channelNumber:
              value: desc:channelNumber
        - name: episodeSort
          in: query
          description: >
            Sorts episodes under a series program by specified field and order.

            Supported episode sort fields are `tvSeasonNumber`,
            `tvSeasonEpisodeNumber`,

            `year`, `originalAirDate`.  The fields can be optionally prefixed
            with `asc:`

            or `desc:` to indicate the sort direction.  The default sort
            direction is

            descending order.


            "Episodes are by default sorted by tvSeasonNumber and
            tvSeasonEpisodeNumber in descending order.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            desc:tvSeasonNumber:
              value: desc:tvSeasonNumber
            asc:tvSeasonNumber:
              value: asc:tvSeasonNumber
            desc:tvSeasonEpisodeNumber:
              value: desc:tvSeasonEpisodeNumber
            asc:tvSeasonEpisodeNumber:
              value: asc:tvSeasonEpisodeNumber
            desc:year:
              value: desc:year
            asc:year:
              value: asc:year
            desc:originalairdate:
              value: desc:originalairdate
            asc:origianlairdate:
              value: asc:origianlairdate
        - name: vodShowingsSort
          in: query
          description: >
            Sorts the VOD showings by specified fields. Optional the fields can
            be

            prefixed with asc: or desc: to specify the sort direction. Default

            sort order when not specified is descending order. Supported sort
            fields

            are listed below indicating how they are sorted when sort direction

            is specified.


            | Sort name | Description | Ascending order | Descending order | Tie
            Breaker |

            | ---- | ---- | ---- | ---- | ---- |

            | `videoQuality` | Sorts showings based on video quality | SD, HD,
            UHD | UHD, HD, SD | `asc:mediaId` |

            | `windowStart` | Sorts showings based on window start time |
            Showings airing earlier | Showings airing later |
            `desc:videoQuality, asc:mediaId` |

            | `windowEnd` | Sorts showings based on window end time | Showings
            ending earlier | Showings ending later | `desc:videoQuality,
            asc:mediaId` |

            | `isSubjectToBlackout` | Sorts linear showings based on the
            subjectToBlackout field | false, true | true, false | |

            | `isWatchable` | Sorts showings based on the
            subscriberAccess.isWatchable field | false, true | true, false | |
          required: false
          schema:
            type: array
            items:
              type: string
        - name: livodShowingsSort
          in: query
          description: >
            Sorts the livod showings by specified fields.  Optional the fields
            can be

            prefixed with asc: or desc: to specify the sort direction. The
            default

            sort order when not specified is descending order. Supported sort
            fields

            are listed below indicating how they are sorted when sort direction

            is specified.


            | Sort name | Description | Ascending order | Descending order | Tie
            Breaker |

            | ---- | ---- | ---- | ---- | ---- |

            | `videoQuality` | Sorts showings based on video quality | SD, HD,
            UHD | UHD, HD, SD | `asc:mediaId` |

            | `windowStart` | Sorts showings based on window start time |
            Showings airing earlier | Showings airing later |
            `desc:videoQuality, asc:mediaId` |

            | `windowEnd` | Sorts showings based on window end time | Showings
            ending earlier | Showings ending later | `desc:videoQuality,
            asc:mediaId` |

            | `isSubjectToBlackout` | Sorts linear showings based on the
            subjectToBlackout field | false, true | true, false | |

            | `isWatchable` | Sorts showings based on the
            subscriberAccess.isWatchable field | false, true | true, false | |
          required: false
          schema:
            type: array
            items:
              type: string
        - name: linearShowingsSort
          in: query
          description: >
            Sorts the linear showings by specified fields.  Optional the fields
            can be

            prefixed with asc: or desc: to specify the sort direction. The
            default

            sort order when not specified is descending order. Supported sort
            fields

            are listed below indicating how they are sorted when sort direction

            is specified.


            | Sort name | Description | Ascending order | Descending order | Tie
            Breaker |

            | ---- | ---- | ---- | ---- | ---- |

            | `videoQuality` | Sorts showings based on video quality | SD, HD,
            UHD | UHD, HD, SD | `asc:listingId` |

            | `windowStart` | Sorts showings based on window start time |
            Showings airing earlier | Showings airing later | `desc:format,
            asc:listingId` |

            | `windowEnd` | Sorts showings based on window end time | Showings
            ending earlier | Showings ending later | `desc:format,
            asc:listingId` |

            | `isSubjectToBlackout` | Sorts linear showings based on the
            subjectToBlackout field | false, true | true, false | |

            | `isWatchable` | Sorts showings based on the
            subscriberAccess.isWatchable field | false, true | true, false | |
          required: false
          schema:
            type: array
            items:
              type: string
        - name: f2m
          in: query
          description: >
            Used to specify whether to return content that is free or not-free
            to

            specified account. This is applied to all catalog types specified in
            the request. Supported values are


            * `exclude`: Only the content that is not free to watch is returned

            * `only`: Only free content is returned.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: f2mSample
          in: query
          description: >
            Controls returning the programs that are marked as FreeToSample.

            This is the content that providers give free regardless of
            entitlement:

            * `exclude` - Content that's marked as FreeToSample is excluded

            * `only` - Only the content that's marked as FreeToSample is
            returned.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: entityTag
          in: query
          description: >
            Filters based on entity tag Id specified.  This param takes

            value in conditional expression format with tag Ids separated by OR,
            AND

            and NOT.  For nested conditions, the caller should appropriately
            enclose

            the conditions within ().


            Examples are:

            * entityTag=(8665239266925354118 OR 8870645924716631118 OR
            7140881620312185118 OR 7850811880973641118 OR 4765208851651203118 OR
            5876264884571790127)

            * entityTag=(6975528850416233118 AND 5595772021387518118)

            * entityTag=(8665239266925354118 OR (8870645924716631118 AND
            7140881620312185118))

            * entityTag=(8665239266925354118 OR (5876264884571790127 AND NOT
            5628801549346379127 AND NOT 5571253227301165118))
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR (5876264884571790127 AND NOT
                5628801549346379127 AND NOT 5571253227301165118 AND NOT
                8116412341147107118 AND NOT 6774224877631532118))
            ORed:
              description: ORed
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR 5876264884571790127)
            OR AND:
              description: OR AND
              value: >-
                (8665239266925354118 OR (8870645924716631118 AND
                7140881620312185118))
            ANDed:
              description: ANDed
              value: (6975528850416233118 AND 5595772021387518118)
        - name: disableEpisodeEntityTag
          in: query
          description: >
            This parameter gives the ability to return series based ONLY on the

            series level entity tags.


            * `false` - series will be returned if the series and at least one
              of its child episodes have the requested tag.
            * `true` - series and all its episodes will be returned as long as
            the
              series has the requested tag.
          required: false
          schema:
            type: boolean
            default: false
        - name: adult
          in: query
          description: >
            Specified to control serving of content which have the adult
            property

            set to true. Supported values are:


            * `include`: Include the content which have adult property set to
            true.

            * `exclude`: Exclude the content which have adult property set to
            true.

            * `only`: Include ONLY the content which have adult property set to
            true.
          required: false
          schema:
            type: string
            default: exclude
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: kids
          in: query
          description: >
            Used to control serving of content tagged as kids friendly.

            Supported values are:


            * `include` - Include the content which have the kids property set
            to true.

            * `exclude` - Exclude the content which have the kids property set
            to true.

            * `only` - Include ONLY the content which have the kids property set
            to true.
          required: false
          schema:
            type: string
            default: include
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: hasDvs
          in: query
          description: |
            Allows to filter linear content based on whether they include
            descriptive video service.
          required: false
          schema:
            type: boolean
            example: false
        - name: isSap
          in: query
          description: >
            Allows to filter linear content based on whether they include a
            second

            audio track.
          required: false
          schema:
            type: boolean
        - name: isClosedCaption
          in: query
          description: >
            Allows to filter linear content based on whether closed caption is
            included.
          required: false
          schema:
            type: boolean
        - name: isDownloadable
          in: query
          description: |
            Allows to filters showings based on whether or not they are
            downloadable for viewing on portable devices.
          required: false
          schema:
            type: boolean
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: isSubtitled
          in: query
          description: >
            Allows to filter linear showings by whether or not they are
            subtitled.
          required: false
          schema:
            type: boolean
        - name: isIVod
          in: query
          description: |
            Allows to filter VOD showings based on iVOD attribute.  By default,
            ivod and non-ivod are returned.
          required: false
          schema:
            type: boolean
        - name: isNew
          in: query
          description: >-
            Controls returning programs that are new, as dictated by the
            provider.
          required: false
          schema:
            type: boolean
        - name: airingType
          in: query
          description: |
            Specified to filter the linear content by airing type.  Multiple
            values can be specified using conditional expressions with values
            separated by AND/OR/NOT.  The supported airing types are

            * `new`
            * `repeat`
            * `live`
            * `taped`
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            New:
              description: New
              value: new
            taped:
              description: taped
              value: taped
            NOT New AND NOT Repeat:
              description: NOT New AND NOT Repeat
              value: NOT new AND NOT repeat
            repeat:
              description: repeat
              value: repeat
            NOT New:
              description: NOT New
              value: NOT new
            live:
              description: live
              value: live
            New OR Repeat:
              description: New OR Repeat
              value: new OR repeat
        - name: videoFormat
          in: query
          description: >-
            Specified to filter the showings based on video encoding format. 
            When multiple values are specified, they will be ORed.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            ism:
              description: ism
              value: ism
            (ism OR f4m):
              description: (ism OR f4m)
              value: (ism OR f4m)
            mpeg_qam:
              description: mpeg_qam
              value: mpeg_qam
            mpeg4:
              description: mpeg4
              value: mpeg4
            f4m:
              description: f4m
              value: f4m
            m3u:
              description: m3u
              value: m3u
            (NOT ism):
              description: (NOT ism)
              value: (NOT ism)
        - name: videoQuality
          in: query
          description: >-
            Specified to filter the showings based on video quality.  When
            multiple values are specified, they will be ORed.
          required: false
          schema:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            HD:
              description: HD
              value: HD
          example:
            - HD
            - UHD
        - name: tvSeasonNumber
          in: query
          description: >-
            From one to two elements. Allows you to filter results from s1 to
            s2.
          required: false
          schema:
            type: string
        - name: companyTypeTag
          in: query
          description: >
            Merlin Ids of the company type.  Returns only the showings provided
            by

            specified company type.  Conditional statements can be used to
            specify

            multiple company types separating them by AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Not:
              description: Not
              value: (NOT 7135411279946774118)
            Single:
              description: Single
              value: 6096810715357751000
            ORed:
              description: ORed
              value: (7344893066844930118 OR 7135411279946774118)
        - name: companyId
          in: query
          description: >
            Generic filter on company IDs of all types - SubNetwork, Network and
            NetworkGroups -

            regardless of station association type (linear) or PMA role (vod).

            Returns only the showings provided by the specified company, if
            available.

            In Browse, supports complex logical expressions - AND/OR/NOT.

            In Watch Options, does not support the negative form (NOT)

            and does not filter through vod/offers with contentGrouping=*Bundles
            - Only effective against singles.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: providerCompanyId
          in: query
          description: >
            Merlin Id of the company.  Returns only the showings provided by

            specified company.  This param also takes value in conditional

            expression format in which Ids are logically separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: distributorCompanyId
          in: query
          description: >
            Merlin Id of the company.  Returns only the content distributed by

            specified company.  This param also takes value in conditional

            expression format in which Ids are logically separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 5232923399725817000
            Single NOT:
              description: Single NOT
              value: (NOT 8463172568858291105)
            ORed:
              description: ORed
              value: (5470883989996030105 OR 7697030199876428105)
            AND NOT:
              description: AND NOT
              value: (5470883989996030105 AND NOT 7697030199876428105)
        - name: providerDisplayCode
          in: query
          description: >
            Return programs from the specified provider display codes. This
            param

            can also take values in the form of conditional expression with
            codes

            logically separated by AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Multiple:
              description: Multiple
              value: (FMAX_HD OR FMAX_HD)
            Single:
              description: Single
              value: FMAX_HD
            Single NOT:
              description: Single NOT
              value: (NOT FMAX_HD)
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (BRAINSTORM_THEA OR FILM_MOVEMENT_THEA OR (FMAX AND NOT
                FMAX_HD))
        - name: stationId
          in: query
          description: |
            Merlin Id of the station.  Returns only the content airing on
            specified station.  Filtering can be done by specifying multiple
            stationIds in conditional expression format with Ids separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 8210474099770809000
            Single NOT:
              description: Single NOT
              value: (NOT 5471601266051497117)
            ORed:
              description: ORed
              value: (8210474099770809117 OR 5471601266051497117)
            AND NOT:
              description: AND NOT
              value: (NOT 8210474099770809117 AND NOT 5471601266051497117)
        - name: durableAppId
          in: query
          description: >
            Filters objects based on the value of durableAppId field.

            For programs applies to the VOD catalog only, listings if requested
            will not be affected.

            In WatchOptions API only, it also filters the offers associated with
            VOD.

            Supports negative filter.

            Note: This filter will override any partner exclusion configured in
            the background.
          required: false
          schema:
            type: string
          examples:
            SingleId:
              description: SingleId
              value: Comcast_StreamApp
            SingleIdNot:
              description: SingleIdNot
              value: NOT "Comcast_StreamApp"
            ORed:
              description: ORed
              value: '"Comcast_StreamApp" OR "Netflix"'
            OR_NOT:
              description: OR_NOT
              value: NOT ("Comcast_StreamApp" OR "Netflix")
        - name: audioTrackLanguage
          in: query
          description: >
            Allows to filter VOD, ODOL and Offer showings based on if they
            contain

            specified audio track language.  Value should be in ISO 639-1
            format.

            When multiple values are specified, they will be ORed.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            en:
              description: en
              value: en
            es:
              description: es
              value: es
          example:
            - en
            - es
        - name: closedCaptionLanguage
          in: query
          description: >
            Allows to filter VOD, ODOL and Offer showings based on if they
            contain

            specified audio track language.  Value should be in ISO 639-1
            format.

            When multiple values are specified, they will be ORed.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            en:
              description: en
              value: en
            es:
              description: es
              value: es
          example:
            - en
            - es
        - name: dvsLanguage
          in: query
          description: >
            Allows to filter VOD, ODOL and Offer showings based on if they
            contain

            specified dvs language.  Value should be in ISO 639-1 format.  When

            multiple values are specified, they will be ORed.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            en:
              description: en
              value: en
            es:
              description: es
              value: es
          example:
            - en
            - es
        - name: rating
          in: query
          description: >
            Allows to filter showings based on if they contain specified
            ratings.

            Specified ratings should contain scheme and value separated by '$'
            sign.

            Multiple ratings can be specified using conditional expression
            format

            with each rating separated by AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: mpaa$pg
            Single NOT:
              description: Single NOT
              value: (NOT mpaa$pg)
            ORed:
              description: ORed
              value: (mpaa$pg OR tv$tvtg)
            AND NOT:
              description: AND NOT
              value: (NOT rating:mpaa$pg AND NOT mpaa$pg13 AND NOT mpaa$g)
        - name: isSubjectToBlackout
          in: query
          description: |
            Controls returning programs with listings marked if they should be
            subject to blackout.
          required: false
          schema:
            type: boolean
        - name: vodType
          in: query
          description: >
            When specified, filters the vod content based on associated
            offer.purchaseCategory.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy, ppv, rent}. Note that BuyMA will
            be converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: livodType
          in: query
          description: >
            When specified, filters the livod content based on specified offer
            types.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy,ppv,rent}. Note that BuyMA will be
            converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            ppv:
              description: ppv
              value: ppv
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: offerType
          in: query
          description: |
            Filters the content based on specified offer types.
            When multiple offer types are passed, they will be ORed.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            ppv:
              description: ppv
              value: ppv
            preorder:
              description: preorder
              value: preorder
        - name: onNow
          in: query
          description: >
            Applies to linear catalog only, VOD showings if requested will not
            be affected.

            When specified, returns only the showings that are airing now.

            Any linear showing that is not playing now would not be returned.


            **Note:** When determining vod/linear showing availability window,
            the

            current time will be rounded down to nearest 5 minute and nearest

            minute for livod


            **Example:** If the request is executed at 12:17:35, for linear/vod,
            the

            time will be rounded down to 12:15:00 and for livod to 12:17:00. 
            This

            means any at 12:17:35, any linear/vod showing that hasn't expired

            before 12:15:00 and any livod showing that hasn't expired before

            12:17:00 will be treated as "on now" and any showing that hasn't

            started before these times will be treated as "upcoming".
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            program:
              description: program
              value: program
        - name: upcoming
          in: query
          description: >
            Applies to linear catalog only, VOD showings if requested will not
            be affected.

            When specified, returns only the showings that are airing in the
            future.

            Any showing that is airing now or expired would not be returned.


            **Note:** When determining vod/linear showing availability window,
            the

            current time will be rounded down to nearest 5 minute and nearest

            minute for livod.


            **Example:** If the request is executed at 12:17:35, for linear/vod,
            the

            time will be rounded down to 12:15:00 and for livod to 12:17:00. 
            This

            means any at 12:17:35, any linear/vod showing that hasn't expired

            before 12:15:00 and any livod showing that hasn't expired before

            12:17:00 will be treated as "on now" and any showing that hasn't

            started before these times will be treated as "upcoming".
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            program:
              description: program
              value: program
        - name: licenseStartVod
          in: query
          description: >
            When specified, filters VOD showings based on their available date,
            in units of days.

            Number representing days count should be prefixed with `+`, `-`, `<`
            or `>` to indicate

            the appropriate time window. `+` and `>` return the programs with
            VOD showings that became

            available more than specified number of days ago and `-` and `<`
            return the programs

            with VOD showings that became available within 7days.
          required: false
          schema:
            pattern: ^[><][0-9][d]$
            type: string
          examples:
            <7d:
              description: >-
                Return all programs with VOD showings that became available in
                last 7 days.
              value: <7d
            '>7d':
              description: >-
                Return all programs with VOD showing that became available more
                than 7 days ago.
              value: '>7d'
        - name: licenseEndVod
          in: query
          description: >
            When specified, returns programs that have VOD showings expiring
            within

            or more than specified number of days.  Number representing days
            count

            should be prefixed with `+`, `-`, `<` or `>` to indicate the

            appropriate time window. `+` and `>` return VOD showings that are
            expiring

            in more than specified number of days.  `-` and `<` return VOD
            showings that

            are expiring in less than specified number of days.
          required: false
          schema:
            pattern: ^[><][0-9][d]$
            type: string
          examples:
            <7d:
              summary: Return all programs with VOD showings expiring within 7 days.
              description: <7d
              value: <7d
            '>7d':
              summary: Return all programs with VOD showing expiring after 7 days.
              description: '>7d'
              value: '>7d'
        - name: duration
          in: query
          description: >-
            Filters programs based on their duration in milliseconds. The filter
            takes in an array of minimum and maximum integer values representing
            the range of time in milliseconds. The filter values will be
            converted to minutes. Thus, they will be rounded to the nearest
            minute when necessary.
          required: false
          schema:
            maxItems: 2
            minItems: 2
            type: array
            items:
              type: integer
          examples:
            List:
              description: List
              value:
                - 1800000
                - 3600000
        - name: windowStart
          in: query
          description: >
            Returns programs that have listing or media that start at specified

            window or specified range.  This option applies only to

            linear and livod catalog types.  Specified value must be date-time

            ISO8601 format.


            **Note:** By default all showings that are airing within a 14 day
            window

            are returned.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            Return programs that start at specified time or later:
              description: Return programs that start at specified time or later
              value:
                - '2020-05-17T11:41:00Z'
            Return programs that start at specified range:
              description: Return programs that start at specified range
              value:
                - '2020-05-17T11:41:00Z'
                - '2020-05-21T11:41:00Z'
        - name: windowEnd
          in: query
          description: >
            Returns programs that have listing or media that end at specified

            window or specified range.  This option applies only to

            linear and livod catalog types.  Specified value must be date-time

            ISO8601 format.


            **Note:** By default all showings that are airing within a 14 day
            window

            are returned.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            Return programs that have listing or media that end at specified time or earlier:
              description: >-
                Return programs that have listing or media that end at specified
                time or earlier
              value:
                - '2020-05-17T11:00:00Z'
            Returns programs that have listing or media that end in the specified time window:
              description: >-
                Returns programs that have listing or media that end in the
                specified time window
              value:
                - '2020-05-17T11:00:00Z'
                - '2020-05-21T11:00:00Z'
        - name: personId
          in: query
          description: |
            Filters the programs to those associated with specified person Ids.
            This param takes value in conditional expression format.  Programs
            can be filtered by specifying multiple person Ids that are combined
            with OR/AND/NOT.  Nested conditions if any should be appropriately
            enclosed within a pair of parenthesis.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: (9182116076434126111)
            Single NOT:
              description: Single NOT
              value: (NOT 9182116076434126111)
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (9182116076434126111 OR (7633281399957104111 AND NOT
                5226681172019624111))
            ORed:
              description: ORed
              value: (9182116076434126111 OR 7633281399957104111)
            AND OR:
              description: AND OR
              value: >-
                (9182116076434126111 OR (7633281399957104111 AND
                5226681172019624111))
            ANDed:
              description: ANDed
              value: (9182116076434126111 AND 7633281399957104111)
        - name: teamId
          in: query
          description: |
            Filters the programs to those associated with specified team Ids.
            This param takes value in conditional expression format.  Programs
            can be filtered by specifying multiple team Ids that are combined
            with OR/AND/NOT.  Nested conditions if any should be appropriately
            enclosed within a pair of parenthesis.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: (6918384653328004118)
            Single NOT:
              description: Single NOT
              value: (NOT 6918384653328004118)
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (8055553523358894119 OR (7602510414538121119 AND NOT
                5672631785567065118)
            ORed:
              description: ORed
              value: (6918384653328004118 OR 8338622261067188118)
            OR AND:
              description: OR AND
              value: >-
                (6918384653328004118 OR (8338622261067188118 AND
                5672631785567065118)
            ANDed:
              description: ANDed
              value: (6918384653328004118 AND 8338622261067188118)
        - name: leagueId
          in: query
          description: |2
                Filters programs to those associated with specified league IDs.
                Supports conditional expression format combined with OR/AND/NOT.
                Nested conditions if any should be appropriately enclosed within a pair of parenthesis.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: (7746543763139167130)
            Single NOT:
              description: Single NOT
              value: (NOT 5037307755164604130)
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (5856756994500258130 OR (4919091566261169130 AND NOT
                8465000665859514130))
            ORed:
              description: ORed
              value: (4919091566261169130 OR 8465000665859514130)
            AND OR:
              description: AND OR
              value: >-
                (7191207057232378130 OR (7714972043334462130 AND
                5744087207860982130))
            ANDed:
              description: ANDed
              value: (4630588994857545130 AND 5044570026969309130)
        - name: parentId
          in: query
          description: >
            Filters programs to include only those associated to the provided

            parent id.


            **Example:** This param can be used to get trailers or other extras
            for a

            movie or to get all the episodes of a series


            Multiple values are be specified using conditional statements by
            separating

            the IDs by AND/OR/NOT
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            movie:
              summary: Return all trailers and extras for a movie
              description: movie
              value: 8011471465088573000
            series:
              summary: Return all episodes of a series
              description: series
              value: 6739025690255748000
            ORed:
              description: ORed
              value: (6739025690255748112 OR 8011471465088573112)
        - name: relatedPersonByTeam
          in: query
          description: >
            Return programs based on person-team association. This will return

            programs that are indirectly related to a person because the
            programs

            are related to that person's team. This parameter accepts a person

            entity id as the value.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            '4650999935064578111':
              description: '4650999935064578111'
              value: 4650999935064578000
        - name: relatedTeamByPerson
          in: query
          description: |
            Return programs based on person-team association. This will return
            programs that are indirectly related to a team because the programs
            are related to one of that team's members. This parameter accepts a
            team entity id as the value.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            '7883404367183298119':
              description: '7883404367183298119'
              value: 7883404367183299000
        - name: titleStart
          in: query
          description: >
            Returns programs whose title start with specified letter or a range
            of letters.
          required: false
          schema:
            maxItems: 2
            minItems: 1
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
        - name: releaseYear
          in: query
          description: >
            Returns programs that were released in the specified year or range
            of

            years.
          required: false
          schema:
            maxItems: 2
            minItems: 1
            type: array
            items:
              type: integer
          examples:
            '--':
              description: '--'
        - name: rottenTomatoesCriticScore
          in: query
          description: |
            Returns programs that have specified rotten tomatoes critic score or
            are within the range specified.
          required: false
          schema:
            maxItems: 2
            minItems: 1
            type: array
            items:
              type: integer
          examples:
            '--':
              description: '--'
        - name: rottenTomatoesFanScore
          in: query
          description: |
            Returns programs that have specified rotten tomatoes fan score or
            are within the range specified.
          required: false
          schema:
            maxItems: 2
            minItems: 1
            type: array
            items:
              type: integer
          examples:
            '--':
              description: '--'
        - name: programId
          in: query
          description: |
            Merlin ID of the programs.  Returns exactly the programs associated
            with specified Merlin IDs.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: programType
          in: query
          description: |
            Returns programs of specified program types.  Value of this param
            can also be in conditional expression format specifying multiple
            program types OR/AND/NOT.  Supported program types are
            * `movie`
            * `seriesMaster`
            * `sportingEvent`
            * `musicVideo`
            * `concert`
            * `preview`
            * `episode`
            * `advertisement`
            * `minisode`
            * `extra`
            * `other`
            * `clip`
          required: false
          schema:
            maxLength: 2147483647
            minLength: 1
            type: string
          examples:
            '--':
              description: '--'
            Movie:
              description: Movie
              value: movie
            Movie OR Episode:
              description: Movie OR Episode
              value: (movie OR episode)
            MusicVideo:
              description: MusicVideo
              value: musicVideo
            Preview:
              description: Preview
              value: preview
            NOT Movie:
              description: NOT Movie
              value: (NOT movie)
            NOT Movie AND NOT Episode:
              description: NOT Movie AND NOT Episode
              value: (NOT movie AND NOT episode)
            Concert:
              description: Concert
              value: concert
            SportingEvent:
              description: SportingEvent
              value: sportingEvent
            Minisode:
              description: Minisode
              value: minisode
            Clip:
              description: Clip
              value: clip
            Episode:
              description: Episode
              value: episode
            Extra:
              description: Extra
              value: extra
            SeriesMaster:
              description: SeriesMaster
              value: seriesMaster
            Advertisement:
              description: Advertisement
              value: advertisement
            Other:
              description: Other
              value: other
          example: (movie OR seriesMaster)
        - name: language
          in: query
          description: >
            Returns programs that have specified audio language.  The specified

            language code should be in [ISO
            639-3](https://en.wikipedia.org/wiki/ISO_639-3) format.

            Multiple language code can be specified using conditional
            expressions

            by separating them by AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            en AND es:
              description: en AND es
              value: (en AND es)
            NOT en AND NOT es:
              description: NOT en AND NOT es
              value: (NOT en AND NOT es)
            en:
              description: en
              value: en
            en OR es:
              description: en OR es
              value: (en OR es)
            NOT en:
              description: NOT en
              value: (NOT en)
        - name: tvRating
          in: query
          description: |
            Return programs with specified TV ratings.  Multiple ratings can be
            specified using conditional expressions by separating the values by
            AND/OR/NOT. Supported values are:
            * `tv$tvy`
            * `tv$tvy7`
            * `tv$tvg`
            * `tv$tvpg`
            * `tv$tv14`
            * `tv$tvma`
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            tv$tvg:
              description: tv$tvg
              value: tv$tvg
            tv$tvy7:
              description: tv$tvy7
              value: tv$tvy7
            tv$tvy:
              description: tv$tvy
              value: tv$tvy
            tv$tv14:
              description: tv$tv14
              value: tv$tv14
            tv$tvma:
              description: tv$tvma
              value: tv$tvma
            NOT tv$tvy:
              description: NOT tv$tvy
              value: (NOT tv$tvy)
            NOT tv$tvy AND NOT tv$tvy7:
              description: NOT tv$tvy AND NOT tv$tvy7
              value: (NOT tv$tvy AND NOT tv$tvy7)
            tv$tvpg:
              description: tv$tvpg
              value: tv$tvpg
            tv$tvy OR tv$tvy7:
              description: tv$tvy OR tv$tvy7
              value: (tv$tvy OR tv$tvy7)
        - name: mpaaRating
          in: query
          description: >
            Return programs with specified MPAA ratings.  Multiple ratings can
            be

            specified using conditional expressions by separating the values by

            AND/OR/NOT. Supported values are:

            * `mpaa$g`

            * `mpaa$pg`

            * `mpaa$pg14`

            * `mpaa$r`

            * `mpaa$nc17`

            * `mpaa$adult`
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            mpaa$pg:
              description: mpaa$pg
              value: mpaa$pg
            mpaa$adult:
              description: mpaa$adult
              value: mpaa$adult
            mpaa$pg14:
              description: mpaa$pg14
              value: mpaa$pg14
            mpaa$nc17:
              description: mpaa$nc17
              value: mpaa$nc17
            mpaa$r:
              description: mpaa$r
              value: mpaa$r
            NOT pg:
              description: NOT pg
              value: (NOT mpaa$pg)
            pg OR pg13:
              description: pg OR pg13
              value: (mpaa$pg OR mpaa$pg13)
            mpaa$g:
              description: mpaa$g
              value: mpaa$g
            NOT pg NOT pg13:
              description: NOT pg NOT pg13
              value: (NOT mpaa$pg AND NOT mpaa$pg13)
        - name: starRating
          in: query
          description: >
            Return programs with specified star rating or star rating range. 
            Valid

            star ratings range from 1 to 5.
          required: false
          schema:
            maxItems: 2
            minItems: 1
            type: array
            items:
              type: integer
          examples:
            '--':
              description: '--'
        - name: collectionId
          in: query
          description: |
            Returns all the program in an editorial collection.  By default
            programs in editorial collection are sorted by editorial rank unless
            otherwise specified.  This should always be paired with
            `nonCollectionPrograms` param.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            '6743372274942785178':
              description: '6743372274942785178'
              value: 6743372274942786000
        - name: nonCollectionPrograms
          in: query
          description: >
            Specifies whether or not to include in the response programs that
            are

            not in the specified collection.  Should be used in conjunction with

            `collectionId`.


            * `include` - Return all available programs with editorial programs
              boosted to the top of the results list.
            * `exclude` - Return only the programs in specified editorial
              collection
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            include:
              description: include
              value: include
            exclude:
              description: exclude
              value: exclude
        - name: collectionRandomizeTopN
          in: query
          description: When specified, randomizes top N programs in editorial collection.
          required: false
          schema:
            type: integer
        - name: watched
          in: query
          description: |
            Filter the programs based on whether user has watched them or not.
            Supported values are

            * `include` - include the programs that user has watched
            * `exclude` - exclude the programs that user has watched.  With
              series, if an episode of the series is marked as watched, then entire
              series will be excluded.
            * `only` - include only the programs that user has watched.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: favorite
          in: query
          description: |
            Filters browse content to include programs that have been favorited.
            Possible values are
            * `implicit` - Returns only implicit favorite programs
            * `explicit` - Returns only explicitly favorited programs
            * `blended` - Returns both implicit and explicit favorite programs.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            explicit:
              description: explicit
              value: explicit
            blended:
              description: blended
              value: blended
            implicit:
              description: implicit
              value: implicit
        - name: episodeOnlyCredit
          in: query
          description: |
            This param affects the way series and episodes are returned when
            person filter is used.  Possible values are

            * `true` - Only episodes which have the person as guest will be
              returned.  i.e. if a person is tagged on an episode but not it's
              parent series, then that episode will be returned.  Subsequently,
              seriesMaster will not be returned.
            * `false` - All programs related to person will be returned.
              Episodes will be returned under their parent series if and only if
              their parent series is also tagged with the person.
          required: false
          schema:
            type: boolean
        - name: entityIdOperator
          in: query
          description: >
            Works in conjunction with `programId` param to control the behavior
            of id.

            * `only` - will not change the behavior

            * `exclude` - will exclude IDs in `programId` parameter, if
            `programId=0`,
              it works as normal query
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: include
          in: query
          description: >
            Optional expansion of fields in responses.

            No default value. Fields supported by this parameter are not
            returned by default and need to be explicitly requested here.

            When present, the API will return the associated metadata field as
            defined by the values below:


            * `company`: Controls whether to resolve company metadata of company
            objects.
              By default, company objects only carry `companyId` field.
              When expanded, company objects would also carry `displayName` - depending on the size of the response, expanding on metadata may cause increased latency.
              In Browse, this option affects the following response fields: `Showing.brandingGroupCompanies`, `Showing.distributorCompanies`,
              `Showing.providerCompanies`, `Showing.linearCompanies`, `Program.NativeProvider`, `Program.firstRunCompany`
            * `programVariant`: Controls whether to resolve program variant
            metadata of a showing - linear or vod.
              By default, program variant objects only carry `programVariantId` field.
              When expanded, program variant objects would carry the whole program variant object Entity DS provides in the response.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            programVariant:
              description: programVariant
              value: programVariant
            company:
              description: company
              value: company
        - name: isThreeD
          in: query
          required: false
          schema:
            type: boolean
        - name: isRestartable
          in: query
          required: false
          schema:
            type: boolean
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowseResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '429':
          description: >
            Too many requests. The API does not support "Retry-After" header to
            indicate how

            long to wait before making a new request. This error code originates
            from Rex's 530 response

            code when: <p> <li> Rex Browse nodes are saturated and requests
            fallback to MinREX <p>**and**

            <li> MinRex does not support the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
  /v1/partners/{partnerId}/entity/tvSeason/{entityId}:
    get:
      tags:
        - Metadata
      description: >-
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Get Entity Meta data for TvSeason based on EntityID
      operationId: getEntityMetaDataForTvSeason
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: Tv Season Entity ID
          required: true
          schema:
            type: integer
            format: int64
          example: '8783037735662069114'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the Tv Season Meta Data for the given SeasonID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TvSeasonModel'
        '400':
          description: Required attribute(s) not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: The EntityID not found in Entity Meta Data service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Upstream MetaData service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /v1/partners/{partnerId}/entity/team/{entityId}:
    get:
      tags:
        - Metadata
      description: >-
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Get Entity Meta data for SportsTeam based on EntityID
      operationId: getEntityMetaDataForSportsTeam
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: Sports Team Entity ID
          required: true
          schema:
            type: integer
            format: int64
          example: '9205833023949850119'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the Team Meta Data for the given teamID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SportsTeamModel'
        '400':
          description: Required attribute(s) not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: The EntityID not found in Entity Meta Data service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Upstream MetaData service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /v1/partners/{partnerId}/entity/seriesMaster/{entityId}/watchOptions:
    get:
      tags:
        - Watch Options
      summary: >-
        Returns watch options for a series program, grouped by tvseason when
        applicable
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        For the given account and device, returns available watch options
        grouped by content catalogs for all available episodes,

        grouped by TV season, for the requested series ID.

        For more on content catalogs, see ContentCatalogTypes query parameter
        definition.

        The API returns all seasons for the requested series with a list of
        episode watch options for one or more seasons.

        Any non-seasonal and/or extra content are returned in a tvSeason object
        marked as `ungroupedSeason`.

        All TV seasons will always be returned along with a count of available
        programs.

        Optionally, episode watch options can be embedded in the first, last or
        all tv seasons in the series with ```embedTvSeasonWatchOptions``` query
        parameter.

        Episodes can be paginated with `limit` and `offset` query params.


        Special Cases:


        * **Non-Episodic Listings**:
          Listings are associated with the series instead of episodes.
          It is a common scenario on daily news shows.
          Non-episodic watch options is returned at the series level, even when `embedSeasonWatchOptions=None`
          TvSeasonSummary is returned for ungrouped episodes, even when `embedSeasonWatchOptions=None`
          See [example](https://internal-xvp-docs-staging.r53.aae.comcast.net/XVP-Experience-APIs/xvp-disco/watch-options-api/use-cases/series-non-episodic/)
        * **Non-Seasonal Episodes**:
          Episodes that do not carry season information.
          This is how additional content and extras are modeled. Some news and sports shows are also modeled like that.
          May occur by itself (news and sports shows) or in conjunction with seasonal content - such as in the case of extras and additional content.
          See [example](https://internal-xvp-docs-staging.r53.aae.comcast.net/XVP-Experience-APIs/xvp-disco/watch-options-api/use-cases/series-non-seasonal/)
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: getWatchOptionsForSeriesMaster
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: merlin entity Id
          required: true
          schema:
            type: string
          examples:
            RachelMaddowShow:
              description: The Rachel Maddow Show, non-seasonal episodes
              value: 5120784063126795000
            TheGoodWife:
              description: The Good Wife Series, owned by EvanCohen1 acct
              value: 7103256165508658000
            SpongeBobSquarePants:
              description: >-
                SpongeBob Square Pants Series, seasonal and non-seasonal
                episodes
              value: 8222051132772877000
            Friends:
              description: Friends Series
              value: 6725196975454471000
            BbcNews:
              description: BBC News Series, non-episodic listings
              value: 8647472541216612000
            Westworld:
              description: Westworld Series
              value: 5309300168268692000
            TheSimpsons:
              description: The Simpsons Series
              value: 6440918268753874000
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: contentCatalogTypes
          in: query
          description: >
            Defines what showing types the API should match on to compute
            results.


            Clients must opt-in to each catalog type.

            If one or more catalog type is included in the request, those will
            be OR'ed.

            If the param is omitted and no content catalog is specified in the
            request, unfiltered results will be served.

            - for series requests, the API would still return season and episode
            information, but no watch options.


            Watch options aims to be a more complete and up to date way of
            consuming showings that includes support for offers and purchases.

            It groups showings by "content catalogs" and provide filtering
            functionality to enable clients to taylor catalogs as it sees fit.

            Vod, linear and offer catalogs can be filtered by offer type
            (subscribe, buy, rent or ppv) and whether it is watchable by the
            user.

            So clients can taylor vod and linear catalogs to only convey
            subscription content - sky use case - or watchable vod only - x1 use
            case.

            Similarly, the offer catalog can be slimmed down to only offers of
            transactional nature - sky use case

            - or "not-watchable" offers - x1 use case.


            We rely on REX Browse API for resolving entity associations - the
            episodes in a series.


            Content catalogs are:


            * `linear`:
              Live content available to the user in context through a subscription or transaction.
              By default returns both entitled and not entitled linear airings sorted by start time in ascending order.
              Linear content is sourced by REX Browse.
            * `vod`:
              On demand content available to the user in context through a subscription or transaction.
              On demand content is sourced by NGP.
            * `offer`:
              All offers associated with content (vod or linear) available to the user in context.
              Includes preorders.
              Offers are sourced by NGP.

            **Note:** Watchable subscription offers are not returned so the
            offers catalog is somewhat personalized if subscription offers are
            requested.


            * `dvr`:
              **[DEFINING]** Personalized catalog based on user's completed recordings - not yet supported.
              Recordings are sourced by REX Browse.

            No default value.
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - vod
                - linear
                - offer
                - dvr
        - name: embedSeasonWatchOptions
          in: query
          description: >
            controls whether to embed tvseason watchoptions as well as programs
            - and their respective watchoptions - on tvseasons.

            Only supported for series watch options and will be ignored on
            simple programs such as movies and episodes.

            All other tvSeason objects will only contain season number and
            program count. Supported values are:


            * `first` (default): returns watch options for first season in the
            series. First season is defined as the season in which
            tvSeasonNumber=1.
              Purely non-seasonal series will never return any results when embedSeasonWatchOptions=first.
            * `last`: returns watch options for the last season with episodes
            available to watch, without prior knowledge of what the last season
            number is.
              Purely non-seasonal series will never return any results when embedSeasonWatchOptions=last.
            * `all`: embeds watch options for all seasons in a series.
              Non-seasonal content will be returned under a "fake" season object with ungroupedEpisodes=true.
            * `none`: does not return watch options for any of the seasons.
              TvSeasonSummary is returned for ungrouped episodes, even when `embedSeasonWatchOptions=None`.
          required: false
          schema:
            type: array
            items:
              type: string
              default: first
              enum:
                - none
                - first
                - last
                - all
        - name: preferredLanguage
          in: query
          description: >
            Allows to specify language preference.

            If a program has non-english variant then that program will be
            returned in place of original program.

            Expects a language culture code, which is comprised of two lowercase
            characters (representing language) with an optional hyphen plus two
            uppercase characters (representing country/region).

            The language component is an ISO 639-1 value and the country
            component is an ISO 3166-1 alpha-2 value.

            Example language culture codes include `en-us` (English), `es-us`
            (Spanish), `fr-ca` (Canadian French).
          required: false
          schema:
            type: string
            default: en-us
          examples:
            Canadian French:
              description: Canadian French
              value: fr-ca
            Spanish:
              description: Spanish
              value: es-us
            American English:
              description: American English
              value: en-us
        - name: f2m
          in: query
          description: >
            Used to specify whether to return content that is free or not-free
            to

            specified account. This is applied to all catalog types specified in
            the request. Supported values are


            * `exclude`: Only the content that is not free to watch is returned

            * `only`: Only free content is returned.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: videoFormat
          in: query
          description: >
            Specified to filter WatchOptions. VOD based on video encoding
            format.

            Does not support conditional statements such AND/OR/NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            ism:
              description: ism
              value: ism
            mpeg_qam:
              description: mpeg_qam
              value: mpeg_qam
            mpeg4:
              description: mpeg4
              value: mpeg4
            f4m:
              description: f4m
              value: f4m
            m3u:
              description: m3u
              value: m3u
        - name: hasDvs
          in: query
          description: |
            Allows to filter linear content based on whether they include
            descriptive video service.
          required: false
          schema:
            type: boolean
            example: false
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: isIVod
          in: query
          description: |
            Allows to filter VOD showings based on iVOD attribute.  By default,
            ivod and non-ivod are returned.
          required: false
          schema:
            type: boolean
        - name: include
          in: query
          description: >
            Optional expansion of fields/relationships in responses.

            No default value. Fields supported by this parameter are not
            returned by default and need to be explicitly requested here.

            When present, the API will return the requested field as defined by
            the values below:


            * `company`: Controls whether to resolve company metadata of company
            objects.
              By default, company objects only carry `companyId` field.
              When expanded, company objects would also carry `displayName` - depending on the size of the response, expanding on metadata may cause increased latency.

            * `subscriberAccess`: controls whether to include subscriberAccess
            information to ALL content catalogs in the response.
              Note that subscriberAccess information applies user entitlements to the response, making it harder to cache.
              Full SubscriberAccess object is returned for offers only.
              Vod and linear only carry SubscriberAccess.isWatchable field.
              See `SubscriberAccess` schema for more.

            * `featureAsset`: controls whether to include featureAsset
            information to all offers in the response.
              Returned when requested asset is a non-series program.
              For SeasonBundle and EpisodeBundle, this will be the requested program's asset. Only one asset is returned.

            * `previewAsset`: controls whether to include previewAsset
            information to all offers in the response.
              Optionally returned for contentGrouping = Single|SingleMovieBundle but not Service|MultiMovieBundle|SeasonBundle|EpisodeBundle|SeriesBundle|RentalBundle

            * `programVariant`: controls whether to expand program variant
            metadata of WatchOptions assets - linear or vod.
              By default, program variant objects only carry `programVariantId` field.
              When expanded, program variant objects would carry the whole program variant object Entity DS provides in the response.
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - company
                - subscriberAccess
                - previewAsset
                - featureAsset
                - programVariant
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: isRestartable
          in: query
          description: |
            Filter showings by whether or not they are restartable.
          required: false
          schema:
            type: boolean
        - name: videoQuality
          in: query
          description: >
            Specified to filter the showings based on video quality. When
            multiple values are specified, they will be ORed.


            Caveat: Currently videoQuality filter will not be applied to offers
            with contentGrouping = SeasonBundle

            because NGP has not implemented the filter for SeasonBundle offers
            yet.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            3D:
              description: 3D
              value: 3D
            4K:
              description: 4K
              value: 4K
            HD:
              description: HD
              value: HD
            XD:
              description: XD
              value: XD
        - name: vodType
          in: query
          description: >
            When specified, filters the vod content based on associated
            offer.purchaseCategory.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy, ppv, rent}. Note that BuyMA will
            be converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            ppv:
              description: ppv
              value: ppv
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: companyId
          in: query
          description: >
            Generic filter on company IDs of all types - SubNetwork, Network and
            NetworkGroups -

            regardless of station association type (linear) or PMA role (vod).

            Returns only the showings provided by the specified company, if
            available.

            In Browse, supports complex logical expressions - AND/OR/NOT.

            In Watch Options, does not support the negative form (NOT)

            and does not filter through vod/offers with contentGrouping=*Bundles
            - Only effective against singles.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: durableAppId
          in: query
          description: |2
                Filters VOD objects based on the value of durableAppId field. Applies to the VOD catalog only, listings if requested will not be affected. In WatchOptions API only, it also filters the offers associated with VOD. Supports negative filter.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            Single:
              description: Single
              value: ("Comcast_StreamApp")
            Single NOT:
              description: Single NOT
              value: (NOT "Comcast_StreamApp")
            ORed:
              description: ORed
              value: (NOT ("Comcast_StreamApp" OR "Netflix"))
        - name: stationId
          in: query
          description: |
            Merlin Id of the station.  Returns only the content airing on
            specified station.  Filtering can be done by specifying multiple
            stationIds in conditional expression format with Ids separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 8210474099770809000
            Single NOT:
              description: Single NOT
              value: (NOT 5471601266051497117)
            ORed:
              description: ORed
              value: (8210474099770809117 OR 5471601266051497117)
            AND NOT:
              description: AND NOT
              value: (NOT 8210474099770809117 AND NOT 5471601266051497117)
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesMasterWatchOptionsModel'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
  /v1/partners/{partnerId}/entity/seriesMaster/{entityId}/tvSeason/{seasonNumber}/watchOptions:
    get:
      tags:
        - Watch Options
      summary: >-
        Returns watch options for a single tvseason for the content catalogs
        requested
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        For the given account and device, returns watch options grouped by
        content catalogs for all episodes, filtered for

        the TV season specified in the `tvSeasonNumber` path parameter for the
        requested series ID.

        This API does not support non-seasonal or non-episodic content. Only
        seasonal/episodic content of the tv season specified in the request will
        be returned.

        For more on content catalogs, see ContentCatalogTypes query parameter
        definition.
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: getWatchOptionsForTvSeason
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: merlin entity Id
          required: true
          schema:
            type: string
          examples:
            RachelMaddowShow:
              description: The Rachel Maddow Show, non-seasonal episodes
              value: 5120784063126795000
            TheGoodWife:
              description: The Good Wife Series, owned by EvanCohen1 acct
              value: 7103256165508658000
            SpongeBobSquarePants:
              description: >-
                SpongeBob Square Pants Series, seasonal and non-seasonal
                episodes
              value: 8222051132772877000
            Friends:
              description: Friends Series
              value: 6725196975454471000
            BbcNews:
              description: BBC News Series, non-episodic listings
              value: 8647472541216612000
            Westworld:
              description: Westworld Series
              value: 5309300168268692000
            TheSimpsons:
              description: The Simpsons Series
              value: 6440918268753874000
        - name: seasonNumber
          in: path
          description: filter series watch options by season number
          required: true
          schema:
            type: integer
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: contentCatalogTypes
          in: query
          description: >
            Defines what showing types the API should match on to compute
            results.


            Clients must opt-in to each catalog type.

            If one or more catalog type is included in the request, those will
            be OR'ed.

            If the param is omitted and no content catalog is specified in the
            request, unfiltered results will be served.

            - for series requests, the API would still return season and episode
            information, but no watch options.


            Watch options aims to be a more complete and up to date way of
            consuming showings that includes support for offers and purchases.

            It groups showings by "content catalogs" and provide filtering
            functionality to enable clients to taylor catalogs as it sees fit.

            Vod, linear and offer catalogs can be filtered by offer type
            (subscribe, buy, rent or ppv) and whether it is watchable by the
            user.

            So clients can taylor vod and linear catalogs to only convey
            subscription content - sky use case - or watchable vod only - x1 use
            case.

            Similarly, the offer catalog can be slimmed down to only offers of
            transactional nature - sky use case

            - or "not-watchable" offers - x1 use case.


            We rely on REX Browse API for resolving entity associations - the
            episodes in a series.


            Content catalogs are:


            * `linear`:
              Live content available to the user in context through a subscription or transaction.
              By default returns both entitled and not entitled linear airings sorted by start time in ascending order.
              Linear content is sourced by REX Browse.
            * `vod`:
              On demand content available to the user in context through a subscription or transaction.
              On demand content is sourced by NGP.
            * `offer`:
              All offers associated with content (vod or linear) available to the user in context.
              Includes preorders.
              Offers are sourced by NGP.

            **Note:** Watchable subscription offers are not returned so the
            offers catalog is somewhat personalized if subscription offers are
            requested.


            * `dvr`:
              **[DEFINING]** Personalized catalog based on user's completed recordings - not yet supported.
              Recordings are sourced by REX Browse.

            No default value.
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - vod
                - linear
                - offer
                - dvr
        - name: preferredLanguage
          in: query
          description: >
            Allows to specify language preference.

            If a program has non-english variant then that program will be
            returned in place of original program.

            Expects a language culture code, which is comprised of two lowercase
            characters (representing language) with an optional hyphen plus two
            uppercase characters (representing country/region).

            The language component is an ISO 639-1 value and the country
            component is an ISO 3166-1 alpha-2 value.

            Example language culture codes include `en-us` (English), `es-us`
            (Spanish), `fr-ca` (Canadian French).
          required: false
          schema:
            type: string
            default: en-us
          examples:
            Canadian French:
              description: Canadian French
              value: fr-ca
            Spanish:
              description: Spanish
              value: es-us
            American English:
              description: American English
              value: en-us
        - name: f2m
          in: query
          description: >
            Used to specify whether to return content that is free or not-free
            to

            specified account. This is applied to all catalog types specified in
            the request. Supported values are


            * `exclude`: Only the content that is not free to watch is returned

            * `only`: Only free content is returned.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: videoFormat
          in: query
          description: >
            Specified to filter WatchOptions. VOD based on video encoding
            format.

            Does not support conditional statements such AND/OR/NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            ism:
              description: ism
              value: ism
            mpeg_qam:
              description: mpeg_qam
              value: mpeg_qam
            mpeg4:
              description: mpeg4
              value: mpeg4
            f4m:
              description: f4m
              value: f4m
            m3u:
              description: m3u
              value: m3u
        - name: hasDvs
          in: query
          description: |
            Allows to filter linear content based on whether they include
            descriptive video service.
          required: false
          schema:
            type: boolean
            example: false
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: isIVod
          in: query
          description: |
            Allows to filter VOD showings based on iVOD attribute.  By default,
            ivod and non-ivod are returned.
          required: false
          schema:
            type: boolean
        - name: include
          in: query
          description: >
            Optional expansion of fields/relationships in responses.

            No default value. Fields supported by this parameter are not
            returned by default and need to be explicitly requested here.

            When present, the API will return the requested field as defined by
            the values below:


            * `company`: Controls whether to resolve company metadata of company
            objects.
              By default, company objects only carry `companyId` field.
              When expanded, company objects would also carry `displayName` - depending on the size of the response, expanding on metadata may cause increased latency.

            * `subscriberAccess`: controls whether to include subscriberAccess
            information to ALL content catalogs in the response.
              Note that subscriberAccess information applies user entitlements to the response, making it harder to cache.
              Full SubscriberAccess object is returned for offers only.
              Vod and linear only carry SubscriberAccess.isWatchable field.
              See `SubscriberAccess` schema for more.

            * `featureAsset`: controls whether to include featureAsset
            information to all offers in the response.
              Returned when requested asset is a non-series program.
              For SeasonBundle and EpisodeBundle, this will be the requested program's asset. Only one asset is returned.

            * `previewAsset`: controls whether to include previewAsset
            information to all offers in the response.
              Optionally returned for contentGrouping = Single|SingleMovieBundle but not Service|MultiMovieBundle|SeasonBundle|EpisodeBundle|SeriesBundle|RentalBundle

            * `programVariant`: controls whether to expand program variant
            metadata of WatchOptions assets - linear or vod.
              By default, program variant objects only carry `programVariantId` field.
              When expanded, program variant objects would carry the whole program variant object Entity DS provides in the response.
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - company
                - subscriberAccess
                - previewAsset
                - featureAsset
                - programVariant
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: isRestartable
          in: query
          description: |
            Filter showings by whether or not they are restartable.
          required: false
          schema:
            type: boolean
        - name: videoQuality
          in: query
          description: >
            Specified to filter the showings based on video quality. When
            multiple values are specified, they will be ORed.


            Caveat: Currently videoQuality filter will not be applied to offers
            with contentGrouping = SeasonBundle

            because NGP has not implemented the filter for SeasonBundle offers
            yet.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            3D:
              description: 3D
              value: 3D
            4K:
              description: 4K
              value: 4K
            HD:
              description: HD
              value: HD
            XD:
              description: XD
              value: XD
        - name: vodType
          in: query
          description: >
            When specified, filters the vod content based on associated
            offer.purchaseCategory.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy, ppv, rent}. Note that BuyMA will
            be converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            ppv:
              description: ppv
              value: ppv
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: companyId
          in: query
          description: >
            Generic filter on company IDs of all types - SubNetwork, Network and
            NetworkGroups -

            regardless of station association type (linear) or PMA role (vod).

            Returns only the showings provided by the specified company, if
            available.

            In Browse, supports complex logical expressions - AND/OR/NOT.

            In Watch Options, does not support the negative form (NOT)

            and does not filter through vod/offers with contentGrouping=*Bundles
            - Only effective against singles.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: durableAppId
          in: query
          description: |2
                Filters VOD objects based on the value of durableAppId field. Applies to the VOD catalog only, listings if requested will not be affected. In WatchOptions API only, it also filters the offers associated with VOD. Supports negative filter.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            Single:
              description: Single
              value: ("Comcast_StreamApp")
            Single NOT:
              description: Single NOT
              value: (NOT "Comcast_StreamApp")
            ORed:
              description: ORed
              value: (NOT ("Comcast_StreamApp" OR "Netflix"))
        - name: stationId
          in: query
          description: |
            Merlin Id of the station.  Returns only the content airing on
            specified station.  Filtering can be done by specifying multiple
            stationIds in conditional expression format with Ids separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 8210474099770809000
            Single NOT:
              description: Single NOT
              value: (NOT 5471601266051497117)
            ORed:
              description: ORed
              value: (8210474099770809117 OR 5471601266051497117)
            AND NOT:
              description: AND NOT
              value: (NOT 8210474099770809117 AND NOT 5471601266051497117)
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchOptionsTvSeasonResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /v1/partners/{partnerId}/entity/seriesMaster/{entityId}/tvSeason/ungrouped/watchOptions:
    get:
      tags:
        - Watch Options
      summary: Returns non-seasonal watch options associated with the tv series
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        For the given account and device, returns available non-seasonal watch
        options grouped by content catalogs for the requested series ID.

        Non-seasonal content are episodes that are not associated with a tv
        season, such as specials or some news shows that are purely
        non-seasonal.

        This API does not support non-episodic watch options.

        For more on content catalogs, see ContentCatalogTypes query parameter
        definition.
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: getWatchOptionsForTvSeasonUngrouped
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: Series Master Entity ID
          required: true
          schema:
            type: string
          examples:
            RachelMaddowShow:
              description: The Rachel Maddow Show, non-seasonal episodes
              value: 5120784063126795000
            SpongeBobSquarePants:
              description: >-
                SpongeBob Square Pants Series, seasonal and non-seasonal
                episodes
              value: 8222051132772877000
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: contentCatalogTypes
          in: query
          description: >
            Defines what showing types the API should match on to compute
            results.


            Clients must opt-in to each catalog type.

            If one or more catalog type is included in the request, those will
            be OR'ed.

            If the param is omitted and no content catalog is specified in the
            request, unfiltered results will be served.

            - for series requests, the API would still return season and episode
            information, but no watch options.


            Watch options aims to be a more complete and up to date way of
            consuming showings that includes support for offers and purchases.

            It groups showings by "content catalogs" and provide filtering
            functionality to enable clients to taylor catalogs as it sees fit.

            Vod, linear and offer catalogs can be filtered by offer type
            (subscribe, buy, rent or ppv) and whether it is watchable by the
            user.

            So clients can taylor vod and linear catalogs to only convey
            subscription content - sky use case - or watchable vod only - x1 use
            case.

            Similarly, the offer catalog can be slimmed down to only offers of
            transactional nature - sky use case

            - or "not-watchable" offers - x1 use case.


            We rely on REX Browse API for resolving entity associations - the
            episodes in a series.


            Content catalogs are:


            * `linear`:
              Live content available to the user in context through a subscription or transaction.
              By default returns both entitled and not entitled linear airings sorted by start time in ascending order.
              Linear content is sourced by REX Browse.
            * `vod`:
              On demand content available to the user in context through a subscription or transaction.
              On demand content is sourced by NGP.
            * `offer`:
              All offers associated with content (vod or linear) available to the user in context.
              Includes preorders.
              Offers are sourced by NGP.

            **Note:** Watchable subscription offers are not returned so the
            offers catalog is somewhat personalized if subscription offers are
            requested.


            * `dvr`:
              **[DEFINING]** Personalized catalog based on user's completed recordings - not yet supported.
              Recordings are sourced by REX Browse.

            No default value.
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - vod
                - linear
                - offer
                - dvr
        - name: preferredLanguage
          in: query
          description: >
            Allows to specify language preference.

            If a program has non-english variant then that program will be
            returned in place of original program.

            Expects a language culture code, which is comprised of two lowercase
            characters (representing language) with an optional hyphen plus two
            uppercase characters (representing country/region).

            The language component is an ISO 639-1 value and the country
            component is an ISO 3166-1 alpha-2 value.

            Example language culture codes include `en-us` (English), `es-us`
            (Spanish), `fr-ca` (Canadian French).
          required: false
          schema:
            type: string
            default: en-us
          examples:
            Canadian French:
              description: Canadian French
              value: fr-ca
            Spanish:
              description: Spanish
              value: es-us
            American English:
              description: American English
              value: en-us
        - name: f2m
          in: query
          description: >
            Used to specify whether to return content that is free or not-free
            to

            specified account. This is applied to all catalog types specified in
            the request. Supported values are


            * `exclude`: Only the content that is not free to watch is returned

            * `only`: Only free content is returned.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: videoFormat
          in: query
          description: >
            Specified to filter WatchOptions. VOD based on video encoding
            format.

            Does not support conditional statements such AND/OR/NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            ism:
              description: ism
              value: ism
            mpeg_qam:
              description: mpeg_qam
              value: mpeg_qam
            mpeg4:
              description: mpeg4
              value: mpeg4
            f4m:
              description: f4m
              value: f4m
            m3u:
              description: m3u
              value: m3u
        - name: isIVod
          in: query
          description: |
            Allows to filter VOD showings based on iVOD attribute.  By default,
            ivod and non-ivod are returned.
          required: false
          schema:
            type: boolean
        - name: include
          in: query
          description: >
            Optional expansion of fields/relationships in responses.

            No default value. Fields supported by this parameter are not
            returned by default and need to be explicitly requested here.

            When present, the API will return the requested field as defined by
            the values below:


            * `company`: Controls whether to resolve company metadata of company
            objects.
              By default, company objects only carry `companyId` field.
              When expanded, company objects would also carry `displayName` - depending on the size of the response, expanding on metadata may cause increased latency.

            * `subscriberAccess`: controls whether to include subscriberAccess
            information to ALL content catalogs in the response.
              Note that subscriberAccess information applies user entitlements to the response, making it harder to cache.
              Full SubscriberAccess object is returned for offers only.
              Vod and linear only carry SubscriberAccess.isWatchable field.
              See `SubscriberAccess` schema for more.

            * `featureAsset`: controls whether to include featureAsset
            information to all offers in the response.
              Returned when requested asset is a non-series program.
              For SeasonBundle and EpisodeBundle, this will be the requested program's asset. Only one asset is returned.

            * `previewAsset`: controls whether to include previewAsset
            information to all offers in the response.
              Optionally returned for contentGrouping = Single|SingleMovieBundle but not Service|MultiMovieBundle|SeasonBundle|EpisodeBundle|SeriesBundle|RentalBundle

            * `programVariant`: controls whether to expand program variant
            metadata of WatchOptions assets - linear or vod.
              By default, program variant objects only carry `programVariantId` field.
              When expanded, program variant objects would carry the whole program variant object Entity DS provides in the response.
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - company
                - subscriberAccess
                - previewAsset
                - featureAsset
                - programVariant
        - name: hasDvs
          in: query
          description: |
            Allows to filter linear content based on whether they include
            descriptive video service.
          required: false
          schema:
            type: boolean
            example: false
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: isRestartable
          in: query
          description: |
            Filter showings by whether or not they are restartable.
          required: false
          schema:
            type: boolean
        - name: videoQuality
          in: query
          description: >
            Specified to filter the showings based on video quality. When
            multiple values are specified, they will be ORed.


            Caveat: Currently videoQuality filter will not be applied to offers
            with contentGrouping = SeasonBundle

            because NGP has not implemented the filter for SeasonBundle offers
            yet.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            3D:
              description: 3D
              value: 3D
            4K:
              description: 4K
              value: 4K
            HD:
              description: HD
              value: HD
            XD:
              description: XD
              value: XD
        - name: vodType
          in: query
          description: >
            When specified, filters the vod content based on associated
            offer.purchaseCategory.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy, ppv, rent}. Note that BuyMA will
            be converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            ppv:
              description: ppv
              value: ppv
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: companyId
          in: query
          description: >
            Generic filter on company IDs of all types - SubNetwork, Network and
            NetworkGroups -

            regardless of station association type (linear) or PMA role (vod).

            Returns only the showings provided by the specified company, if
            available.

            In Browse, supports complex logical expressions - AND/OR/NOT.

            In Watch Options, does not support the negative form (NOT)

            and does not filter through vod/offers with contentGrouping=*Bundles
            - Only effective against singles.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: durableAppId
          in: query
          description: |2
                Filters VOD objects based on the value of durableAppId field. Applies to the VOD catalog only, listings if requested will not be affected. In WatchOptions API only, it also filters the offers associated with VOD. Supports negative filter.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            Single:
              description: Single
              value: ("Comcast_StreamApp")
            Single NOT:
              description: Single NOT
              value: (NOT "Comcast_StreamApp")
            ORed:
              description: ORed
              value: (NOT ("Comcast_StreamApp" OR "Netflix"))
        - name: stationId
          in: query
          description: |
            Merlin Id of the station.  Returns only the content airing on
            specified station.  Filtering can be done by specifying multiple
            stationIds in conditional expression format with Ids separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 8210474099770809000
            Single NOT:
              description: Single NOT
              value: (NOT 5471601266051497117)
            ORed:
              description: ORed
              value: (8210474099770809117 OR 5471601266051497117)
            AND NOT:
              description: AND NOT
              value: (NOT 8210474099770809117 AND NOT 5471601266051497117)
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchOptionsTvSeasonResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /v1/partners/{partnerId}/entity/seriesMaster/{entityId}/reviews:
    get:
      tags:
        - Metadata
      description: >-
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Get Reviews of a Series Master
      operationId: getEntityMetaDataForSeriesMasterReviews
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: The Merlin ID of the program
          required: true
          schema:
            type: string
          examples:
            WestworldS1E1:
              description: >-
                Westworld S1E1 HBO, season bundle & single episodes, season
                related entity
              value: 8537240497790811000
            DowntownAbbey:
              description: Downtown Abbey Movie, owned by EvanCohen1 acct
              value: 7666635979166129000
            HotelTransilvania2:
              description: >-
                Hotel Transilvania 2 Movie, single and multi movie bundles,
                feature & preview assets, buy & rent
              value: 7643014976437766000
            ForrestGump:
              description: Forrest Gump Movie
              value: 5556445076776507000
            WestworldS2E5:
              description: Westworld S2E5 HBO, season bundle & single episodes
              value: 5496336915069100000
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: reviewsProvider
          in: query
          description: The provider of the reviews
          required: false
          schema:
            type: string
          examples:
            Common Sense Media:
              description: Common Sense Media
              value: CSM
            Rotten Tomatoes:
              description: Rotten Tomatoes
              value: RT
          example: CSM
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the Reviews Metadata for the given Series Master entityID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Required attribute(s) not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: The EntityID not found in Entity Meta Data service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Upstream MetaData service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
      deprecated: true
  /v1/partners/{partnerId}/entity/seriesMaster/{entityId}:
    get:
      tags:
        - Metadata
      description: >-
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Get Entity Meta data for the SeriesMaster based on EntityID
      operationId: getEntityMetaDataForSeriesMaster
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: Series Master Entity ID
          required: true
          schema:
            type: integer
            format: int64
          example: '5309300168268692112'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the Program Meta Data Information for the given EntityID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramModel'
        '400':
          description: Required attribute(s) not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: The EntityID not found in Entity Meta Data service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Upstream MetaData service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
      deprecated: true
  /v1/partners/{partnerId}/entity/program/{entityId}/watchOptions:
    get:
      tags:
        - Watch Options
      summary: >-
        Returns watch options for a non-series program for the content catalogs
        requested
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        For the given account and device, returns available watch options
        grouped by content catalogs for the requested program ID.

        For more on content catalogs, see ContentCatalogTypes query parameter
        definition.
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: getWatchOptionsForProgram
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: The Merlin ID of the program
          required: true
          schema:
            type: string
          examples:
            WestworldS1E1:
              description: >-
                Westworld S1E1 HBO, season bundle & single episodes, season
                related entity
              value: 8537240497790811000
            DowntownAbbey:
              description: Downtown Abbey Movie, owned by EvanCohen1 acct
              value: 7666635979166129000
            HotelTransilvania2:
              description: >-
                Hotel Transilvania 2 Movie, single and multi movie bundles,
                feature & preview assets, buy & rent
              value: 7643014976437766000
            ForrestGump:
              description: Forrest Gump Movie
              value: 5556445076776507000
            WestworldS2E5:
              description: Westworld S2E5 HBO, season bundle & single episodes
              value: 5496336915069100000
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: contentCatalogTypes
          in: query
          description: >
            Defines what showing types the API should match on to compute
            results.


            Clients must opt-in to each catalog type.

            If one or more catalog type is included in the request, those will
            be OR'ed.

            If the param is omitted and no content catalog is specified in the
            request, unfiltered results will be served.

            - for series requests, the API would still return season and episode
            information, but no watch options.


            Watch options aims to be a more complete and up to date way of
            consuming showings that includes support for offers and purchases.

            It groups showings by "content catalogs" and provide filtering
            functionality to enable clients to taylor catalogs as it sees fit.

            Vod, linear and offer catalogs can be filtered by offer type
            (subscribe, buy, rent or ppv) and whether it is watchable by the
            user.

            So clients can taylor vod and linear catalogs to only convey
            subscription content - sky use case - or watchable vod only - x1 use
            case.

            Similarly, the offer catalog can be slimmed down to only offers of
            transactional nature - sky use case

            - or "not-watchable" offers - x1 use case.


            We rely on REX Browse API for resolving entity associations - the
            episodes in a series.


            Content catalogs are:


            * `linear`:
              Live content available to the user in context through a subscription or transaction.
              By default returns both entitled and not entitled linear airings sorted by start time in ascending order.
              Linear content is sourced by REX Browse.
            * `vod`:
              On demand content available to the user in context through a subscription or transaction.
              On demand content is sourced by NGP.
            * `offer`:
              All offers associated with content (vod or linear) available to the user in context.
              Includes preorders.
              Offers are sourced by NGP.

            **Note:** Watchable subscription offers are not returned so the
            offers catalog is somewhat personalized if subscription offers are
            requested.


            * `dvr`:
              **[DEFINING]** Personalized catalog based on user's completed recordings - not yet supported.
              Recordings are sourced by REX Browse.

            No default value.
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - vod
                - linear
                - offer
                - dvr
        - name: preferredLanguage
          in: query
          description: >
            Allows to specify language preference.

            If a program has non-english variant then that program will be
            returned in place of original program.

            Expects a language culture code, which is comprised of two lowercase
            characters (representing language) with an optional hyphen plus two
            uppercase characters (representing country/region).

            The language component is an ISO 639-1 value and the country
            component is an ISO 3166-1 alpha-2 value.

            Example language culture codes include `en-us` (English), `es-us`
            (Spanish), `fr-ca` (Canadian French).
          required: false
          schema:
            type: string
            default: en-us
          examples:
            Canadian French:
              description: Canadian French
              value: fr-ca
            Spanish:
              description: Spanish
              value: es-us
            American English:
              description: American English
              value: en-us
        - name: f2m
          in: query
          description: >
            Used to specify whether to return content that is free or not-free
            to

            specified account. This is applied to all catalog types specified in
            the request. Supported values are


            * `exclude`: Only the content that is not free to watch is returned

            * `only`: Only free content is returned.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: videoFormat
          in: query
          description: >
            Specified to filter WatchOptions. VOD based on video encoding
            format.

            Does not support conditional statements such AND/OR/NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            ism:
              description: ism
              value: ism
            mpeg_qam:
              description: mpeg_qam
              value: mpeg_qam
            mpeg4:
              description: mpeg4
              value: mpeg4
            f4m:
              description: f4m
              value: f4m
            m3u:
              description: m3u
              value: m3u
        - name: hasDvs
          in: query
          description: |
            Allows to filter linear content based on whether they include
            descriptive video service.
          required: false
          schema:
            type: boolean
            example: false
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: include
          in: query
          description: >
            Optional expansion of fields/relationships in responses.

            No default value. Fields supported by this parameter are not
            returned by default and need to be explicitly requested here.

            When present, the API will return the requested field as defined by
            the values below:


            * `company`: Controls whether to resolve company metadata of company
            objects.
              By default, company objects only carry `companyId` field.
              When expanded, company objects would also carry `displayName` - depending on the size of the response, expanding on metadata may cause increased latency.

            * `subscriberAccess`: controls whether to include subscriberAccess
            information to ALL content catalogs in the response.
              Note that subscriberAccess information applies user entitlements to the response, making it harder to cache.
              Full SubscriberAccess object is returned for offers only.
              Vod and linear only carry SubscriberAccess.isWatchable field.
              See `SubscriberAccess` schema for more.

            * `featureAsset`: controls whether to include featureAsset
            information to all offers in the response.
              Returned when requested asset is a non-series program.
              For SeasonBundle and EpisodeBundle, this will be the requested program's asset. Only one asset is returned.

            * `previewAsset`: controls whether to include previewAsset
            information to all offers in the response.
              Optionally returned for contentGrouping = Single|SingleMovieBundle but not Service|MultiMovieBundle|SeasonBundle|EpisodeBundle|SeriesBundle|RentalBundle

            * `programVariant`: controls whether to expand program variant
            metadata of WatchOptions assets - linear or vod.
              By default, program variant objects only carry `programVariantId` field.
              When expanded, program variant objects would carry the whole program variant object Entity DS provides in the response.
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - company
                - subscriberAccess
                - previewAsset
                - featureAsset
                - programVariant
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: isIVod
          in: query
          description: |
            Allows to filter VOD showings based on iVOD attribute.  By default,
            ivod and non-ivod are returned.
          required: false
          schema:
            type: boolean
        - name: isRestartable
          in: query
          description: |
            Filter showings by whether or not they are restartable.
          required: false
          schema:
            type: boolean
        - name: videoQuality
          in: query
          description: >
            Specified to filter the showings based on video quality. When
            multiple values are specified, they will be ORed.


            Caveat: Currently videoQuality filter will not be applied to offers
            with contentGrouping = SeasonBundle

            because NGP has not implemented the filter for SeasonBundle offers
            yet.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            3D:
              description: 3D
              value: 3D
            4K:
              description: 4K
              value: 4K
            HD:
              description: HD
              value: HD
            XD:
              description: XD
              value: XD
        - name: vodType
          in: query
          description: >
            When specified, filters the vod content based on associated
            offer.purchaseCategory.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy, ppv, rent}. Note that BuyMA will
            be converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            ppv:
              description: ppv
              value: ppv
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: companyId
          in: query
          description: >
            Generic filter on company IDs of all types - SubNetwork, Network and
            NetworkGroups -

            regardless of station association type (linear) or PMA role (vod).

            Returns only the showings provided by the specified company, if
            available.

            In Browse, supports complex logical expressions - AND/OR/NOT.

            In Watch Options, does not support the negative form (NOT)

            and does not filter through vod/offers with contentGrouping=*Bundles
            - Only effective against singles.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 7835221929750590000
            ORed:
              description: ORed
              value: (7835221929750590105 OR 7728061817102576105)
            AND NOT:
              description: AND NOT
              value: (NOT 7835221929750590105 AND NOT 7728061817102576105)
        - name: durableAppId
          in: query
          description: |2
                Filters VOD objects based on the value of durableAppId field. Applies to the VOD catalog only, listings if requested will not be affected. In WatchOptions API only, it also filters the offers associated with VOD. Supports negative filter.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            Single:
              description: Single
              value: ("Comcast_StreamApp")
            Single NOT:
              description: Single NOT
              value: (NOT "Comcast_StreamApp")
            ORed:
              description: ORed
              value: (NOT ("Comcast_StreamApp" OR "Netflix"))
        - name: stationId
          in: query
          description: |
            Merlin Id of the station.  Returns only the content airing on
            specified station.  Filtering can be done by specifying multiple
            stationIds in conditional expression format with Ids separated by
            AND/OR/NOT.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            Single:
              description: Single
              value: 8210474099770809000
            Single NOT:
              description: Single NOT
              value: (NOT 5471601266051497117)
            ORed:
              description: ORed
              value: (8210474099770809117 OR 5471601266051497117)
            AND NOT:
              description: AND NOT
              value: (NOT 8210474099770809117 AND NOT 5471601266051497117)
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchOptionsModel'
        '400':
          description: Returned for invalid or unsupported parameter in the input request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /v1/partners/{partnerId}/entity/program/{entityId}/reviews:
    get:
      tags:
        - Metadata
      description: >-
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Get Reviews of a Program
      operationId: getEntityMetaDataForProgramReviews
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: The Merlin ID of the program
          required: true
          schema:
            type: string
          examples:
            WestworldS1E1:
              description: >-
                Westworld S1E1 HBO, season bundle & single episodes, season
                related entity
              value: 8537240497790811000
            DowntownAbbey:
              description: Downtown Abbey Movie, owned by EvanCohen1 acct
              value: 7666635979166129000
            HotelTransilvania2:
              description: >-
                Hotel Transilvania 2 Movie, single and multi movie bundles,
                feature & preview assets, buy & rent
              value: 7643014976437766000
            ForrestGump:
              description: Forrest Gump Movie
              value: 5556445076776507000
            WestworldS2E5:
              description: Westworld S2E5 HBO, season bundle & single episodes
              value: 5496336915069100000
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: reviewsProvider
          in: query
          description: The provider of the reviews
          required: false
          schema:
            type: string
          examples:
            Common Sense Media:
              description: Common Sense Media
              value: CSM
            Rotten Tomatoes:
              description: Rotten Tomatoes
              value: RT
          example: CSM
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the Reviews Metadata for the given Program entityID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Required attribute(s) not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: The EntityID not found in Entity Meta Data service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Upstream MetaData service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
      deprecated: true
  /v1/partners/{partnerId}/entity/program/{entityId}:
    get:
      tags:
        - Metadata
      description: >-
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Get Entity Meta data for the given for Movie, Episode and SportEvent
        based on EntityID
      operationId: getEntityMetaDataForProgram
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: Entity Id
          required: true
          schema:
            type: integer
            format: int64
          examples:
            Series Entity Id:
              description: Series Entity Id
              value: '5309300168268692112'
            Episode Entity Id:
              description: Episode Entity Id
              value: '8537240497790811112'
            Movie Entity Id:
              description: Movie Entity Id
              value: '8485936012683413112'
            Sports Event Entity Id:
              description: Sports Event Entity Id
              value: '6522682529507678112'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the Program Meta Data Information for the given EntityID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramModel'
        '400':
          description: Required attribute(s) not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: The EntityID not found in Entity Meta Data service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Upstream MetaData service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /v1/partners/{partnerId}/entity/person/{entityId}:
    get:
      tags:
        - Metadata
      description: >-
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Get Entity Meta data for Person based on EntityID
      operationId: getEntityMetaDataForPerson
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: Person Entity ID
          required: true
          schema:
            type: integer
            format: int64
          example: '8296885275557623111'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the Person Meta Data for the given personID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonModel'
        '400':
          description: Required attribute(s) not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: The EntityID not found in Entity Meta Data service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Upstream MetaData service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /v1/partners/{partnerId}/entities/program/{entityId}/reviews:
    get:
      tags:
        - Metadata
      description: >-
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Get Reviews of a Program
      operationId: getEntityMetaDataForReviews
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: entityId
          in: path
          description: The Merlin ID of the program
          required: true
          schema:
            type: string
          examples:
            WestworldS1E1:
              description: >-
                Westworld S1E1 HBO, season bundle & single episodes, season
                related entity
              value: 8537240497790811000
            DowntownAbbey:
              description: Downtown Abbey Movie, owned by EvanCohen1 acct
              value: 7666635979166129000
            HotelTransilvania2:
              description: >-
                Hotel Transilvania 2 Movie, single and multi movie bundles,
                feature & preview assets, buy & rent
              value: 7643014976437766000
            ForrestGump:
              description: Forrest Gump Movie
              value: 5556445076776507000
            WestworldS2E5:
              description: Westworld S2E5 HBO, season bundle & single episodes
              value: 5496336915069100000
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: reviewsProvider
          in: query
          description: The provider of the reviews
          required: false
          schema:
            type: string
          examples:
            Common Sense Media:
              description: Common Sense Media
              value: CSM
            Rotten Tomatoes:
              description: Rotten Tomatoes
              value: RT
          example: CSM
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the Reviews Metadata for the given Program entityID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Required attribute(s) not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: The EntityID not found in Entity Meta Data service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Upstream MetaData service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /v1/partners/{partnerId}/entities/byText:
    get:
      tags:
        - Search
      summary: >-
        Performs basic text based (alpha) search and returns entities of one or
        more types
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        Searches for the value of input query parameter through a number of
        Merlin entity types across selected content catalogs matching on names
        and titles.

        At this time this API only supports alpha searches. T9 support will be
        added at a later date.

        Content Availability is resolved based on the ARS blob in context.

        Serves entity level results. May also serve a single episode with a
        linear showing firstAiring=true - the first airing listing only.

        Provides optional query params to filter the result by catalog types,
        offers, entity types, program types, kids friendly, airing type (for
        linear) and video formats. Content catalogs currently supported by this
        API are vod, linear, livod, locker and offers.

        Results are sorted by relevance in descending order.
      externalDocs:
        description: >
          In real time, XVP Session expects a session to be created before it
          can serve future requests related to fetching a device session.

          When testing locally, you are likely to see a Device Session Info Not
          Found error.

          A work-around is to call XVP Session's Update DeviceSession API
          endpoint with supportedContentCatalogTypes and clientProfile as below,
          which will save a device session to the database. Then, following
          disco requests will work without those two parameters.

          Following is session api's swagger ui to create/update device session.
          Also you can use diagnostic controller swagger to create/update
          session.
        url: https://session-stg.exp.xvp.na-1.xcal.tv
      operationId: searchByText_1
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: query
          in: query
          description: The actual text search query.
          required: true
          schema:
            type: string
          example: game of thrones
        - name: contentCatalogTypes
          in: query
          description: >-
            Defines what showing types the API should match on to compute
            results.
          required: true
          schema:
            type: array
            items:
              type: string
          examples:
            offer:
              description: offer
              value: offer
            linear:
              description: linear
              value: linear
            vod:
              description: vod
              value: vod
            livod:
              description: livod
              value: livod
            locker:
              description: locker
              value: locker
          example:
            - vod
            - linear
            - locker
        - name: entityType
          in: query
          description: >
            Merlin entity types to filter on.

            Supported values are: movie, seriesMaster, sportingEvent, person,
            team, channel, station and company.

            Note that we expanded the entityType program into its own types:
            movie, seriesMaster and sporting events.

            Episodes are not supported.

            If more than one entity types are provided, they will be ORed.

            If this param is omitted, all supported entity types will be
            considered and "unfiltered" result will be served.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            Station:
              description: Station
              value: station
            Movie:
              description: Movie
              value: movie
            Company:
              description: Company
              value: company
            SeriesMaster:
              description: SeriesMaster
              value: seriesMaster
            Channel:
              description: Channel
              value: channel
            Team:
              description: Team
              value: team
            Menu:
              description: Menu
              value: menu
            Person:
              description: Person
              value: person
            SportingEvent:
              description: SportingEvent
              value: sportingEvent
            Other:
              description: Other
              value: other
          example:
            - movie
            - seriesMaster
        - name: airingType
          in: query
          description: >
            Specified to filter the linear content by airing type.

            "If one or more values are included in the request, they will be
            OR'ed.

            "Unlike Browse API, this API does NOT support conditional
            expressions using AND/OR/NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            new:
              description: new
              value: new
            taped:
              description: taped
              value: taped
            repeat:
              description: repeat
              value: repeat
            live:
              description: live
              value: live
          example:
            - taped
            - live
            - repeat
            - new
        - name: videoQuality
          in: query
          description: >-
            Specified to filter the showings based on video quality.  When
            multiple values are specified, they will be ORed.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            UHD:
              description: UHD
              value: UHD
            SD:
              description: SD
              value: SD
            HD:
              description: HD
              value: HD
          example:
            - HD
            - UHD
        - name: colorDepth
          in: query
          description: >
            Allows to filter showings depending on the color depth of the
            content.

            When multiple values are specified, they will be ORed.

            Filter over VOD and Linear catalogs.

            In Watch Options it will also filter offers.

            TBD support for DVR catalog.

            Does not support NOT.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            SDR:
              description: SDR
              value: SDR
            PQ:
              description: PQ
              value: PQ
            HLG:
              description: HLG
              value: HLG
            DISPLAYHDR:
              description: DISPLAYHDR
              value: DisplayHDR
            HDR10:
              description: HDR10
              value: HDR10
            SLHDR1:
              description: SLHDR1
              value: SL-HDR1
            HDR:
              description: HDR
              value: HDR
            HDR10PLUS:
              description: HDR10PLUS
              value: HDR10+
            DOLBYVISION:
              description: DOLBYVISION
              value: DolbyVision
        - name: kids
          in: query
          description: >
            Used to control serving of content tagged as kids friendly.

            Supported values are:


            * `include` - Include the content which have the kids property set
            to true.

            * `exclude` - Exclude the content which have the kids property set
            to true.

            * `only` - Include ONLY the content which have the kids property set
            to true.
          required: false
          schema:
            type: string
            default: include
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: adult
          in: query
          description: >
            Filters all catalog content by whether they have been tagged as
            adult oriented.

            Applies to both linear and vod content catalog types.

            Also filters stations if those are tagged as adult stations but does
            not affect channel availability until and unless explicitly passed.

            Supported values are: include, exclude and only.


            * `include`: includes content and stations matching search query
            that have been tagged as adult oriented.

            * `exclude` [DEFAULT]: excludes content and stations that have been
            tagged as adult oriented. When explicitly passed, this excludes
            channels as well.

            * `only`: includes only the content and stations that have been
            tagged as adult oriented.


            When this param is omitted, it will be defaulted to exclude but the
            API will still return channels that are tagged as adult oriented.

            Explicitly passing adult=exclude only excludes the channels along
            with catalog content and stations.

            Adult parameter conflicts with Kids parameter and kids takes
            precedence.

            Ex: `kids=only&adult=include` would serve only kids friendly catalog
            content.
          required: false
          schema:
            type: string
            example: exclude
            default: exclude
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: vodType
          in: query
          description: >
            When specified, filters the vod content based on associated
            offer.purchaseCategory.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy, ppv, rent}. Note that BuyMA will
            be converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            ppv:
              description: ppv
              value: ppv
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: livodType
          in: query
          description: >
            When specified, filters the livod content based on specified offer
            types.

            When multiple values are specified, they will be ORed.


            Supported values are: `rent`, `buy`, `ppv`, `subscribe`, `free`


            * VODs with an entitlement scope of Transactional will be populated
            with Offer.purchaseCategory {buy,ppv,rent}. Note that BuyMA will be
            converted to Buy.

            * VODs with an entitlement scope starting with Free* (FreeForVideo
            and FreeForAll) will be populated with `free` - Comcast only.

            * All other VODs, such as the ones associated with Station or
            Subscription offers will be populated with `subscribe`
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            subscribe:
              description: subscribe
              value: subscribe
            ppv:
              description: ppv
              value: ppv
            buy:
              description: buy
              value: buy
            rent:
              description: rent
              value: rent
            free:
              description: free
              value: free
        - name: offerType
          in: query
          description: |
            Filters the content based on specified offer types.
            When multiple offer types are passed, they will be ORed.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            '--':
              description: '--'
            ppv:
              description: ppv
              value: ppv
            preorder:
              description: preorder
              value: preorder
        - name: excludeVodOnlyCompany
          in: query
          description: >
            When searching for company entities, the API searches for Company
            objects associated with Station objects

            - linear companies - and Media objects - vod companies.

            In most cases VOD and Linear companies overlap, but not always.
            There are cases where a Company only has Station association or only
            has Media associations.

            The API allows for optionally droping the search for Companies with
            Media associations and only search accross the linear space. This is
            not standard behavior, but it is implemented for backwards
            compatibility of legacy use cases.
          required: false
          schema:
            type: boolean
        - name: preferredLanguage
          in: query
          description: >
            Allows to specify language preference.

            If a program has non-english variant then that program will be
            returned in place of original program.

            Expects a language culture code, which is comprised of two lowercase
            characters (representing language) with an optional hyphen plus two
            uppercase characters (representing country/region).

            The language component is an ISO 639-1 value and the country
            component is an ISO 3166-1 alpha-2 value.

            Example language culture codes include `en-us` (English), `es-us`
            (Spanish), `fr-ca` (Canadian French).
          required: false
          schema:
            type: string
            default: en-us
          examples:
            Canadian French:
              description: Canadian French
              value: fr-ca
            Spanish:
              description: Spanish
              value: es-us
            American English:
              description: American English
              value: en-us
        - name: f2m
          in: query
          description: >
            Used to specify whether to return content that is free or not-free
            to specified account.

            To return free content `f2m` should be set it up 'only'. Otherwise
            returns non-free content.

            This is applied to all catalog types specified in the request.


            Supported values are
                    * only: Only free content is returned.
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            only:
              description: only
              value: only
        - name: f2mVod
          in: query
          description: >-
            Used to specify whether to return vod content that is free or
            not-free to

            specified account. This is applied to vod catalog only, if specified
            in the request.
          required: false
          deprecated: true
          schema:
            type: boolean
        - name: computeExclusivity
          in: query
          description: >
            Computes whether a given entity in the response is exclusive to a
            certain third party app (OTT). Content exclusivity is defined by
            availability of a program on a single third party app platform.
            Content is considered exclusive to a third party app when:

            - Content is found to be only available through a single third party
            app

            - Content is found to not be available on the native platform

            Note that the computation of exclusivity is done in the context of
            the request. If there are filters applied to the request that
            reduces the search space, this parameter may yield false positives.

            When computeExclusivity=true the following fields will appear in the
            search response:

            - durableAppIds: array of durableAppId values indicating all of the
            third party platforms in which the content is available/playable -
            does not account for the native platform.

            - exclusiveTo: single durableAppId indicating the third party
            platform the content is exclusive to, if any.

            Note that content might still not be exclusive to any platforms even
            if only a single value appears in durableAppIds fields - if it is
            also available in the native platform.
          required: false
          schema:
            type: boolean
        - name: firstAiring
          in: query
          description: |2
                Used to request the earliest linear listing for each top level program.  Default is false.
          required: false
          schema:
            type: boolean
            default: false
        - name: entityField
          in: query
          description: >
            Allows to specify a list of program level metadata fields to be

            included in the API response.  When this param is not used, the
            program

            metadata would contain only programId and programType fields.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: channelField
          in: query
          description: >
            Allows to specify a list of channel metadata fields to be included
            in the

            showing object.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: showingField
          in: query
          description: >
            Allows to specify a list of showing level fields to be included in
            the

            API response.  When this param is not used, the showings object
            would

            contain only mediaId and mediaGuid fields.
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          example:
            - programId
            - rating
            - cc
            - providerCompanies
            - distributorCompanies
            - linearCompanies
            - networkGroupCompanies
        - name: limit
          in: query
          description: >
            Defines the maximum number of text search results to return in the
            page.

            There may be less items to return than specified by the param.
          required: false
          schema:
            maximum: 300
            minimum: 1
            type: integer
            default: 20
        - name: cacheKey
          in: query
          description: >-
            Unique Cache key identifier that allows client to validate cache for
            xvp session
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            sample cache key:
              description: sample cache key
              value: 1.24.2#c00884c4d4560617e7455845681a1acb
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: >-
            Returned for invalid or unsupported parameter in the input request.
            For example if an invalid field is requested from the API through
            entityField parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: Server understood the request but refuses to authorize it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RFC7807Response'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RFC7807Response'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RFC7807Response'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
  /v1/partners/{partnerId}/apps:
    get:
      tags:
        - Browse
      summary: Browse apps catalog based on user's available OTT catalog sources.
      description: >
        Capability Required: [x1:xvp-apis:disco-api:stg:discovery], Device Sat
        Allowed: true


        XVP Browse Apps API allows clients to discover Apps based on
        availability groups assigned to the user under the "app" scope.
        Availabiltiy groups are primarily used to editorialize rails. Only apps
        with available releases will be returned.


        Apps can be filtered by tag ID - for genre based filtering for example,
        such as Games, Health, etc. Other filters also supported, such as appId
        or durableAppId.


        ApplicationReleaseField is always returned by default, but if not
        explicitly requested through appField parameter, only
        ApplicationReleaseFieldId is populated.


        This API provides no support for Network Group companies and no support
        for expanding company metadata.
      operationId: getApps
      parameters:
        - name: partnerId
          in: path
          description: >
            Partner Id of the partner to which the user account belongs to.

            In XVP, used primarily for SAT token validation and for determining
            partner based recommendation exclusions in XVP Discovery.
          required: true
          schema:
            type: string
          examples:
            Comcast:
              description: Comcast
              value: comcast
            Sky-UK-dev:
              description: Sky-UK-dev
              value: sky-uk-dev
            Sky-UK:
              description: Sky-UK
              value: sky-uk
          example: sky-uk
        - name: accountId
          in: query
          description: XBO account ID associated with the request
          required: true
          schema:
            type: string
          examples:
            SkyAlpha:
              description: >-
                Sky account for Alpha demo, provisioned for partnerId=sky-uk-dev
                and client profile=sky:soip with UK/GN data.
              value: '6192938064288172907'
            Sky Test Data Account 3:
              description: >-
                BillingId:
                <code>eec98b3c-f1ee-4dbc-84c3-24e3580065c1</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '784695354447381859'
            Sky Test Data Account 2:
              description: >-
                BillingId:
                <code>57d5c3dd-69da-4eec-b301-edd34835c528</code><br>Use with
                clientProfile <code>sky:skyQTest</code><br>Details in <a
                href='https://etwiki.sys.comcast.net/pages/viewpage.action?spaceKey=SH&title=Sky+Test+Data'>Sky
                Test Data</a>
              value: '8053057978064091974'
            CimCdvr3:
              description: CIMCDVR3 Stream test account
              value: '5397369'
            Streaming1429:
              description: >-
                BillingId: <code>8344200010111429</code><br>Entitlements:
                <code>"tve-linear", "transactions", "clinear", "est", "cdvr",
                "cvod", "tve-vod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '353989884962968244'
            DVR Test Account ID:
              description: DVR Test Account ID
              value: '5354623449070747470'
            EvanCohenI:
              description: Evan_CohenI, owns The Good Wife, Downtown Abbey
              value: '4892803237867245383'
            SkyBeta:
              description: >-
                Sky account for Beta demo, provisioned for partnerId=sky-uk and
                client profile=sky:soip with UK/CSC data.
              value: '2781525497023449258'
            Streaming1437:
              description: >-
                BillingId: <code>8344200010111437</code><br>Entitlements:
                <code>"tve-vod", "transactions", "est", "tve-linear", "cvod",
                "clinear", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '3893857328890725201'
            Streaming1304:
              description: >-
                BillingId: <code>8344200010111304</code><br>Entitlements:
                <code>"linear", "tve-vod", "est", "cvod",
                "tve-linear"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '2781525497023449258'
            Streaming1403:
              description: >-
                BillingId: <code>8344200010111403</code><br>Entitlements:
                <code>"transactions", "tve-vod", "tve-linear", "cvod",
                "clinear", "est", "cdvr"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '8250908395983947002'
            Streaming1411:
              description: >-
                BillingId: <code>8344200010111411</code><br>Entitlements:
                <code>"cdvr", "clinear", "est", "tve-linear", "tve-vod",
                "transactions", "cvod"</code><br>Details in <a
                href='https://comcastcorp.sharepoint.com/:x:/r/sites/XVP/_layouts/15/doc2.aspx?sourcedoc=%7B583F61D0-587D-4107-94DE-D2F9E81F80C7%7D&file=Whirlpool%20Test%20Accounts%20sheet.xlsx&action=default&mobileredirect=true&wdLOR=cF4D2B50B-1FF9-0045-8C90-1DE1EA573CD8&cid=8a8fc69c-10e6-47dc-a96c-8ceea699397a'>Whirlpool
                Test Accounts sheet</a>
              value: '877735677820485690'
            SkyTest:
              description: >-
                Sky test account, used with sky:skyQTest client profile,
                manually provisioned, limited US data
              value: '2731295879013289501'
          example: '2781525497023449258'
        - name: deviceId
          in: query
          description: User XBO device ID. Used in conjunction with accountId.
          required: true
          schema:
            type: string
          example: '12345'
        - name: clientId
          in: query
          description: >-
            Unique client identifier that allows XVP to differentiate requests
            from one client from another
          required: true
          schema:
            type: string
            example: swagger-ui
        - name: contentCatalogTypes
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              description: >-
                The source of entities the API should match on to compute
                results. Does not allow NOT.
          examples:
            app:
              description: app
              value: app
        - name: appId
          in: query
          description: >
            Comma-separated list of App entity IDs that filters results,
            returning only the app(s) that match the given ID(s) and have
            available releases.

            **Note:**

            When combined with `collectionId` and/or `nonCollection` parameters,
            it acts as a filter on the results of the query.
          required: false
          schema:
            type: array
            items:
              type: string
          examples:
            Amazon Music:
              description: Amazon Music
              value: 6325882785851017000
            Adventure 2 Learning:
              description: Adventure 2 Learning
              value: 8627145868401540000
            A&E App:
              description: A&E App
              value: 8175615530917862000
        - name: durableAppId
          in: query
          description: >
            Filters objects based on the value of durableAppId field.

            For programs applies to the VOD catalog only, listings if requested
            will not be affected.

            In WatchOptions API only, it also filters the offers associated with
            VOD.

            Supports negative filter.

            Note: This filter will override any partner exclusion configured in
            the background.
          required: false
          schema:
            type: string
          examples:
            SingleId:
              description: SingleId
              value: Comcast_StreamApp
            SingleIdNot:
              description: SingleIdNot
              value: NOT "Comcast_StreamApp"
            ORed:
              description: ORed
              value: '"Comcast_StreamApp" OR "Netflix"'
            OR_NOT:
              description: OR_NOT
              value: NOT ("Comcast_StreamApp" OR "Netflix")
        - name: entityTag
          in: query
          description: >
            Filters based on entity tag Id specified.  This param takes

            value in conditional expression format with tag Ids separated by OR,
            AND

            and NOT.  For nested conditions, the caller should appropriately
            enclose

            the conditions within ().


            Examples are:

            * entityTag=(8665239266925354118 OR 8870645924716631118 OR
            7140881620312185118 OR 7850811880973641118 OR 4765208851651203118 OR
            5876264884571790127)

            * entityTag=(6975528850416233118 AND 5595772021387518118)

            * entityTag=(8665239266925354118 OR (8870645924716631118 AND
            7140881620312185118))

            * entityTag=(8665239266925354118 OR (5876264884571790127 AND NOT
            5628801549346379127 AND NOT 5571253227301165118))
          required: false
          schema:
            type: string
          examples:
            '--':
              description: '--'
            OR AND NOT:
              description: OR AND NOT
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR (5876264884571790127 AND NOT
                5628801549346379127 AND NOT 5571253227301165118 AND NOT
                8116412341147107118 AND NOT 6774224877631532118))
            ORed:
              description: ORed
              value: >-
                (8665239266925354118 OR 8870645924716631118 OR
                7140881620312185118 OR 7850811880973641118 OR
                4765208851651203118 OR 5876264884571790127)
            OR AND:
              description: OR AND
              value: >-
                (8665239266925354118 OR (8870645924716631118 AND
                7140881620312185118))
            ANDed:
              description: ANDed
              value: (6975528850416233118 AND 5595772021387518118)
        - name: adult
          in: query
          description: >
            Specified to control serving of content which have the adult
            property

            set to true. Supported values are:


            * `include`: Include the content which have adult property set to
            true.

            * `exclude`: Exclude the content which have adult property set to
            true.

            * `only`: Include ONLY the content which have adult property set to
            true.
          required: false
          schema:
            type: string
            default: exclude
          examples:
            include:
              description: include
              value: include
            only:
              description: only
              value: only
            exclude:
              description: exclude
              value: exclude
        - name: appField
          in: query
          description: >
            Allows to specify a list of app metadata to be included in the API
            response.

            When this param is not used, the API would only return applicationId
            and applicationRelease fields.
          required: false
          schema:
            type: array
            items:
              type: string
          example:
            - title
            - appContent
            - tags
            - durableAppId
        - name: appReleaseField
          in: query
          description: >
            Allows to specify a list of applicationRelease metadata to be
            included in the API response.

            When this param is not used, the API would only return
            applicationReleaseId field.
          required: false
          schema:
            type: array
            items:
              type: string
          example:
            - quirks
            - supportedLanguages
            - appConfig
            - appProtocol
        - name: entitySort
          in: query
          description: |2
             If a sort parameter is specified in the request, results will be sorted in the requested order.
             Otherwise, the sort order depends on other request parameters, as follows:
             * If the request contains the appId parameter, and does not include the collectionId parameter, then results are returned in the order that the IDs appear in the appId parameter (i.e. if we have "id=2,1,3", then results will be ordered "2", "1", "3").  Note this sort mode is not offered as an sort option and therefore cannot be selected in the request via entitySort.
             * If the request contains the collectionId parameter, whether or not it also contains the appId parameter, then editorial sort mode is used (see below).
             * If the request contains neither appId nor collectionId, then apps are sorted by browse rank.  If no browse rank is available, or in the case of a tie, applications are returned in Alpha ASC order, with the application ID as an additional tiebreaker.
             * Application Releases are sorted by version of the app release. Tiebreakers on application release are done by application release ID.
             Allows to sort browse result by various entity level metadata.
             A secondary sort field can also be specified as tie breaker for primary field.
             The fields can optionally be prefixed with `asc:` or `desc:` to specify the sort order.
             Below table shows the possible values this param accepts, their default sort order and tie breaker if secondary sort criteria is not specified.
             | Sort Value | Behavior | Default Order | Supported Sort order | Tie Breaker |
             | ---- | ---- | ---- | ---- | ---- |
             | `alpha` | Sorts apps alphabetically based on normalized version of the title that ignores stop words and casing. | asc | asc, desc | ID (descending order) |
             | `browse` | Sorts app by browse rank in descending order.  Default order. | desc | desc | `titleSort, Id` |
             | `editorial` | Apps are sorted by their editorial rank for the specified collection, in ascending order. Non-ranked programs are sorted by browse rank by default.<br/>**Note:** Must be used in conjunction with collectionId param. See below for more. | asc | asc | `browseRank, originalAirDate, releaseYear, titleSort, programId` |
             **Editorial sort order:**
             The order of results will be returned as follows.
             * apps part of the collection with a ranking greater than 0
             * apps part of the collection that are ranked as 0 sorted alphabetically
             * all other available apps will be returned sorted alphabetically (only applies to nonCollectionApps=include)
             **NOTE:**
             If an app is ranked with -1 inside the collection, it will NOT be returned, even if nonCollectionApps=include.
          required: false
          schema:
            type: array
            items:
              type: string
              default: desc:browse
          example:
            - desc:browse
            - asc:alpha
        - name: limit
          in: query
          description: >
            Defines the maximum number of items to return in the page.

            There may be less items to return then specified by the parameter.

            Negative numbers will cause a 400 error.

            Works in conjunction with `offset` param - if available - to provide
            pagination functionality.
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 100
        - name: offset
          in: query
          description: >
            Defines a zero-based index into the entire collection indicating the
            starting item of the requested page.

            offset=0 is the first item in the collection.

            If value of offset is larger than the number of entries available,
            the API returns an empty result set.

            Negative numbers will cause a 400 error.

            Works in conjunction with `limit` param to provide pagination
            functionality.
          required: false
          schema:
            minimum: 0
            type: integer
            example: 0
            default: 0
        - name: usecase
          in: query
          description: >
            Use case associated with the request.  Used to group/differentiate

            requests from client.  The value provided with this param is used
            only

            for logging purpose and will not affect API behavior.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowseAppResponse'
        '400':
          description: Returned for invalid or unsupported parameter in the input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: >-
            The request lacks valid authentication credentials for the target
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorResponse'
        '403':
          description: The server is refusing to fulfill the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '502':
          description: Invalid response from upstream service - any other error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGateWayErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
        '504':
          description: Upstream service timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGatewayTimeout'
components:
  schemas:
    RFC7807Response:
      required:
        - detail
        - instance
        - status
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
          format: uri
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          maximum: 599
          minimum: 400
          type: integer
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          format: uri
      description: The canonical model for error responses following RFC7807.
      externalDocs:
        url: https://tools.ietf.org/html/rfc7807
    SortAllRequestBody:
      type: object
      properties:
        browseMap:
          type: object
          additionalProperties:
            type: array
            description: >-
              Dictionary of key/value pairs where: * keys represent the name of
              the list of Merlin program IDs (to be) sorted. * values are a the
              actual list of Merlin program IDs (to be) sorted.
            example:
              collectionName1:
                - '8222051132772877112'
                - '8535585090669072112'
                - '6021891675350569112'
              collectionName2:
                - '7103256165508658112'
                - '6440918268753874112'
                - '8222051132772877112'
            items:
              type: string
              description: >-
                Dictionary of key/value pairs where: * keys represent the name
                of the list of Merlin program IDs (to be) sorted. * values are a
                the actual list of Merlin program IDs (to be) sorted.
              example: >-
                {"collectionName1":["8222051132772877112","8535585090669072112","6021891675350569112"],"collectionName2":["7103256165508658112","6440918268753874112","8222051132772877112"]}
          description: >-
            Dictionary of key/value pairs where: * keys represent the name of
            the list of Merlin program IDs (to be) sorted. * values are a the
            actual list of Merlin program IDs (to be) sorted.
          example:
            collectionName1:
              - '8222051132772877112'
              - '8535585090669072112'
              - '6021891675350569112'
            collectionName2:
              - '7103256165508658112'
              - '6440918268753874112'
              - '8222051132772877112'
    SortAllResponse:
      type: object
      properties:
        browseMap:
          type: object
          additionalProperties:
            type: array
            description: >-
              Dictionary of key/value pairs where: * keys represent the name of
              the browse items to sort. * values are a simple list of sorted
              Browse program objects containing only the `programId` field.
            example:
              collectionName1:
                - '8535585090669072112'
                - '6021891675350569112'
                - '8222051132772877112'
              collectionName2:
                - '6440918268753874112'
                - '7103256165508658112'
                - '8222051132772877112'
            items:
              type: string
              description: >-
                Dictionary of key/value pairs where: * keys represent the name
                of the browse items to sort. * values are a simple list of
                sorted Browse program objects containing only the `programId`
                field.
              example: >-
                {"collectionName1":["8535585090669072112","6021891675350569112","8222051132772877112"],"collectionName2":["6440918268753874112","7103256165508658112","8222051132772877112"]}
          description: >-
            Dictionary of key/value pairs where: * keys represent the name of
            the browse items to sort. * values are a simple list of sorted
            Browse program objects containing only the `programId` field.
          example:
            collectionName1:
              - '8535585090669072112'
              - '6021891675350569112'
              - '8222051132772877112'
            collectionName2:
              - '6440918268753874112'
              - '7103256165508658112'
              - '8222051132772877112'
    ForbiddenErrorResponse:
      required:
        - detail
        - instance
        - status
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
          format: uri
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          maximum: 599
          minimum: 400
          type: integer
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
          example: 403
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          format: uri
    BadGateWayErrorResponse:
      required:
        - detail
        - instance
        - status
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
          format: uri
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          maximum: 599
          minimum: 400
          type: integer
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
          example: 502
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          format: uri
    InternalServerErrorResponse:
      required:
        - detail
        - instance
        - status
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
          format: uri
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          maximum: 599
          minimum: 400
          type: integer
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
          example: 500
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          format: uri
    ServiceGatewayTimeout:
      required:
        - detail
        - instance
        - status
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
          format: uri
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          maximum: 599
          minimum: 400
          type: integer
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
          example: 504
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          format: uri
    AuthenticationErrorResponse:
      required:
        - detail
        - instance
        - status
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
          format: uri
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          maximum: 599
          minimum: 400
          type: integer
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
          example: 401
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          format: uri
    ServiceUnavailableErrorResponse:
      required:
        - detail
        - instance
        - status
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
          format: uri
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          maximum: 599
          minimum: 400
          type: integer
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
          example: 503
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          format: uri
    NotFoundErrorResponse:
      required:
        - detail
        - instance
        - status
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
          format: uri
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          maximum: 599
          minimum: 400
          type: integer
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
          example: 404
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          format: uri
    BadRequestErrorResponse:
      required:
        - detail
        - instance
        - status
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
          format: uri
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          maximum: 599
          minimum: 400
          type: integer
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
          example: 400
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          format: uri
    ExternalIdsRequestBody:
      type: object
      properties:
        externalEntityIds:
          type: array
          description: The JSON object containing ID mappings information.
          example:
            - CXpH8BEjr6IazDs4AN4Tiw==
            - gO2/81CpljIHH/S95PEPyA==
            - eozVKK/ZRDpfMsdtsMC4zw==
          items:
            type: string
            description: The JSON object containing ID mappings information.
            example: >-
              ["CXpH8BEjr6IazDs4AN4Tiw==","gO2/81CpljIHH/S95PEPyA==","eozVKK/ZRDpfMsdtsMC4zw=="]
    ExternalIdsResponse:
      type: object
      properties:
        durableAppId:
          type: string
          description: >-
            The resulting set of Merlin IDs where: * externalEntityId is the
            external entity used to resolve the list of Merlin URN's * entityIds
            is the list of associated Merlin IDs resolved from the originating
            externalEntityId.
          example: >-
            {"idMappings":[{"providerId":"ajh3-je12-bkc9-9abc","merlinIds":["4778288713837382112"]}]}
        territory:
          type: string
        partnerId:
          type: string
        idMappings:
          type: array
          items:
            $ref: '#/components/schemas/IdMappingResponse'
    IdMappingResponse:
      type: object
      properties:
        externalEntityId:
          type: string
        entityIds:
          type: array
          items:
            type: string
    App:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
    Company:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        title:
          type: string
          description: Name of the company.
          example: NBC Sports Philadelphia+
        channels:
          type: array
          items:
            $ref: '#/components/schemas/StationChannel'
    ContentRating:
      type: object
      properties:
        rating:
          type: string
          description: The actual rating of the program
          example: PG-13
        scheme:
          type: string
          description: The rating scheme
          example: mpaa
        subRatings:
          minItems: 0
          type: array
          description: rating qualifiers that explain a rating of PG13 or above
          example: V for violence, AT for adult themes, etc
          items:
            type: string
      description: program ratings
    Discipline:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity ID of the Discipline.
          example: '6339947219821872268'
        entityType:
          type: string
          description: Merlin entity type.
          example: Discipline
        title:
          type: string
          description: Name of the Discipline.
          example: Football
        type:
          type: string
          description: >-
            The type of the Discipline. Possible values include: 'Individual',
            'Team'
    Episode:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        programType:
          type: string
          description: The type of program as defined by Merlin in Program schema.
        durableAppIds:
          type: array
          description: >-
            Array of durableAppId values indicating all of the third party
            platforms in which the content is available/playable - does not
            account for the native platform. Only returned when
            computeExclusivity=true is present in the request.
          example:
            - Netflix
            - prime.video
          items:
            type: string
            description: >-
              Array of durableAppId values indicating all of the third party
              platforms in which the content is available/playable - does not
              account for the native platform. Only returned when
              computeExclusivity=true is present in the request.
            example: '["Netflix","prime.video"]'
        exclusiveTo:
          type: string
          description: >-
            Single durableAppId indicating the third party platform the content
            is exclusive to, if any.
          example: Netflix
        language:
          type: string
          description: >-
            ISO 639-2 (3-letter) language code for program. This represents the
            intended audience of this Program.
        originalAirDate:
          type: string
          description: Original air date of episode or 'other' on linear tv - date only.
          format: date
          example: '2020-09-09'
        synopsis:
          type: string
          description: The program's medium synopsis. About 1 paragraph description.
        title:
          type: string
          description: >-
            This program title - for Episode programs, this is the SeriesMaster
            title, returned along with episodeTitle field.
        year:
          type: integer
          description: >-
            Year of the program's initial broadcast (for TV) or the release year
            for a Movie.
          format: int32
        showings:
          type: array
          description: >-
            By default the API returns the earliest linear listing for each top
            level program.
          items:
            $ref: '#/components/schemas/ShowingLinear'
        tags:
          type: array
          description: >-
            List of tag objects associated with the program. Only tag ID field
            is returned.
          items:
            $ref: '#/components/schemas/TagModel'
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        tvSeasonEpisodeNumber:
          type: integer
          description: >-
            Episode number within a season. Returned only if program type is
            "episode" and it is seasonal.
          format: int32
        episodeTitle:
          type: string
          description: Program episode title.
        tvSeries:
          $ref: '#/components/schemas/TvSeries'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use audience field instead.
      description: >-
        Describes all program types except for Episode, which are only supported
        nested under a Series object. Episodes are defined in a separate object
        with other episode-specific fields and only returned when
        firstAiring=true.
    Menu:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        menuDisplayType:
          type: string
        menuEntityId:
          type: string
        menuEntityType:
          type: string
        menuId:
          type: string
        menuInfoText:
          type: string
        menuLanguage:
          type: string
        menuNodeId:
          type: string
        menuNotes:
          type: string
        menuPreviewStyle:
          type: string
        menuPreviewUrl:
          type: string
        menuQueryUrl:
          type: string
        menuShortcutType:
          type: string
        menuStyle:
          type: string
        nodeStyle:
          type: string
        personalized:
          type: boolean
          description: Indicates if a menu is personalized.
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        requiredDeviceCapability:
          type: array
          description: List of required device capabilities to handle the menu.
          example:
            - 'openBrowsing: -1, 1'
          items:
            type: string
            description: List of required device capabilities to handle the menu.
            example: '["openBrowsing: -1, 1"]'
    Movie:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        programType:
          type: string
          description: The type of program as defined by Merlin in Program schema.
        durableAppIds:
          type: array
          description: >-
            Array of durableAppId values indicating all of the third party
            platforms in which the content is available/playable - does not
            account for the native platform. Only returned when
            computeExclusivity=true is present in the request.
          example:
            - Netflix
            - prime.video
          items:
            type: string
            description: >-
              Array of durableAppId values indicating all of the third party
              platforms in which the content is available/playable - does not
              account for the native platform. Only returned when
              computeExclusivity=true is present in the request.
            example: '["Netflix","prime.video"]'
        exclusiveTo:
          type: string
          description: >-
            Single durableAppId indicating the third party platform the content
            is exclusive to, if any.
          example: Netflix
        language:
          type: string
          description: >-
            ISO 639-2 (3-letter) language code for program. This represents the
            intended audience of this Program.
        originalAirDate:
          type: string
          description: Original air date of episode or 'other' on linear tv - date only.
          format: date
          example: '2020-09-09'
        synopsis:
          type: string
          description: The program's medium synopsis. About 1 paragraph description.
        title:
          type: string
          description: >-
            This program title - for Episode programs, this is the SeriesMaster
            title, returned along with episodeTitle field.
        year:
          type: integer
          description: >-
            Year of the program's initial broadcast (for TV) or the release year
            for a Movie.
          format: int32
        showings:
          type: array
          description: >-
            By default the API returns the earliest linear listing for each top
            level program.
          items:
            $ref: '#/components/schemas/ShowingLinear'
        tags:
          type: array
          description: >-
            List of tag objects associated with the program. Only tag ID field
            is returned.
          items:
            $ref: '#/components/schemas/TagModel'
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use audience field instead.
    Other:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        programType:
          type: string
          description: The type of program as defined by Merlin in Program schema.
        durableAppIds:
          type: array
          description: >-
            Array of durableAppId values indicating all of the third party
            platforms in which the content is available/playable - does not
            account for the native platform. Only returned when
            computeExclusivity=true is present in the request.
          example:
            - Netflix
            - prime.video
          items:
            type: string
            description: >-
              Array of durableAppId values indicating all of the third party
              platforms in which the content is available/playable - does not
              account for the native platform. Only returned when
              computeExclusivity=true is present in the request.
            example: '["Netflix","prime.video"]'
        exclusiveTo:
          type: string
          description: >-
            Single durableAppId indicating the third party platform the content
            is exclusive to, if any.
          example: Netflix
        language:
          type: string
          description: >-
            ISO 639-2 (3-letter) language code for program. This represents the
            intended audience of this Program.
        originalAirDate:
          type: string
          description: Original air date of episode or 'other' on linear tv - date only.
          format: date
          example: '2020-09-09'
        synopsis:
          type: string
          description: The program's medium synopsis. About 1 paragraph description.
        title:
          type: string
          description: >-
            This program title - for Episode programs, this is the SeriesMaster
            title, returned along with episodeTitle field.
        year:
          type: integer
          description: >-
            Year of the program's initial broadcast (for TV) or the release year
            for a Movie.
          format: int32
        showings:
          type: array
          description: >-
            By default the API returns the earliest linear listing for each top
            level program.
          items:
            $ref: '#/components/schemas/ShowingLinear'
        tags:
          type: array
          description: >-
            List of tag objects associated with the program. Only tag ID field
            is returned.
          items:
            $ref: '#/components/schemas/TagModel'
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use audience field instead.
    Person:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        name:
          type: string
          description: Person's name.
          example: Tom Cruise
    ProductContext:
      type: object
      properties:
        type:
          type: string
          description: Product context.
          example: CDVR
        productContextId:
          type: string
          description: Merlin ID of the product context.
          example: '8250249002465696174'
      description: The catalog the content is available in.
    ProviderCompany:
      type: object
      properties:
        companyId:
          type: string
          description: >-
            Merlin id of the provider. PMA.companies where Company's
            role=Provider.
          example: '7294331549102474105'
        displayName:
          type: string
          description: Name of the provider.
          example: HBO
        companyType:
          type: string
          description: Type of the company.
          example: NetworkGroup
      description: List of provider companies ids
    SearchEntity:
      type: object
      oneOf:
        - $ref: '#/components/schemas/SeriesMaster'
        - $ref: '#/components/schemas/Movie'
        - $ref: '#/components/schemas/SportingEvent'
        - $ref: '#/components/schemas/Other'
        - $ref: '#/components/schemas/SportsTeam'
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/Company'
        - $ref: '#/components/schemas/Station'
        - $ref: '#/components/schemas/StationChannel'
        - $ref: '#/components/schemas/Menu'
        - $ref: '#/components/schemas/App'
        - $ref: '#/components/schemas/Discipline'
    SearchResponse:
      required:
        - entityCount
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/SearchEntity'
        entityCount:
          type: integer
          description: The number of search results returned
          format: int32
    SearchStationCompanyAssociation:
      type: object
      properties:
        displayName:
          type: string
          description: >-
            Returns Company.displayName if exists, or falls back to
            Company.title otherwise.
          example: Non-Local Advertising and Shopping
      description: >-
        List of all the companies associated with this Station. There might be
        more than one Company if besides a NetworkAffiliate the Station is also
        associated with a NetworkGroup Company.
    SeriesMaster:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        programType:
          type: string
          description: The type of program as defined by Merlin in Program schema.
        durableAppIds:
          type: array
          description: >-
            Array of durableAppId values indicating all of the third party
            platforms in which the content is available/playable - does not
            account for the native platform. Only returned when
            computeExclusivity=true is present in the request.
          example:
            - Netflix
            - prime.video
          items:
            type: string
            description: >-
              Array of durableAppId values indicating all of the third party
              platforms in which the content is available/playable - does not
              account for the native platform. Only returned when
              computeExclusivity=true is present in the request.
            example: '["Netflix","prime.video"]'
        exclusiveTo:
          type: string
          description: >-
            Single durableAppId indicating the third party platform the content
            is exclusive to, if any.
          example: Netflix
        language:
          type: string
          description: >-
            ISO 639-2 (3-letter) language code for program. This represents the
            intended audience of this Program.
        originalAirDate:
          type: string
          description: Original air date of episode or 'other' on linear tv - date only.
          format: date
          example: '2020-09-09'
        synopsis:
          type: string
          description: The program's medium synopsis. About 1 paragraph description.
        title:
          type: string
          description: >-
            This program title - for Episode programs, this is the SeriesMaster
            title, returned along with episodeTitle field.
        year:
          type: integer
          description: >-
            Year of the program's initial broadcast (for TV) or the release year
            for a Movie.
          format: int32
        showings:
          type: array
          description: >-
            By default the API returns the earliest linear listing for each top
            level program.
          items:
            $ref: '#/components/schemas/ShowingLinear'
        tags:
          type: array
          description: >-
            List of tag objects associated with the program. Only tag ID field
            is returned.
          items:
            $ref: '#/components/schemas/TagModel'
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        firstYear:
          type: integer
          description: >-
            The first year the program began showing (seriesMaster programs
            only)
          format: int32
          example: 1969
        lastYear:
          type: integer
          description: >-
            The last year the program showed, this only displays for
            seriesMaster type programs when the program is no longer an active
            program.)
          format: int32
          example: 2011
        episodes:
          type: array
          description: >-
            Describes all program types except for Episode, which are only
            supported nested under a Series object. Episodes are defined in a
            separate object with other episode-specific fields and only returned
            when firstAiring=true.
          items:
            $ref: '#/components/schemas/Episode'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use audience field instead.
    ShowingLinear:
      type: object
      properties:
        kind:
          type: string
          description: >-
            Field indicating type of showing returned. Value of this field is
            ListingInfo for linear catalog items. Always returned.
        airingType:
          type: string
          description: >-
            The type of airing of a listing. Supported values are: Live, New,
            Repeat, Taped
        linearCompanies:
          type: array
          description: List of provider companies ids
          items:
            $ref: '#/components/schemas/ProviderCompany'
        startTime:
          type: string
          description: >-
            The start date and time of the listing as per ISO8601, in UTC - not
            localized
          format: date-time
          example: '2020-08-14T06:00:00Z'
        endTime:
          type: string
          description: >-
            The end date and time of the listing as per ISO8601, in UTC - not
            localized
          format: date-time
          example: '2020-08-14T06:00:00Z'
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/StationChannel'
      description: >-
        By default the API returns the earliest linear listing for each top
        level program.
    SportingEvent:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        programType:
          type: string
          description: The type of program as defined by Merlin in Program schema.
        durableAppIds:
          type: array
          description: >-
            Array of durableAppId values indicating all of the third party
            platforms in which the content is available/playable - does not
            account for the native platform. Only returned when
            computeExclusivity=true is present in the request.
          example:
            - Netflix
            - prime.video
          items:
            type: string
            description: >-
              Array of durableAppId values indicating all of the third party
              platforms in which the content is available/playable - does not
              account for the native platform. Only returned when
              computeExclusivity=true is present in the request.
            example: '["Netflix","prime.video"]'
        exclusiveTo:
          type: string
          description: >-
            Single durableAppId indicating the third party platform the content
            is exclusive to, if any.
          example: Netflix
        language:
          type: string
          description: >-
            ISO 639-2 (3-letter) language code for program. This represents the
            intended audience of this Program.
        originalAirDate:
          type: string
          description: Original air date of episode or 'other' on linear tv - date only.
          format: date
          example: '2020-09-09'
        synopsis:
          type: string
          description: The program's medium synopsis. About 1 paragraph description.
        title:
          type: string
          description: >-
            This program title - for Episode programs, this is the SeriesMaster
            title, returned along with episodeTitle field.
        year:
          type: integer
          description: >-
            Year of the program's initial broadcast (for TV) or the release year
            for a Movie.
          format: int32
        showings:
          type: array
          description: >-
            By default the API returns the earliest linear listing for each top
            level program.
          items:
            $ref: '#/components/schemas/ShowingLinear'
        tags:
          type: array
          description: >-
            List of tag objects associated with the program. Only tag ID field
            is returned.
          items:
            $ref: '#/components/schemas/TagModel'
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        sportsSubtitle:
          type: string
          description: >-
            The subtitle for a sporting event, usually indicates which teams are
            included in the event. sportsSubtitle can only be set in programs of
            type: Episode, SeriesMaster, SportingEvent, Other
        sportingEvent:
          type: boolean
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use audience field instead.
    SportsTeam:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        gender:
          type: string
          description: Male, Female, Co-Ed or null. Default is null.
        sportType:
          type: string
          description: The sport that the team plays (e.g., Football, Baseball, etc.).
        sportLeague:
          type: string
          description: Name of the league
          example: NCAA
        representingName:
          type: string
          description: The city or region that the team represents.
          example: Penn State
    Station:
      type: object
      properties:
        clickRank:
          type: number
          format: double
        entityId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        language:
          type: string
          description: ISO 639-2 (3-letter) language code for station Deprecated in 1.52.5.
          example: en
        title:
          type: string
          description: >-
            Title of the station - or the Channel override. Not the same as
            Channel.callSign.
          example: ESPN
        shortName:
          type: string
          description: >-
            A short version of the station title.This field is only available if
            channels field is available because shortName is currently sourced
            from the station's channels.
          example: ESPN
        channels:
          type: array
          items:
            $ref: '#/components/schemas/StationChannel'
        companyAssociations:
          type: array
          description: >-
            List of all the companies associated with this Station. There might
            be more than one Company if besides a NetworkAffiliate the Station
            is also associated with a NetworkGroup Company.
          items:
            $ref: '#/components/schemas/SearchStationCompanyAssociation'
        tags:
          type: array
          description: Tags associated with the station.
          items:
            $ref: '#/components/schemas/TagModel'
        isAdult:
          type: boolean
          description: Flag indicating whether the entity is tagged for adult audience.
    StationChannel:
      type: object
      properties:
        stationId:
          type: string
          description: Merlin entity Id.
          example: '8895693464334547112'
        entityType:
          type: string
          description: Merlin entity type.
          example: program, team, person
        onScreenCallSign:
          type: string
          description: Channel's call sign to display.
          example: HBOHD
        channelNumber:
          type: string
          description: The number of the localized channel.
          example: '101'
        videoQuality:
          type: string
          description: >-
            If Offer, sourced from Offer.videoQuality - SD, HD, UHD, 4K, 3D

            If Listing or Recording, based on Listing.quality (Merlin) - SD, HD,
            UHD

            If Station, sourced from Station.videoQuality - SD, HD, UHD
          example: SD
        language:
          type: string
        productContexts:
          type: array
          description: The catalog the content is available in.
          items:
            $ref: '#/components/schemas/ProductContext'
      description: >-
        Only returned nested under a Station object when entityType=Station or
        as entity level when matchChannelNumber=true. Channel is a localized
        station object. By default only has channelNumber field. Does not have
        clickRank. Use channelField parameter to include other supported fields.
    TagModel:
      type: object
      properties:
        tagId:
          type: string
      description: Tag associated with the program.
    TvSeries:
      type: object
      properties:
        tvSeriesId:
          type: string
          description: The Merlin ID of the tvSeries
    SearchModel:
      required:
        - entities
        - entityCount
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/SearchEntity'
        entityCount:
          minimum: 0
          type: integer
          description: Total number of found entities
          format: int32
    AudioTrack:
      type: object
      properties:
        language:
          type: string
        service:
          type: string
        type:
          type: string
    BestWayToWatch:
      type: object
      oneOf:
        - $ref: '#/components/schemas/PlayNowShowingVod'
        - $ref: '#/components/schemas/PlayNowShowingListing'
        - $ref: '#/components/schemas/PlayNowShowingRecording'
    BrowseFacets:
      type: object
      properties:
        productContextId:
          type: object
          additionalProperties:
            type: integer
            format: int32
        productContextType:
          $ref: '#/components/schemas/ProductContextType'
        providerCompanyIds:
          type: object
          additionalProperties:
            type: integer
            format: int32
        linearCompanyIds:
          type: object
          additionalProperties:
            type: integer
            format: int32
        waysToWatch:
          $ref: '#/components/schemas/WaysToWatch'
        est:
          $ref: '#/components/schemas/FacetSummary'
        ppv:
          $ref: '#/components/schemas/FacetSummary'
        downloadable:
          $ref: '#/components/schemas/FacetSummary'
        expirationDate:
          type: object
          additionalProperties:
            type: integer
            format: int32
        availableDate:
          type: object
          additionalProperties:
            type: integer
            format: int32
        newUntil:
          type: object
          additionalProperties:
            type: integer
            format: int32
        lastChanceFrom:
          type: object
          additionalProperties:
            type: integer
            format: int32
        videoQuality:
          type: object
          additionalProperties:
            type: integer
            format: int32
      description: >-
        Provides count summary of fields and their values at program level. 
        Series will have their episode's showing information as well. <p>
        Returned only when `facetField` param is used and only for the fields
        passed through this param.
    BrowseItems:
      type: object
      properties:
        entityId:
          type: integer
          description: >-
            merlin entity Id. Not populated in Browse and Linear API's - use
            ```programId``` field instead.
          format: int64
          example: 8895693464334547000
          deprecated: true
        entityType:
          type: string
          description: >-
            Merlin entity type. Watch Options supports programs only. Text
            Search supports persons, teams, channels, stations and companies.
            Text Search also expands programs into movies, seriesMaster,
            sportingEvents Not populated in Browse API's - use ```kind``` field
            instead.
          example: Program
        entityUrn:
          type: string
          description: >-
            XRN that uniquely identifies a Merlin entity. Not poplulated on
            Linear listings - use ```programUrn``` field instead.
          example: merlin:entity:program:8895693464334547112
        programType:
          type: string
          description: merlin program type.
          example: episode
        sportsSubtitle:
          type: string
          description: >-
            The subtitle for a sporting event, usually indicates which teams are
            included in the event. sportsSubtitle can only be set in programs of
            type: Episode, SeriesMaster, SportingEvent, Other
        synopsis:
          type: string
          description: program synopsis
        title:
          type: string
          description: program title
        episodeTitle:
          type: string
          description: program episode title
        tvSeasonEpisodeNumber:
          type: integer
          description: >-
            Episode number within a season. Returned only if program type is
            "episode" and it is seasonal.
          format: int32
        tvSeriesEpisodeNumber:
          type: integer
          description: >-
            Episode number within the tv series. Returned only if program type
            is "episode" and it is episodic.
          format: int32
        partNumber:
          type: integer
          description: >-
            Indicates which part of the program it is if the program has more
            than one part (for example, with a multi-part episode or similar).
          format: int32
          example: 1
        totalParts:
          type: integer
          description: Indicates the total number of parts of the program.
          format: int32
          example: 2
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        tvSeasonNumber:
          type: integer
          description: The TV season number. Only available in seasonal series.
          format: int32
        kind:
          type: string
        programId:
          type: string
        audience:
          type: string
        category:
          type: string
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        firstRunCompany:
          $ref: '#/components/schemas/ProviderCompany'
        language:
          type: string
        originalAirDate:
          type: string
          format: date-time
        programReviews:
          type: array
          items:
            $ref: '#/components/schemas/ProgramReviews'
        year:
          type: integer
          format: int32
        tvSeasons:
          type: array
          items:
            $ref: '#/components/schemas/BrowseTvSeason'
        tvSeries:
          $ref: '#/components/schemas/TvSeries'
        episodes:
          type: array
          items:
            $ref: '#/components/schemas/BrowseProgram'
        facets:
          $ref: '#/components/schemas/BrowseFacets'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/BrowseOffer'
        bestWaysToWatch:
          type: array
          items:
            $ref: '#/components/schemas/BestWayToWatch'
        playNowDetails:
          $ref: '#/components/schemas/PlayNowDetails'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use ```audience``` field instead.
    BrowseOffer:
      type: object
      properties:
        title:
          type: string
        offerId:
          type: string
        videoQuality:
          type: string
        featureAvailabilityDate:
          type: string
          format: date-time
        featureAvailabilityDisplayText:
          type: string
        offerState:
          type: string
        availableDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        isLocalizedByTime:
          type: boolean
        localizedByTime:
          type: boolean
        price:
          type: number
          format: double
    BrowseProgram:
      type: object
      properties:
        kind:
          type: string
          description: Value is always ProgramInfo for programs of any type.
        programId:
          type: string
          description: Merlin id of the program.
          example: '8895693464334547112'
        contentRatings:
          type: array
          description: >-
            List of rating objects that contains the rating information for the
            program
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          description: Duration of program in milli seconds
        programReviews:
          type: array
          description: Common Sense Media review's star rating only.
          items:
            $ref: '#/components/schemas/ProgramReviews'
        language:
          type: string
          description: Language in which the program is shown
        year:
          type: integer
          description: >-
            Year of the program's initial broadcast (for TV) or the release year
            for a Movie.
          format: int32
        category:
          type: string
          description: Program's category such as Movie, Series etc.
        firstRunCompany:
          $ref: '#/components/schemas/ProviderCompany'
        tags:
          type: array
          description: >-
            The tags associated with the program. These are Merlin IDs and can
            represent any kind of Merlin tag, including but not limited to
            genre, iTheme, music, country, type, etc.
          items:
            $ref: '#/components/schemas/Tag'
        audience:
          type: string
          description: Field indicating appropriate audience of this program.
          example: adult
        browseRank:
          type: integer
          description: Program's calculated browse rank score.
          format: int32
        parentIds:
          type: array
          description: >-
            The IDs of parent programs for programs with entity type of extra,
            minisode, preview, or other.
          items:
            type: string
        relevance:
          type: array
          description: >-
            List containing relevance information for the program, such as
            browse rank or rotten tomatoes scores.
          items:
            $ref: '#/components/schemas/Relevance'
        firstYear:
          type: integer
          description: >-
            The first year the program began showing (seriesMaster programs
            only)
          format: int32
          example: 1969
        lastYear:
          type: integer
          description: >-
            The last year the program showed, this only displays for
            seriesMaster type programs when the program is no longer an active
            program.
          format: int32
          example: 2011
        tvSeries:
          $ref: '#/components/schemas/TvSeries'
        originalAirDate:
          type: string
          description: The date the episode originally aired.
          format: date-time
        listingIds:
          type: array
          description: >-
            Set of all the listingId values from the VOD showings for a given
            program.
          items:
            type: string
        trailerRank:
          type: integer
          description: The trailer rank of the program.
          format: int32
        entityCollectionId:
          type: string
          description: >-
            Refers to the entity collection in which a given program is
            included.  This is important for cross pollinating to non-English
            preferred language versions for available programs
        seriesEntityCollectionId:
          type: string
          description: >-
            For episodes, this refers to the entity collection of the parent
            series.
        isPreviouslyAvailable:
          type: boolean
          description: >-
            Indicates whether the program has been available within last 13
            months or not.
        isTrailer:
          type: boolean
          description: true if the program is an Extra and a trailer, false otherwise
    BrowseTvSeason:
      type: object
      properties:
        tvSeasonId:
          type: string
          description: >-
            The merlin ID of the tv season. A program level metadata that is
            available only for episodes under a series.
        tvSeasonNumber:
          type: integer
          description: The TV season number. only available in seasonal serieses.
          format: int32
        totalPrograms:
          type: integer
          description: Total number of episodes available for a given season.
          format: int32
    ExternalAppIds:
      type: object
      properties:
        assetId:
          type: string
        entityId:
          type: string
        entityType:
          type: string
        seasonId:
          type: string
        seriesId:
          type: string
        featureId:
          type: string
        appContentData:
          type: string
        channelType:
          type: string
      description: OTT app native metadata.
    FacetSummary:
      type: object
      properties:
        trueCount:
          type: integer
          format: int32
        falseCount:
          type: integer
          format: int32
    Listing:
      type: object
      properties:
        listingId:
          type: string
        startTime:
          type: string
          format: date-time
    MediaLocator:
      type: object
      properties:
        format:
          type: string
        url:
          type: string
    PersonalizedListsPlayNowListsResponse:
      type: object
      properties:
        itemCount:
          type: integer
          format: int32
        browseItems:
          type: array
          items:
            $ref: '#/components/schemas/BrowseItems'
    PlayNowDetails:
      type: object
      properties:
        reasonTags:
          type: array
          items:
            type: string
    PlayNowShowingListing:
      type: object
      properties:
        audioType:
          type: string
        colorDepth:
          type: string
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        entityId:
          type: integer
          format: int64
        entityUrn:
          type: string
        programVariant:
          $ref: '#/components/schemas/ProgramVariant'
        networkGroupCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        airingType:
          type: string
        captionType:
          type: string
        cloudDVRDisallowed:
          type: boolean
        endTime:
          type: string
          format: date-time
        subjectToBlackout:
          type: boolean
        listingId:
          type: string
        startTime:
          type: string
          format: date-time
        videoQuality:
          type: string
        kind:
          type: string
        stationId:
          type: string
        linearCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        hasDvs:
          type: boolean
        isSap:
          type: boolean
        isClosedCaption:
          type: boolean
        isPpv:
          type: boolean
        isRestartable:
          type: boolean
        isSubtitled:
          type: boolean
    PlayNowShowingRecording:
      type: object
      properties:
        recordingId:
          type: string
        recordingUrn:
          type: string
        recorderManagerId:
          type: string
        recordingStatus:
          type: string
        recordingType:
          type: string
        listing:
          type: array
          items:
            $ref: '#/components/schemas/RecordingListing'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        kind:
          type: string
    PlayNowShowingVod:
      type: object
      properties:
        audioType:
          type: string
        colorDepth:
          type: string
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        entityId:
          type: integer
          format: int64
        entityUrn:
          type: string
        programVariant:
          $ref: '#/components/schemas/ProgramVariant'
        networkGroupCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        audioTracks:
          type: array
          items:
            $ref: '#/components/schemas/AudioTrack'
        contentDescriptors:
          type: array
          items:
            type: string
        distributorCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        mediaAccountName:
          type: string
        mediaGuid:
          type: string
        playerConfig:
          type: object
          additionalProperties:
            type: string
        providerCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        streamingClass:
          type: string
        trickModesRestricted:
          type: array
          items:
            type: string
        videoQualities:
          type: array
          items:
            type: string
        listing:
          $ref: '#/components/schemas/Listing'
        videoQuality:
          type: string
          deprecated: true
        kind:
          type: string
        mediaContent:
          type: array
          items:
            $ref: '#/components/schemas/MediaLocator'
        durableAppId:
          type: string
        externalAppIds:
          $ref: '#/components/schemas/ExternalAppIds'
        listingId:
          type: string
          deprecated: true
        hasDvs:
          type: boolean
        isSap:
          type: boolean
        isClosedCaption:
          type: boolean
        isPpv:
          type: boolean
        isIVod:
          type: boolean
    ProductContextType:
      type: object
      properties:
        CTV:
          type: integer
          format: int32
          writeOnly: true
        CDVR:
          type: integer
          format: int32
          writeOnly: true
        ctv:
          type: integer
          format: int32
        cdvr:
          type: integer
          format: int32
    ProgramReviews:
      type: object
      properties:
        starRating:
          type: integer
          format: int32
    ProgramVariant:
      type: object
      properties:
        entityId:
          type: integer
          description: >-
            merlin entity Id. Not populated in Browse and Linear API's - use
            ```programId``` field instead.
          format: int64
          example: 8895693464334547000
          deprecated: true
        entityType:
          type: string
          description: >-
            Merlin entity type. Watch Options supports programs only. Text
            Search supports persons, teams, channels, stations and companies.
            Text Search also expands programs into movies, seriesMaster,
            sportingEvents Not populated in Browse API's - use ```kind``` field
            instead.
          example: Program
        entityUrn:
          type: string
          description: >-
            XRN that uniquely identifies a Merlin entity. Not poplulated on
            Linear listings - use ```programUrn``` field instead.
          example: merlin:entity:program:8895693464334547112
        programType:
          type: string
          description: merlin program type.
          example: episode
        sportsSubtitle:
          type: string
          description: >-
            The subtitle for a sporting event, usually indicates which teams are
            included in the event. sportsSubtitle can only be set in programs of
            type: Episode, SeriesMaster, SportingEvent, Other
        synopsis:
          type: string
          description: program synopsis
        title:
          type: string
          description: program title
        episodeTitle:
          type: string
          description: program episode title
        tvSeasonEpisodeNumber:
          type: integer
          description: >-
            Episode number within a season. Returned only if program type is
            "episode" and it is seasonal.
          format: int32
        tvSeriesEpisodeNumber:
          type: integer
          description: >-
            Episode number within the tv series. Returned only if program type
            is "episode" and it is episodic.
          format: int32
        programId:
          type: string
          deprecated: true
        programVariantId:
          type: string
          description: Program variant ID
          example: '5898927675278628249'
        metadataProvider:
          type: string
          description: Provider of the metadata
          example: SKY_CSC
        companyId:
          type: string
          description: >-
            The Merlin company ID that represents the content provider
            associated with this programVariant.
          example: '8911179174617681105'
        credits:
          type: string
          description: >-
            The credits on the program. This is a simple comma-separated list of
            strings containing the name of the persons associated with the
            program.
        tags:
          type: array
          description: >
            Conveys bound ProviderGenre and ProviderSubgenre tags.

            Sky-specific use case used for automatic sound modes on playback -
            sound and picture modes of the TV if set to auto mode.

            Sky will manage tag promotion to the program level - Astrolabe would
            write the same tags to both Program and ProgramVariants

            Browse will filter programs by bound tags at the program level only.
          items:
            $ref: '#/components/schemas/Tag'
        tvSeries:
          $ref: '#/components/schemas/TvSeries'
        tvSeason:
          $ref: '#/components/schemas/TvSeason'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use ```audience``` field instead.
      description: Program Variant model
    RecordingListing:
      type: object
      properties:
        audioType:
          type: string
        colorDepth:
          type: string
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        entityId:
          type: integer
          format: int64
        entityUrn:
          type: string
        programVariant:
          $ref: '#/components/schemas/ProgramVariant'
        networkGroupCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        airingType:
          type: string
        captionType:
          type: string
        cloudDVRDisallowed:
          type: boolean
        endTime:
          type: string
          format: date-time
        subjectToBlackout:
          type: boolean
        listingId:
          type: string
        startTime:
          type: string
          format: date-time
        videoQuality:
          type: string
        station:
          $ref: '#/components/schemas/Station'
        hasDvs:
          type: boolean
        isSap:
          type: boolean
        isClosedCaption:
          type: boolean
        isPpv:
          type: boolean
        isRestartable:
          type: boolean
        isSubtitled:
          type: boolean
    Relevance:
      type: object
      properties:
        type:
          type: string
        source:
          type: string
        score:
          type: number
          format: double
    Tag:
      type: object
      properties:
        tagId:
          type: string
    TvSeason:
      type: object
      properties:
        tvSeasonId:
          type: string
          description: >-
            The merlin ID of the tvSeason. A program level metadata that is
            available only for episodes under a series.
        tvSeasonNumber:
          type: integer
          description: The TV season number. only available in seasonal series.
          format: int32
      description: Program TvSeason
    WaysToWatch:
      type: object
      properties:
        linear:
          type: integer
          format: int32
        vod:
          type: integer
          format: int32
        preorder:
          type: integer
          format: int32
    PersonalizedListsEntity:
      type: object
      properties:
        entityId:
          type: integer
          description: >-
            merlin entity Id. Not populated in Browse and Linear API's - use
            ```programId``` field instead.
          format: int64
          example: 8895693464334547000
          deprecated: true
        entityType:
          type: string
          description: >-
            Merlin entity type. Watch Options supports programs only. Text
            Search supports persons, teams, channels, stations and companies.
            Text Search also expands programs into movies, seriesMaster,
            sportingEvents Not populated in Browse API's - use ```kind``` field
            instead.
          example: Program
        entityUrn:
          type: string
          description: >-
            XRN that uniquely identifies a Merlin entity. Not poplulated on
            Linear listings - use ```programUrn``` field instead.
          example: merlin:entity:program:8895693464334547112
        programType:
          type: string
          description: merlin program type.
          example: episode
        sportsSubtitle:
          type: string
          description: >-
            The subtitle for a sporting event, usually indicates which teams are
            included in the event. sportsSubtitle can only be set in programs of
            type: Episode, SeriesMaster, SportingEvent, Other
        synopsis:
          type: string
          description: program synopsis
        title:
          type: string
          description: program title
        episodeTitle:
          type: string
          description: program episode title
        tvSeasonEpisodeNumber:
          type: integer
          description: >-
            Episode number within a season. Returned only if program type is
            "episode" and it is seasonal.
          format: int32
        tvSeriesEpisodeNumber:
          type: integer
          description: >-
            Episode number within the tv series. Returned only if program type
            is "episode" and it is episodic.
          format: int32
        partNumber:
          type: integer
          description: >-
            Indicates which part of the program it is if the program has more
            than one part (for example, with a multi-part episode or similar).
          format: int32
          example: 1
        totalParts:
          type: integer
          description: Indicates the total number of parts of the program.
          format: int32
          example: 2
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        tvSeasonNumber:
          type: integer
          description: The TV season number. Only available in seasonal series.
          format: int32
        kind:
          type: string
        programId:
          type: string
        audience:
          type: string
        category:
          type: string
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        firstRunCompany:
          $ref: '#/components/schemas/ProviderCompany'
        language:
          type: string
        originalAirDate:
          type: string
          format: date-time
        programReviews:
          type: array
          items:
            $ref: '#/components/schemas/ProgramReviews'
        year:
          type: integer
          format: int32
        tvSeasons:
          type: array
          items:
            $ref: '#/components/schemas/BrowseTvSeason'
        tvSeries:
          $ref: '#/components/schemas/TvSeries'
        episodes:
          type: array
          items:
            $ref: '#/components/schemas/BrowseProgram'
        facets:
          $ref: '#/components/schemas/BrowseFacets'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/BrowseOffer'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use ```audience``` field instead.
    PersonalizedListsResponse:
      type: object
      properties:
        itemCount:
          type: integer
          format: int32
        browseItems:
          type: array
          items:
            $ref: '#/components/schemas/PersonalizedListsEntity'
    TooManyRequestsErrorResponse:
      required:
        - detail
        - instance
        - status
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
          format: uri
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          maximum: 599
          minimum: 400
          type: integer
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
          example: 429
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          format: uri
    BrowseEpisode:
      type: object
      properties:
        entityId:
          type: integer
          description: >-
            merlin entity Id. Not populated in Browse and Linear API's - use
            ```programId``` field instead.
          format: int64
          example: 8895693464334547000
          deprecated: true
        entityType:
          type: string
          description: >-
            Merlin entity type. Watch Options supports programs only. Text
            Search supports persons, teams, channels, stations and companies.
            Text Search also expands programs into movies, seriesMaster,
            sportingEvents Not populated in Browse API's - use ```kind``` field
            instead.
          example: Program
        entityUrn:
          type: string
          description: >-
            XRN that uniquely identifies a Merlin entity. Not poplulated on
            Linear listings - use ```programUrn``` field instead.
          example: merlin:entity:program:8895693464334547112
        programType:
          type: string
          description: merlin program type.
          example: episode
        sportsSubtitle:
          type: string
          description: >-
            The subtitle for a sporting event, usually indicates which teams are
            included in the event. sportsSubtitle can only be set in programs of
            type: Episode, SeriesMaster, SportingEvent, Other
        synopsis:
          type: string
          description: program synopsis
        title:
          type: string
          description: program title
        episodeTitle:
          type: string
          description: program episode title
        tvSeasonEpisodeNumber:
          type: integer
          description: >-
            Episode number within a season. Returned only if program type is
            "episode" and it is seasonal.
          format: int32
        tvSeriesEpisodeNumber:
          type: integer
          description: >-
            Episode number within the tv series. Returned only if program type
            is "episode" and it is episodic.
          format: int32
        partNumber:
          type: integer
          description: >-
            Indicates which part of the program it is if the program has more
            than one part (for example, with a multi-part episode or similar).
          format: int32
          example: 1
        totalParts:
          type: integer
          description: Indicates the total number of parts of the program.
          format: int32
          example: 2
        tags:
          type: array
          description: tags associated with the program.
          items:
            $ref: '#/components/schemas/Tag'
        tvSeasonNumber:
          type: integer
          format: int32
        kind:
          type: string
          description: Value is always ProgramInfo for programs of any type.
        programId:
          type: string
          description: Merlin id of the program.
          example: '8895693464334547112'
        contentRatings:
          type: array
          description: >-
            List of rating objects that contains the rating information for the
            program
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: integer
          format: int32
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          description: Duration of program in milli seconds
        programReviews:
          type: array
          description: Common Sense Media review's star rating only.
          items:
            $ref: '#/components/schemas/ProgramReviews'
        language:
          type: string
          description: Language in which the program is shown
        year:
          type: integer
          description: >-
            Year of the program's initial broadcast (for TV) or the release year
            for a Movie.
          format: int32
        category:
          type: string
          description: Program's category such as Movie, Series etc.
        firstRunCompany:
          $ref: '#/components/schemas/ProviderCompany'
        audience:
          type: string
          description: Field indicating appropriate audience of this program.
          example: adult
        browseRank:
          type: integer
          description: Program's calculated browse rank score.
          format: int32
        parentIds:
          type: array
          description: >-
            The IDs of parent programs for programs with entity type of extra,
            minisode, preview, or other.
          items:
            type: string
        relevance:
          type: array
          description: >-
            List containing relevance information for the program, such as
            browse rank or rotten tomatoes scores.
          items:
            $ref: '#/components/schemas/NGPRelevance'
        firstYear:
          type: integer
          description: >-
            The first year the program began showing (seriesMaster programs
            only)
          format: int32
          example: 1969
        lastYear:
          type: integer
          description: >-
            The last year the program showed, this only displays for
            seriesMaster type programs when the program is no longer an active
            program.
          format: int32
          example: 2011
        tvSeries:
          $ref: '#/components/schemas/TvSeries'
        originalAirDate:
          type: string
          description: The date the episode originally aired.
          format: date
          example: '2020-09-09'
        listingIds:
          type: array
          description: >-
            Set of all the listingId values from the VOD showings for a given
            program.
          items:
            type: string
        trailerRank:
          type: integer
          description: The trailer rank of the program.
          format: int32
        entityCollectionId:
          type: string
          description: >-
            Refers to the entity collection in which a given program is
            included.  This is important for cross pollinating to non-English
            preferred language versions for available programs
        seriesEntityCollectionId:
          type: string
          description: >-
            For episodes, this refers to the entity collection of the parent
            series.
        nativeProviderCompanies:
          type: array
          items:
            $ref: '#/components/schemas/NativeProviderCompany'
        score:
          type: number
          format: double
        starRating:
          type: integer
          format: int32
        tvSeasonId:
          type: string
        showings:
          type: array
          description: List of showings associated with the program.
          items:
            $ref: '#/components/schemas/BrowseShowing'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use ```audience``` field instead.
        isPreviouslyAvailable:
          type: boolean
          description: >-
            Indicates whether the program has been available within last 13
            months or not.
        isTrailer:
          type: boolean
          description: true if the program is an Extra and a trailer, false otherwise
    BrowseItem:
      type: object
      properties:
        entityId:
          type: integer
          description: >-
            merlin entity Id. Not populated in Browse and Linear API's - use
            ```programId``` field instead.
          format: int64
          example: 8895693464334547000
          deprecated: true
        entityType:
          type: string
          description: >-
            Merlin entity type. Watch Options supports programs only. Text
            Search supports persons, teams, channels, stations and companies.
            Text Search also expands programs into movies, seriesMaster,
            sportingEvents Not populated in Browse API's - use ```kind``` field
            instead.
          example: Program
        entityUrn:
          type: string
          description: >-
            XRN that uniquely identifies a Merlin entity. Not poplulated on
            Linear listings - use ```programUrn``` field instead.
          example: merlin:entity:program:8895693464334547112
        programType:
          type: string
          description: merlin program type.
          example: episode
        sportsSubtitle:
          type: string
          description: >-
            The subtitle for a sporting event, usually indicates which teams are
            included in the event. sportsSubtitle can only be set in programs of
            type: Episode, SeriesMaster, SportingEvent, Other
        synopsis:
          type: string
          description: program synopsis
        title:
          type: string
          description: program title
        episodeTitle:
          type: string
          description: program episode title
        tvSeasonEpisodeNumber:
          type: integer
          description: >-
            Episode number within a season. Returned only if program type is
            "episode" and it is seasonal.
          format: int32
        tvSeriesEpisodeNumber:
          type: integer
          description: >-
            Episode number within the tv series. Returned only if program type
            is "episode" and it is episodic.
          format: int32
        partNumber:
          type: integer
          description: >-
            Indicates which part of the program it is if the program has more
            than one part (for example, with a multi-part episode or similar).
          format: int32
          example: 1
        totalParts:
          type: integer
          description: Indicates the total number of parts of the program.
          format: int32
          example: 2
        tags:
          type: array
          description: tags associated with the program.
          items:
            $ref: '#/components/schemas/Tag'
        tvSeasonNumber:
          type: integer
          format: int32
        kind:
          type: string
          description: Value is always ProgramInfo for programs of any type.
        programId:
          type: string
          description: Merlin id of the program.
          example: '8895693464334547112'
        contentRatings:
          type: array
          description: >-
            List of rating objects that contains the rating information for the
            program
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: integer
          format: int32
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          description: Duration of program in milli seconds
        programReviews:
          type: array
          description: Common Sense Media review's star rating only.
          items:
            $ref: '#/components/schemas/ProgramReviews'
        language:
          type: string
          description: Language in which the program is shown
        year:
          type: integer
          description: >-
            Year of the program's initial broadcast (for TV) or the release year
            for a Movie.
          format: int32
        category:
          type: string
          description: Program's category such as Movie, Series etc.
        firstRunCompany:
          $ref: '#/components/schemas/ProviderCompany'
        audience:
          type: string
          description: Field indicating appropriate audience of this program.
          example: adult
        browseRank:
          type: integer
          description: Program's calculated browse rank score.
          format: int32
        parentIds:
          type: array
          description: >-
            The IDs of parent programs for programs with entity type of extra,
            minisode, preview, or other.
          items:
            type: string
        relevance:
          type: array
          description: >-
            List containing relevance information for the program, such as
            browse rank or rotten tomatoes scores.
          items:
            $ref: '#/components/schemas/NGPRelevance'
        firstYear:
          type: integer
          description: >-
            The first year the program began showing (seriesMaster programs
            only)
          format: int32
          example: 1969
        lastYear:
          type: integer
          description: >-
            The last year the program showed, this only displays for
            seriesMaster type programs when the program is no longer an active
            program.
          format: int32
          example: 2011
        tvSeries:
          $ref: '#/components/schemas/TvSeries'
        originalAirDate:
          type: string
          description: The date the episode originally aired.
          format: date
          example: '2020-09-09'
        listingIds:
          type: array
          description: >-
            Set of all the listingId values from the VOD showings for a given
            program.
          items:
            type: string
        trailerRank:
          type: integer
          description: The trailer rank of the program.
          format: int32
        entityCollectionId:
          type: string
          description: >-
            Refers to the entity collection in which a given program is
            included.  This is important for cross pollinating to non-English
            preferred language versions for available programs
        seriesEntityCollectionId:
          type: string
          description: >-
            For episodes, this refers to the entity collection of the parent
            series.
        nativeProviderCompanies:
          type: array
          items:
            $ref: '#/components/schemas/NativeProviderCompany'
        score:
          type: number
          format: double
        starRating:
          type: integer
          format: int32
        tvSeasonId:
          type: string
        episodes:
          type: array
          description: >-
            List of episodes in a seriesMaster. Only returned for seriesMaster
            programs when the request has one of the parameters id, showings.
          items:
            $ref: '#/components/schemas/BrowseEpisode'
        offers:
          type: array
          description: >-
            List of pre-order objects that exist for programs if the request
            asks for pre-order.
          items:
            $ref: '#/components/schemas/BrowseOffer'
        showings:
          type: array
          description: List of showings associated with the program.
          items:
            $ref: '#/components/schemas/BrowseShowing'
        tvSeasons:
          type: array
          description: >-
            List of objects that contain the season information for each season
            of the seriesMaster type program.
          items:
            $ref: '#/components/schemas/BrowseTvSeason'
        facets:
          $ref: '#/components/schemas/BrowseFacets'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use ```audience``` field instead.
        isPreviouslyAvailable:
          type: boolean
          description: >-
            Indicates whether the program has been available within last 13
            months or not.
        isTrailer:
          type: boolean
          description: true if the program is an Extra and a trailer, false otherwise
    BrowseResponse:
      type: object
      properties:
        itemCount:
          type: integer
          description: >-
            This field indicates number of programs matching the specified
            search criteria.  The actual number of items returned in the
            response might be less depending on the pagination option used.  If
            pagination options aren't used, the items in the response would be
            limited to three even when itemCount is higher.
          format: int32
          example: 10
        browseItems:
          type: array
          items:
            $ref: '#/components/schemas/BrowseItem'
    BrowseShowing:
      type: object
    NGPRelevance:
      type: object
      properties:
        type:
          type: string
        source:
          type: string
        score:
          type: number
          format: double
    NativeProviderCompany:
      type: object
      properties:
        providerCompany:
          $ref: '#/components/schemas/ProviderCompany'
        nativeProviderId:
          type: string
          description: ID for the native app for which the series is available.
          example: '70205012'
      description: >-
        Specifies the platform and the nativeProviderId associates to the
        content.
    LatestTvItem:
      type: object
      properties:
        entityId:
          type: integer
          description: >-
            merlin entity Id. Not populated in Browse and Linear API's - use
            ```programId``` field instead.
          format: int64
          example: 8895693464334547000
          deprecated: true
        entityType:
          type: string
          description: >-
            Merlin entity type. Watch Options supports programs only. Text
            Search supports persons, teams, channels, stations and companies.
            Text Search also expands programs into movies, seriesMaster,
            sportingEvents Not populated in Browse API's - use ```kind``` field
            instead.
          example: Program
        entityUrn:
          type: string
          description: >-
            XRN that uniquely identifies a Merlin entity. Not poplulated on
            Linear listings - use ```programUrn``` field instead.
          example: merlin:entity:program:8895693464334547112
        programType:
          type: string
          description: merlin program type.
          example: episode
        sportsSubtitle:
          type: string
          description: >-
            The subtitle for a sporting event, usually indicates which teams are
            included in the event. sportsSubtitle can only be set in programs of
            type: Episode, SeriesMaster, SportingEvent, Other
        synopsis:
          type: string
          description: program synopsis
        title:
          type: string
          description: program title
        episodeTitle:
          type: string
          description: program episode title
        tvSeasonEpisodeNumber:
          type: integer
          description: >-
            Episode number within a season. Returned only if program type is
            "episode" and it is seasonal.
          format: int32
        tvSeriesEpisodeNumber:
          type: integer
          description: >-
            Episode number within the tv series. Returned only if program type
            is "episode" and it is episodic.
          format: int32
        partNumber:
          type: integer
          description: >-
            Indicates which part of the program it is if the program has more
            than one part (for example, with a multi-part episode or similar).
          format: int32
          example: 1
        totalParts:
          type: integer
          description: Indicates the total number of parts of the program.
          format: int32
          example: 2
        tags:
          type: array
          description: tags associated with the program.
          items:
            $ref: '#/components/schemas/Tag'
        tvSeasonNumber:
          type: integer
          format: int32
        kind:
          type: string
          description: Value is always ProgramInfo for programs of any type.
        programId:
          type: string
          description: Merlin id of the program.
          example: '8895693464334547112'
        contentRatings:
          type: array
          description: >-
            List of rating objects that contains the rating information for the
            program
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: integer
          format: int32
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          description: Duration of program in milli seconds
        programReviews:
          type: array
          description: Common Sense Media review's star rating only.
          items:
            $ref: '#/components/schemas/ProgramReviews'
        language:
          type: string
          description: Language in which the program is shown
        year:
          type: integer
          description: >-
            Year of the program's initial broadcast (for TV) or the release year
            for a Movie.
          format: int32
        category:
          type: string
          description: Program's category such as Movie, Series etc.
        firstRunCompany:
          $ref: '#/components/schemas/ProviderCompany'
        audience:
          type: string
          description: Field indicating appropriate audience of this program.
          example: adult
        browseRank:
          type: integer
          description: Program's calculated browse rank score.
          format: int32
        parentIds:
          type: array
          description: >-
            The IDs of parent programs for programs with entity type of extra,
            minisode, preview, or other.
          items:
            type: string
        relevance:
          type: array
          description: >-
            List containing relevance information for the program, such as
            browse rank or rotten tomatoes scores.
          items:
            $ref: '#/components/schemas/NGPRelevance'
        firstYear:
          type: integer
          description: >-
            The first year the program began showing (seriesMaster programs
            only)
          format: int32
          example: 1969
        lastYear:
          type: integer
          description: >-
            The last year the program showed, this only displays for
            seriesMaster type programs when the program is no longer an active
            program.
          format: int32
          example: 2011
        tvSeries:
          $ref: '#/components/schemas/TvSeries'
        originalAirDate:
          type: string
          description: The date the episode originally aired.
          format: date
          example: '2020-09-09'
        listingIds:
          type: array
          description: >-
            Set of all the listingId values from the VOD showings for a given
            program.
          items:
            type: string
        trailerRank:
          type: integer
          description: The trailer rank of the program.
          format: int32
        entityCollectionId:
          type: string
          description: >-
            Refers to the entity collection in which a given program is
            included.  This is important for cross pollinating to non-English
            preferred language versions for available programs
        seriesEntityCollectionId:
          type: string
          description: >-
            For episodes, this refers to the entity collection of the parent
            series.
        nativeProviderCompanies:
          type: array
          items:
            $ref: '#/components/schemas/NativeProviderCompany'
        score:
          type: number
          format: double
        starRating:
          type: integer
          format: int32
        tvSeasonId:
          type: string
        showings:
          type: array
          description: List of VOD showings associated with the program.
          items:
            $ref: '#/components/schemas/BrowseShowing'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use ```audience``` field instead.
        isPreviouslyAvailable:
          type: boolean
          description: >-
            Indicates whether the program has been available within last 13
            months or not.
        isTrailer:
          type: boolean
          description: true if the program is an Extra and a trailer, false otherwise
    LatestTvResponse:
      type: object
      properties:
        itemCount:
          type: integer
          format: int32
        browseItems:
          type: array
          items:
            $ref: '#/components/schemas/LatestTvItem'
    BecauseYouWatchedItem:
      type: object
      properties:
        programId:
          type: string
        title:
          type: string
        recommendedPrograms:
          type: array
          items:
            $ref: '#/components/schemas/BrowseProgramExtension'
    BecauseYouWatchedResponse:
      type: object
      properties:
        itemCount:
          type: integer
          format: int32
        browseItems:
          type: array
          items:
            $ref: '#/components/schemas/BecauseYouWatchedItem'
    BrowseProgramExtension:
      type: object
      properties:
        entityId:
          type: integer
          description: >-
            merlin entity Id. Not populated in Browse and Linear API's - use
            ```programId``` field instead.
          format: int64
          example: 8895693464334547000
          deprecated: true
        entityType:
          type: string
          description: >-
            Merlin entity type. Watch Options supports programs only. Text
            Search supports persons, teams, channels, stations and companies.
            Text Search also expands programs into movies, seriesMaster,
            sportingEvents Not populated in Browse API's - use ```kind``` field
            instead.
          example: Program
        entityUrn:
          type: string
          description: >-
            XRN that uniquely identifies a Merlin entity. Not poplulated on
            Linear listings - use ```programUrn``` field instead.
          example: merlin:entity:program:8895693464334547112
        programType:
          type: string
          description: merlin program type.
          example: episode
        sportsSubtitle:
          type: string
          description: >-
            The subtitle for a sporting event, usually indicates which teams are
            included in the event. sportsSubtitle can only be set in programs of
            type: Episode, SeriesMaster, SportingEvent, Other
        synopsis:
          type: string
          description: program synopsis
        title:
          type: string
          description: program title
        episodeTitle:
          type: string
          description: program episode title
        tvSeasonEpisodeNumber:
          type: integer
          description: >-
            Episode number within a season. Returned only if program type is
            "episode" and it is seasonal.
          format: int32
        tvSeriesEpisodeNumber:
          type: integer
          description: >-
            Episode number within the tv series. Returned only if program type
            is "episode" and it is episodic.
          format: int32
        partNumber:
          type: integer
          description: >-
            Indicates which part of the program it is if the program has more
            than one part (for example, with a multi-part episode or similar).
          format: int32
          example: 1
        totalParts:
          type: integer
          description: Indicates the total number of parts of the program.
          format: int32
          example: 2
        tags:
          type: array
          description: tags associated with the program.
          items:
            $ref: '#/components/schemas/Tag'
        tvSeasonNumber:
          type: integer
          format: int32
        kind:
          type: string
          description: Value is always ProgramInfo for programs of any type.
        programId:
          type: string
          description: Merlin id of the program.
          example: '8895693464334547112'
        contentRatings:
          type: array
          description: >-
            List of rating objects that contains the rating information for the
            program
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: integer
          format: int32
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          description: Duration of program in milli seconds
        programReviews:
          type: array
          description: Common Sense Media review's star rating only.
          items:
            $ref: '#/components/schemas/ProgramReviews'
        language:
          type: string
          description: Language in which the program is shown
        year:
          type: integer
          description: >-
            Year of the program's initial broadcast (for TV) or the release year
            for a Movie.
          format: int32
        category:
          type: string
          description: Program's category such as Movie, Series etc.
        firstRunCompany:
          $ref: '#/components/schemas/ProviderCompany'
        audience:
          type: string
          description: Field indicating appropriate audience of this program.
          example: adult
        browseRank:
          type: integer
          description: Program's calculated browse rank score.
          format: int32
        parentIds:
          type: array
          description: >-
            The IDs of parent programs for programs with entity type of extra,
            minisode, preview, or other.
          items:
            type: string
        relevance:
          type: array
          description: >-
            List containing relevance information for the program, such as
            browse rank or rotten tomatoes scores.
          items:
            $ref: '#/components/schemas/NGPRelevance'
        firstYear:
          type: integer
          description: >-
            The first year the program began showing (seriesMaster programs
            only)
          format: int32
          example: 1969
        lastYear:
          type: integer
          description: >-
            The last year the program showed, this only displays for
            seriesMaster type programs when the program is no longer an active
            program.
          format: int32
          example: 2011
        tvSeries:
          $ref: '#/components/schemas/TvSeries'
        originalAirDate:
          type: string
          description: The date the episode originally aired.
          format: date
          example: '2020-09-09'
        listingIds:
          type: array
          description: >-
            Set of all the listingId values from the VOD showings for a given
            program.
          items:
            type: string
        trailerRank:
          type: integer
          description: The trailer rank of the program.
          format: int32
        entityCollectionId:
          type: string
          description: >-
            Refers to the entity collection in which a given program is
            included.  This is important for cross pollinating to non-English
            preferred language versions for available programs
        seriesEntityCollectionId:
          type: string
          description: >-
            For episodes, this refers to the entity collection of the parent
            series.
        nativeProviderCompanies:
          type: array
          items:
            $ref: '#/components/schemas/NativeProviderCompany'
        score:
          type: number
          format: double
        starRating:
          type: integer
          format: int32
        tvSeasonId:
          type: string
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use ```audience``` field instead.
        isPreviouslyAvailable:
          type: boolean
          description: >-
            Indicates whether the program has been available within last 13
            months or not.
        isTrailer:
          type: boolean
          description: true if the program is an Extra and a trailer, false otherwise
    TvSeasonModel:
      type: object
      properties:
        entityId:
          type: string
        entityType:
          type: string
        tvSeriesId:
          type: string
        tvSeasonNumber:
          type: integer
          format: int32
        startYear:
          type: string
    SportsLeagueModel:
      type: object
      properties:
        leagueId:
          type: string
        title:
          type: string
    SportsTeamModel:
      type: object
      properties:
        entityId:
          type: string
        entityType:
          type: string
        nickName:
          type: string
        representingName:
          type: string
        conference:
          type: string
        division:
          type: string
        sportType:
          type: string
        gender:
          type: string
        abbreviation:
          type: string
        parentSportsTeamId:
          type: string
        sportsLeague:
          $ref: '#/components/schemas/SportsLeagueModel'
    AssetModel:
      type: object
      properties:
        audioType:
          type: string
        colorDepth:
          type: string
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        entityId:
          type: integer
          format: int64
        entityUrn:
          type: string
        videoQuality:
          type: string
          deprecated: true
        programVariant:
          $ref: '#/components/schemas/ProgramVariant'
        inHomePlayClientProfiles:
          type: array
          items:
            type: string
        locators:
          type: array
          items:
            $ref: '#/components/schemas/LocatorModel'
        outOfHomePlayClientProfiles:
          type: array
          items:
            type: string
        audioTracks:
          type: array
          items:
            $ref: '#/components/schemas/AudioTrackModel'
        contentDescriptors:
          type: array
          items:
            type: string
        distributorCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        mediaAccountName:
          type: string
        mediaGuid:
          type: string
        playerConfig:
          type: object
          additionalProperties:
            type: string
        providerCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        streamingClass:
          type: string
        trickModesRestricted:
          type: array
          items:
            type: string
        networkGroupCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        durableAppId:
          type: string
        videoQualities:
          type: array
          items:
            type: string
        hasDvs:
          type: boolean
        isSap:
          type: boolean
        isClosedCaption:
          type: boolean
        isSubtitled:
          type: boolean
    AudioTrackModel:
      type: object
      properties:
        service:
          type: string
        language:
          type: string
        type:
          type: string
    ChannelModel:
      type: object
      properties:
        channelNumber:
          type: integer
          format: int32
        onScreenCallsign:
          type: string
        station:
          $ref: '#/components/schemas/StationModel'
        locationId:
          type: string
        ncdsStationId:
          type: string
    CreditModel:
      type: object
      properties:
        creditId:
          type: string
        type:
          type: string
        rank:
          type: string
        cameo:
          type: string
        personId:
          type: string
        personName:
          type: string
        programId:
          type: string
        programTitle:
          type: string
        programYear:
          type: string
    LinearInfoModel:
      required:
        - listingId
      type: object
      properties:
        audioType:
          type: string
        colorDepth:
          type: string
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        entityId:
          type: integer
          format: int64
        entityUrn:
          type: string
        videoQuality:
          type: string
          deprecated: true
        programVariant:
          $ref: '#/components/schemas/ProgramVariant'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/ChannelModel'
        cloudDVRDisallowed:
          type: boolean
        airingType:
          type: string
        captionType:
          type: string
          enum:
            - cc
            - oc
            - sl
            - cc/sl
            - oc/sl
            - cc|sl
            - oc|sl
        endTime:
          type: string
          format: date-time
        listingId:
          type: string
        startTime:
          type: string
          format: date-time
        linearCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        networkGroupCompanies:
          type: array
          description: >-
            List of NetworkGroup (parent) company IDs for the
            showing/watchOption. Not returned for TvGrid listings - in Tv Grid,
            company information is conveyed in XVP Linear's getChannels response
            instead.
          items:
            $ref: '#/components/schemas/ProviderCompany'
        watchableBase:
          $ref: '#/components/schemas/WatchableBase'
        subscriberAccess:
          $ref: '#/components/schemas/SubscriberAccess'
        hasDvs:
          type: boolean
        isSap:
          type: boolean
        isClosedCaption:
          type: boolean
        isSubtitled:
          type: boolean
        isSubjectToBlackout:
          type: boolean
        isRestartable:
          type: boolean
        isPpv:
          type: boolean
    LocalizedBlurbReplacement:
      type: object
      properties:
        language:
          type: string
          example: en
        localizedBlurb:
          type: string
          example: New Price
    LocatorModel:
      type: object
      properties:
        bitrate:
          type: integer
          format: int64
        codec:
          type: string
        expression:
          type: string
        format:
          type: string
        height:
          type: integer
          format: int32
        locatorURI:
          type: string
        protectionScheme:
          type: string
        width:
          type: integer
          format: int32
    ModifiedPrice:
      type: object
      properties:
        offerModifierId:
          type: integer
          format: int64
          example: 1137364250
        modifiedPrice:
          type: integer
          format: int32
          example: 989
        blurbReplacement:
          type: string
          example: Discount Price
        localizedBlurbReplacement:
          type: array
          items:
            $ref: '#/components/schemas/LocalizedBlurbReplacement'
    NGPAudioTrack:
      type: object
      properties:
        service:
          type: string
        language:
          type: string
        type:
          type: string
    OffersModel:
      type: object
      properties:
        availableDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        featureAvailabilityDate:
          type: string
          format: date-time
        featureAvailabilityDisplayText:
          type: string
        offerId:
          type: integer
          format: int64
        offerState:
          type: string
        title:
          type: string
        videoQuality:
          type: string
        price:
          type: number
          format: double
        airingType:
          type: string
        audioTracks:
          type: array
          items:
            $ref: '#/components/schemas/NGPAudioTrack'
        availableEpisodes:
          type: integer
          format: int32
        billingPeriod:
          type: string
        billingType:
          type: string
        colorDepth:
          type: string
        confirmation:
          type: string
        contentGrouping:
          type: string
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        currencyCode:
          type: string
        description:
          type: string
        displayStartDate:
          type: string
          format: date-time
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        entityId:
          type: integer
          format: int64
        entityUrn:
          type: string
        featureAsset:
          $ref: '#/components/schemas/AssetModel'
        providerCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        distributorCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        leasePeriod:
          type: integer
          format: int32
        listings:
          type: array
          items:
            $ref: '#/components/schemas/Listing'
        numberOfExtras:
          type: integer
          format: int32
        numberOfFeatures:
          type: integer
          format: int32
        numberOfPayments:
          type: integer
          format: int32
        numberOfPromos:
          type: integer
          format: int32
        overlay:
          $ref: '#/components/schemas/Overlay'
        phoneNumber:
          type: string
        previewAsset:
          $ref: '#/components/schemas/AssetModel'
        primaryEntityId:
          type: integer
          format: int64
        primaryEntityUrn:
          type: string
          description: >-
            The URN of the entity related to this offer. If the offer is a
            bundle that wraps a tv season the expected value is the merlin
            season URN. Also see `entityUrn`.
          example: merlin:entity:tvseason:7602739573222252114
        productContexts:
          type: array
          items:
            type: string
        purchaseCategory:
          type: string
        stationId:
          type: string
        termsAndConditions:
          type: string
        subscriberAccess:
          $ref: '#/components/schemas/SubscriberAccess'
        networkGroupCompanies:
          type: array
          description: >-
            List of NetworkGroup (parent) company IDs for the
            showing/watchOption. Not returned for TvGrid listings - in Tv Grid,
            company information is conveyed in XVP Linear's getChannels response
            instead.
          items:
            $ref: '#/components/schemas/ProviderCompany'
        hasDvs:
          type: boolean
        hdRequired:
          type: boolean
        isClosedCaption:
          type: boolean
        isSap:
          type: boolean
        moviesAnywhereEligible:
          type: boolean
    Overlay:
      type: object
      properties:
        description:
          type: string
        header:
          type: string
        tile:
          type: string
    PreviewAssetVod:
      type: object
      properties:
        mediaAccountName:
          type: string
        mediaGuid:
          type: string
        locators:
          type: array
          items:
            $ref: '#/components/schemas/MediaLocator'
    SeriesMasterWatchOptionsModel:
      type: object
      properties:
        pageSize:
          type: integer
          format: int32
        tvSeasons:
          type: array
          items:
            $ref: '#/components/schemas/WatchOptionsTvSeason'
        watchOptions:
          $ref: '#/components/schemas/WatchOptions'
    StationModel:
      type: object
      properties:
        stationId:
          type: string
        videoQuality:
          type: string
        title:
          type: string
          description: StationTitle
          example: ESPN
    SubscriberAccess:
      type: object
      properties:
        isAvailable:
          type: boolean
          description: >-
            LiVOD specific field. Only returned in Watch Options API. Will be
            true if the LiVOD asset is in window and false if the LiVOD asset is
            out of window.
        availabilityStatus:
          type: string
          description: >-
            LiVOD specific field. Only returned in Watch Options API. Possible
            values: Upcoming, InProgress, ConcludedWithReplay, Concluded,
            Unavailable, Available.
        isWatchable:
          type: boolean
          description: >-
            If free, set to true. If subscription, set to true if one of the
            SubscriptionOffer's entitlements matches the subscriber's
            entitlement from UES. If a Locker Right matches, true.
        leaseEndDate:
          type: string
          description: >-
            For the given Offer, the owned assetRights.endTime, as per
            [ISO8601](https://en.wikipedia.org/wiki/ISO_8601), in UTC. Only be
            populated for rentals.
          format: date-time
          example: '2020-08-14T06:00:00Z'
        modifiedOffer:
          type: array
          description: >-
            List of modified prices based on offerModifiers associated with the
            offer available to the subscriber. Displays the sales price for the
            Offer available to the customer. May have 0..N ModifiedPrices.
          items:
            $ref: '#/components/schemas/ModifiedPrice'
        originalPrice:
          type: number
          description: >-
            Represents the "price of the original offer" for owned transactional
            VOD assets. Price of the Offer at the time of purchase. Not
            necessarily the same as the current price of the Offer since that
            can change. If the VOD asset was purchased via an OfferModifier then
            it can be used to calculate the savings. Sourced from
            OfferInfo.price.
        transactionDate:
          type: string
          description: >-
            ISO8601 UTC-based string for the time when the transaction is
            performed.
          format: date-time
          example: '2020-08-14T06:00:00Z'
        transactionId:
          type: string
          description: Unique identifier of the transaction.
          example: 2B099E52-606E-4D0F-8487-3CF017C7E4DA
        transactionPrice:
          type: number
          description: Price of the offer.
          example: 25.99
        viewTimeLeft:
          type: integer
          description: >-
            Time left in seconds.  If leaseEndDate populated, time between now
            and leaseEndDate.
          format: int32
          example: 33485
      description: >-
        VOD and linear watch options will only return the watchable flag. Offers
        returns full object.
    TvSeasonSummaryModel:
      type: object
      properties:
        totalPrograms:
          type: integer
          format: int32
        totalVods:
          type: integer
          format: int32
        totalOffers:
          type: integer
          format: int32
        totalLinear:
          type: integer
          format: int32
    VodInfoModel:
      type: object
      properties:
        audioType:
          type: string
        colorDepth:
          type: string
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        entityId:
          type: integer
          format: int64
        entityUrn:
          type: string
        videoQuality:
          type: string
          deprecated: true
        programVariant:
          $ref: '#/components/schemas/ProgramVariant'
        offerId:
          type: string
        vodType:
          type: string
        previewAsset:
          $ref: '#/components/schemas/PreviewAssetVod'
        availableDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        liveWindowEndDate:
          type: string
          format: date-time
        stationId:
          type: string
        videoQualities:
          type: array
          items:
            type: string
        durableAppId:
          type: string
        externalAppIds:
          $ref: '#/components/schemas/ExternalAppIds'
        inHomePlayClientProfiles:
          type: array
          items:
            type: string
        locators:
          type: array
          items:
            $ref: '#/components/schemas/LocatorModel'
        outOfHomePlayClientProfiles:
          type: array
          items:
            type: string
        audioTracks:
          type: array
          items:
            $ref: '#/components/schemas/NGPAudioTrack'
        contentDescriptors:
          type: array
          items:
            type: string
        distributorCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        listing:
          $ref: '#/components/schemas/Listing'
        mediaAccountName:
          type: string
        mediaGuid:
          type: string
        playerConfig:
          type: object
          additionalProperties:
            type: string
        providerCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCompany'
        streamingClass:
          type: string
        trickModeRestricted:
          type: array
          items:
            type: string
        vodUrn:
          type: string
        networkGroupCompanies:
          type: array
          description: >-
            List of NetworkGroup (parent) company IDs for the
            showing/watchOption. Not returned for TvGrid listings - in Tv Grid,
            company information is conveyed in XVP Linear's getChannels response
            instead.
          items:
            $ref: '#/components/schemas/ProviderCompany'
        subscriberAccess:
          $ref: '#/components/schemas/SubscriberAccess'
        hasDvs:
          type: boolean
        isSap:
          type: boolean
        isClosedCaption:
          type: boolean
        isSubtitled:
          type: boolean
        isIvod:
          type: boolean
          deprecated: true
        isIVod:
          type: boolean
        isPpv:
          type: boolean
    WatchOptions:
      type: object
      properties:
        vod:
          type: array
          items:
            $ref: '#/components/schemas/VodInfoModel'
        offer:
          type: array
          items:
            $ref: '#/components/schemas/OffersModel'
        linear:
          type: array
          items:
            $ref: '#/components/schemas/LinearInfoModel'
      description: All the ways a user can watch a particular program
    WatchOptionsTvSeason:
      type: object
      properties:
        tvSeasonId:
          type: string
          description: >-
            The merlin ID of the tvSeason. A program level metadata that is
            available only for episodes under a series.
        tvSeasonNumber:
          type: integer
          description: The TV season number. only available in seasonal series.
          format: int32
        tvSeasonSummary:
          $ref: '#/components/schemas/TvSeasonSummaryModel'
        watchOptions:
          $ref: '#/components/schemas/WatchOptions'
        programs:
          type: array
          items:
            $ref: '#/components/schemas/WatchOptionsProgram'
        ungroupedEpisodes:
          type: boolean
    WatchableBase:
      type: object
      properties:
        audioType:
          type: string
        colorDepth:
          type: string
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        entityId:
          type: integer
          format: int64
        entityUrn:
          type: string
        videoQuality:
          type: string
          deprecated: true
        programVariant:
          $ref: '#/components/schemas/ProgramVariant'
        hasDvs:
          type: boolean
        isSap:
          type: boolean
        isClosedCaption:
          type: boolean
        isSubtitled:
          type: boolean
    WatchOptionsProgram:
      type: object
      properties:
        entityId:
          type: integer
          description: >-
            merlin entity Id. Not populated in Browse and Linear API's - use
            ```programId``` field instead.
          format: int64
          example: 8895693464334547000
          deprecated: true
        entityType:
          type: string
          description: >-
            Merlin entity type. Watch Options supports programs only. Text
            Search supports persons, teams, channels, stations and companies.
            Text Search also expands programs into movies, seriesMaster,
            sportingEvents Not populated in Browse API's - use ```kind``` field
            instead.
          example: Program
        entityUrn:
          type: string
          description: >-
            XRN that uniquely identifies a Merlin entity. Not poplulated on
            Linear listings - use ```programUrn``` field instead.
          example: merlin:entity:program:8895693464334547112
        programType:
          type: string
          description: merlin program type.
          example: episode
        sportsSubtitle:
          type: string
          description: >-
            The subtitle for a sporting event, usually indicates which teams are
            included in the event. sportsSubtitle can only be set in programs of
            type: Episode, SeriesMaster, SportingEvent, Other
        synopsis:
          type: string
          description: program synopsis
        title:
          type: string
          description: program title
        episodeTitle:
          type: string
          description: program episode title
        tvSeasonEpisodeNumber:
          type: integer
          description: >-
            Episode number within a season. Returned only if program type is
            "episode" and it is seasonal.
          format: int32
        tvSeriesEpisodeNumber:
          type: integer
          description: >-
            Episode number within the tv series. Returned only if program type
            is "episode" and it is episodic.
          format: int32
        partNumber:
          type: integer
          description: >-
            Indicates which part of the program it is if the program has more
            than one part (for example, with a multi-part episode or similar).
          format: int32
          example: 1
        totalParts:
          type: integer
          description: Indicates the total number of parts of the program.
          format: int32
          example: 2
        tags:
          type: array
          description: tags associated with the program.
          items:
            $ref: '#/components/schemas/Tag'
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
          deprecated: true
        durationMillis:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            zero:
              type: boolean
        tvSeries:
          $ref: '#/components/schemas/TvSeries'
        watchOptions:
          $ref: '#/components/schemas/WatchOptions'
        isAdult:
          type: boolean
          description: >-
            Flag indicating whether content has been tagged for adult audience.
            Not populated in Browse API's - use ```audience``` field instead.
    WatchOptionsTvSeasonResponse:
      type: object
      properties:
        pageSize:
          type: integer
          format: int32
        tvSeasons:
          type: array
          items:
            $ref: '#/components/schemas/WatchOptionsTvSeason'
    Review:
      type: object
      properties:
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        programId:
          type: string
        programUrn:
          type: string
        provider:
          type: string
        reviewId:
          type: string
        reviewUrl:
          type: string
        starRating:
          type: integer
          format: int32
        reviewDetails:
          type: array
          items:
            $ref: '#/components/schemas/ReviewDetail'
    ReviewDetail:
      type: object
      properties:
        category:
          type: string
        value:
          type: integer
          format: int32
        text:
          type: string
    ProgramModel:
      type: object
      properties:
        entityId:
          type: string
        entityType:
          type: string
        programType:
          type: string
        title:
          type: string
        synopsis:
          type: string
        originalAirDate:
          type: string
        isAdult:
          type: boolean
          writeOnly: true
        runtime:
          type: integer
          format: int32
        tvSeason:
          $ref: '#/components/schemas/TvSeasonProgramModel'
        tvSeasonNumber:
          type: integer
          format: int32
        tvSeasonEpisodeNumber:
          type: integer
          format: int32
        tvSeriesEpisodeNumber:
          type: integer
          format: int32
        tvSeries:
          $ref: '#/components/schemas/TvSeriesProgramModel'
        credits:
          type: array
          items:
            $ref: '#/components/schemas/CreditModel'
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        programReviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
        sportsSubtitle:
          type: string
        partNumber:
          type: integer
          format: int32
        totalParts:
          type: integer
          format: int32
        adult:
          type: boolean
    TvSeasonProgramModel:
      type: object
      properties:
        tvSeasonId:
          type: string
        tvSeasonNumber:
          type: integer
          format: int32
    TvSeriesProgramModel:
      type: object
      properties:
        tvSeriesId:
          type: string
        tvSeriesTitle:
          type: string
    WatchOptionsModel:
      type: object
      properties:
        watchOptions:
          $ref: '#/components/schemas/WatchOptions'
    PersonModel:
      type: object
      properties:
        entityId:
          type: string
        entityType:
          type: string
        name:
          type: string
        shortBio:
          type: string
        personType:
          type: string
        merlinResourceType:
          type: string
        knownFor:
          type: array
          items:
            type: string
        credits:
          type: array
          items:
            $ref: '#/components/schemas/CreditModel'
    AppRelease:
      type: object
      properties:
        appConfig:
          type: object
          additionalProperties:
            type: string
        appReleaseId:
          type: string
        appProtocol:
          type: string
        browserType:
          type: string
        configId:
          type: string
        mimeType:
          type: string
        netflixPluginVersion:
          type: integer
          format: int32
        netzynVersion:
          type: string
        phase:
          type: string
        protocolVesrion:
          type: string
        pxSceneVersion:
          type: integer
          format: int32
        quirks:
          type: array
          items:
            type: string
        receiverVersion:
          type: string
        releaseDate:
          type: string
          format: date-time
        releaseVersion:
          type: string
        stbMake:
          type: array
          items:
            type: string
        stbModel:
          type: array
          items:
            type: string
        supportedCatalogTypes:
          type: array
          items:
            type: string
        supportedLanguages:
          type: array
          items:
            type: string
        wlPluginVersion:
          type: integer
          format: int32
        xreReleaseVersion:
          type: string
    BrowseApp:
      type: object
      properties:
        appId:
          type: string
        adult:
          type: boolean
        appReleases:
          type: array
          items:
            $ref: '#/components/schemas/AppRelease'
        contentRatings:
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
        durableAppId:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        lockable:
          type: boolean
        providerCompanies:
          type: array
          items:
            type: string
        synopsis:
          type: string
        title:
          type: string
    BrowseAppResponse:
      type: object
      properties:
        browseItems:
          type: array
          items:
            $ref: '#/components/schemas/BrowseApp'
        itemCount:
          type: integer
          format: int32
  securitySchemes:
    sat:
      type: http
      scheme: bearer
      bearerFormat: JWT
