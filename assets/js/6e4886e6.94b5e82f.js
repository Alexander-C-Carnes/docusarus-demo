"use strict";(self.webpackChunkdeploy_test=self.webpackChunkdeploy_test||[]).push([[4328],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=a,m=u["".concat(o,".").concat(g)]||u[g]||p[g]||i;return n?r.createElement(m,s(s({ref:t},d),{},{components:n})):r.createElement(m,s({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},77712:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={sidebar_position:1,title:"Ingest",tags:["Getting started","Quick Start","Ingest"]},s="Ingest",l={unversionedId:"xvp-docs/getting-started/ingest/index",id:"xvp-docs/getting-started/ingest/index",title:"Ingest",description:"| Last updated | 06/08/2022 |",source:"@site/docs/xvp-docs/getting-started/ingest/index.md",sourceDirName:"xvp-docs/getting-started/ingest",slug:"/xvp-docs/getting-started/ingest/",permalink:"/dousarus-demo/docs/next/xvp-docs/getting-started/ingest/",draft:!1,editUrl:"https://github.com/Alexander-C-Carnes/dousarus-demo/tree/development-branch-RDK/my-website/docs/xvp-docs/getting-started/ingest/index.md",tags:[{label:"Getting started",permalink:"/dousarus-demo/docs/next/tags/getting-started"},{label:"Quick Start",permalink:"/dousarus-demo/docs/next/tags/quick-start"},{label:"Ingest",permalink:"/dousarus-demo/docs/next/tags/ingest"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Ingest",tags:["Getting started","Quick Start","Ingest"]},sidebar:"xvp",previous:{title:"Identity and Access",permalink:"/dousarus-demo/docs/next/xvp-docs/getting-started/identity-and-access/"}},o={},c=[{value:"Status",id:"status",level:2},{value:"Index",id:"index",level:2},{value:"Overview",id:"overview",level:2},{value:"Merlin",id:"merlin",level:2},{value:"Gracenote",id:"gracenote",level:3},{value:"Content Providers",id:"content-providers",level:3},{value:"Content &amp; Subscriber Model",id:"content--subscriber-model",level:2},{value:"Partner Backoffice",id:"partner-backoffice",level:2},{value:"References",id:"references",level:2}],d={toc:c};function p(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ingest"},"Ingest"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Last updated"),(0,a.kt)("th",{parentName:"tr",align:null},"06/08/2022"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Author"),(0,a.kt)("td",{parentName:"tr",align:null},"?!?")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Reviewer"),(0,a.kt)("td",{parentName:"tr",align:null},"Seth Kelly")))),(0,a.kt)("h2",{id:"status"},"Status"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"[DRAFT]")),(0,a.kt)("h2",{id:"index"},"Index"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"[TBD]")),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"This is connected to but separated from XVP.\nIngest capabilities are provided by XMP platform."),(0,a.kt)("h2",{id:"merlin"},"Merlin"),(0,a.kt)("p",null,"Merlin coordinates ingest of a variety of data such as TV Shows, Movies, Sports, Music, etc."),(0,a.kt)("p",null,"It constructs a cannonical representation of entities from each of these domains based on multiple data sources."),(0,a.kt)("p",null,"It also provides general purpose content ingest platform.\nContent is ingested into Merlin-managed accounts and can either be automatically\napproved and published by Merlin or queued up for being editorially matched to existing content.\nClients need to set up a new Open Ingest content source."),(0,a.kt)("p",null,"Beyond content ingest, Merlin also provides a number of services in support of:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"entities"),(0,a.kt)("li",{parentName:"ul"},"entitlements & availabilities"),(0,a.kt)("li",{parentName:"ul"},"ID mappings"),(0,a.kt)("li",{parentName:"ul"},"change notification")),(0,a.kt)("p",null,"Other Merlin services:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://etwiki.sys.comcast.net/display/COMPASS/Merlin+Services"},"Merlin Services"))),(0,a.kt)("h3",{id:"gracenote"},"Gracenote"),(0,a.kt)("p",null,"Unbound Metadata"),(0,a.kt)("h3",{id:"content-providers"},"Content Providers"),(0,a.kt)("p",null,"Bound Metadata"),(0,a.kt)("h2",{id:"content--subscriber-model"},"Content & Subscriber Model"),(0,a.kt)("p",null,"Content Visibility on X1 is dictated by the intersection of ContentAvailability and ContentEntitlements with Subscriber AvailabilityGroups (known as the ARS Blob) and Entitlements."),(0,a.kt)("p",null,'Where an availability group is a combination of catalogs (e.g. VOD) and availabilities (e.g. "UK National").\nARS stands for the Availability Resolution Service, which provides ARS blobs, that are then exchanged with other Comcast systems e.g. CRS, REX.'),(0,a.kt)("p",null,"Through the backoffice, partners needs to:"),(0,a.kt)("p",null,"Create the various Availability and Catalogue Tags\nCreate the various Entitlements\nApply the tags and entitlements to the Content\nApply the tags and entitlements to Subscribers\nThe join of the Availability Groups and Entitlements can be seen below:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Content Visibility",src:n(93896).Z,width:"1552",height:"870"})),(0,a.kt)("h2",{id:"partner-backoffice"},"Partner Backoffice"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Bridge to XMP documentation - external")),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("p",null,"This section is for internal use - not to be published."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://etwiki.sys.comcast.net/display/COMPASS/Merlin+OpenIngest"},"Merlin Open Ingest")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://etwiki.sys.comcast.net/display/COMPASS/Open+GMRSS+Specificationhttps://github.comcast.com/pages/merlin/mmpWebService/2.0/openingest/"},"Merlin Open Ingest Specs"))))}p.isMDXComponent=!0},93896:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/content-visibility-40c4d41489eaa4e89605862f892df7b7.png"}}]);