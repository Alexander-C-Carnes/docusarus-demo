"use strict";(self.webpackChunkdeploy_test=self.webpackChunkdeploy_test||[]).push([[3065],{3905:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>g});var n=i(67294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function s(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?s(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)i=s[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)i=s[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=l(i),g=r,y=d["".concat(c,".").concat(g)]||d[g]||p[g]||s;return i?n.createElement(y,a(a({ref:t},u),{},{components:i})):n.createElement(y,a({ref:t},u))}));function g(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=i.length,a=new Array(s);a[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var l=2;l<s;l++)a[l]=i[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},22816:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=i(87462),r=(i(67294),i(3905));const s={title:"Voice Guidance"},a="Voice Guidance",o={unversionedId:"firebolt/acessibility/voice-guidance",id:"version-0.7.0/firebolt/acessibility/voice-guidance",title:"Voice Guidance",description:"With accessibility settings, it\u2019s important that your app follows your user\u2019s device settings. When an app starts up it should grab your user\u2019s current device accessibility settings and adapt to system accessibility changes that your user makes.",source:"@site/versioned_docs/version-0.7.0/firebolt/acessibility/voice-guidance.md",sourceDirName:"firebolt/acessibility",slug:"/firebolt/acessibility/voice-guidance",permalink:"/docusarus-demo/docs/firebolt/acessibility/voice-guidance",draft:!1,editUrl:"https://github.com/Alexander-C-Carnes/docusarus-demo/tree/development-branch-RDK/my-website/versioned_docs/version-0.7.0/firebolt/acessibility/voice-guidance.md",tags:[],version:"0.7.0",frontMatter:{title:"Voice Guidance"},sidebar:"fireboltDocs",previous:{title:"Closed Captions",permalink:"/docusarus-demo/docs/firebolt/acessibility/closed-captions"},next:{title:"App Lifecycle",permalink:"/docusarus-demo/docs/category/app-lifecycle"}},c={},l=[{value:"Reading device settings",id:"reading-device-settings",level:2},{value:"Adapting to real-time changes",id:"adapting-to-real-time-changes",level:2}],u={toc:l};function p(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"voice-guidance"},"Voice Guidance"),(0,r.kt)("p",null,"With accessibility settings, it\u2019s important that your app follows your user\u2019s device settings. When an app starts up it should grab your user\u2019s current device accessibility settings and adapt to system accessibility changes that your user makes."),(0,r.kt)("h2",{id:"reading-device-settings"},"Reading device settings"),(0,r.kt)("p",null,"In order to access your user's voice guidance settings, your app can call the ",(0,r.kt)("inlineCode",{parentName:"p"},"Accessibility.voiceGuidance()")," method from the ",(0,r.kt)("a",{parentName:"p",href:"/docusarus-demo/docs/next/fireboltAPI/accessibility"},"Accessibility")," API:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Accessibility } from '@firebolt-js/sdk'\n\nconst vgSettings = await Accessibility.voiceGuidance()\n\nif (vgSettings.enabled) {\n  // the user has voice guidance enabled\n}\n")),(0,r.kt)("p",null,"Additionally, your app should respect your user's current voice guidance speed preference. The voice guidance speed determines how quickly or slowly the voice reads the on-screen elements. Continuing from the previous example, you can access the ",(0,r.kt)("inlineCode",{parentName:"p"},"speed")," property:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(vgSettings.speed)\n")),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"/docusarus-demo/docs/next/fireboltAPI/accessibility#voiceguidance"},"Voice Guidance")," API for more info on voice guidance properties."),(0,r.kt)("h2",{id:"adapting-to-real-time-changes"},"Adapting to real-time changes"),(0,r.kt)("p",null,"While your app is running, or even while your app is playing content, your user may change the voice guidance settings on their device. Your app should promptly respond to this change by listening to all ",(0,r.kt)("inlineCode",{parentName:"p"},"voiceGuidanceSettingsChanged")," events:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Accessibility } from '@firebolt-js/sdk'\n\nAccessibility.listen(`voiceGuidanceSettingsChanged`, vgSettings => {\n  // vgSettings is the same structure returned from `voiceGuidance()`\n  if (vgSettings.enabled) {\n    // update your app's voice guidance speed\n    console.log(vgSettings.speed)\n  }\n  else {\n    // turn off your app's voice guidance\n  }\n})\n")))}p.isMDXComponent=!0}}]);